@using UmbracoElevenDemoSite.Core.Features.Shared.Constants
@using UmbracoElevenDemoSite.Core.Features.Shared.Components.ContactForm
@using Smidge
@model UmbracoElevenDemoSite.Core.Features.Shared.Components.ContactForm.ContactFormViewModel
@{
    var responseMessage = TempData[TempDataKey.ResponseMessage] as string;
    SmidgeHelper.RequiresCss(new Smidge.Models.CssFile("~/css/forms.css"));
}
@if (Model != null)
{
    <section class="section">
        <div class="container">
            <div class="col-md-12">
                @if (string.IsNullOrEmpty(responseMessage))
                {
                    if (!string.IsNullOrEmpty(Model.Heading))
                    {
                        <h2>@Model.Heading</h2>
                    }
                    using (Html.BeginUmbracoForm<ContactFormController>(nameof(ContactFormController.Submit)))
                    {
                        @Html.HiddenFor(x => Model.Subject)

                        <div class="form-group">
                            @Html.LabelFor(x => Model.Name, new { @Class = "form-label" })<br />
                            @Html.TextBoxFor(x => Model.Name, new { @Class = "form-control" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => Model.Email, new { @Class = "form-label" })<br />
                            @Html.TextBoxFor(x => Model.Email, new { @Class = "form-control" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => Model.Comment, new { @Class = "form-label" })<br />
                            @Html.TextAreaFor(x => Model.Comment, new { @Class = "form-control" })
                        </div>
                        <input type="submit" />
                    }
                }
                else
                {
                    @Html.Raw(responseMessage)
                }
            </div>
        </div>
    </section>
}