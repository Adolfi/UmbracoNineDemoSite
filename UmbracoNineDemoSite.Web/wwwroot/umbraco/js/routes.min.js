app.config(function($routeProvider){var canRoute=function(authRequired){return{isAuthenticatedAndReady:function($q,userService,$route,assetsService,appState){return $route.current.params.section||!1!==$route.current.params.check&&"false"!==$route.current.params.check?userService.isAuthenticated().then(function(){return assetsService._loadInitAssets().then(function(){var broadcast=!0!==appState.getGlobalState("isReady");return userService.getCurrentUser({broadcastEvent:broadcast}).then(function(user){return authRequired?("default"!==$route.current.params.section.toLowerCase()&&"umbraco"!==$route.current.params.section.toLowerCase()&&""!==$route.current.params.section||($route.current.params.section="content"),_.find(user.allowedSections,function(s){return 0===s.localeCompare($route.current.params.section,void 0,{sensitivity:"accent"})})?$q.when(!0):$q.reject({path:"/"+user.allowedSections[0]})):$q.when(!0)})})},function(){return authRequired?$q.reject({path:"/login/false"}):$q.when(!0)}):$q.when(!0)}}};$routeProvider.when("/",{redirectTo:"/content"}).when("/login",{templateUrl:"views/common/login.html",resolve:canRoute(!1)}).when("/login/:check",{templateUrl:"views/common/login.html",resolve:canRoute(!1)}).when("/logout",{resolve:{isLoggedOut:function($q,$location,userService){return userService.logout().then(function(){return $location.path("/login/false"),$q.when(!0)},function(){return $q.reject({path:"/login/false"})})}}}).when("/:section?",{template:"<div ng-include='templateUrl'></div>",controller:function($scope,$route,$routeParams,$location,sectionService){sectionService.getSectionsForUser().then(function(sections){var found=_.find(sections,function(s){return 0===s.alias.localeCompare($routeParams.section,void 0,{sensitivity:"accent"})});found&&found.routePath?$location.path(found.routePath):($routeParams.url="dashboard.aspx?app="+$routeParams.section,$scope.templateUrl="views/common/dashboard.html")})},reloadOnSearch:!1,resolve:canRoute(!0)}).when("/:section/framed/:url",{templateUrl:function(rp){if(!rp.url)throw"A framed resource must have a url route parameter";return"views/common/legacy.html"},reloadOnSearch:!1,resolve:canRoute(!0)}).when("/:section/:tree/:method?",{template:"<div ng-include='templateUrl'></div>",controller:function($scope,$routeParams,navigationService){if($routeParams.method){if("packages"!==$routeParams.section.toLowerCase()||"packages"!==$routeParams.tree.toLowerCase()||-1!==["edit","options"].indexOf($routeParams.method.toLowerCase())){"users"!==$routeParams.section.toLowerCase()||"users"!==$routeParams.tree.toLowerCase()||-1!==["user","group"].indexOf($routeParams.method.toLowerCase())?$scope.templateUrl=navigationService.getTreeTemplateUrl($routeParams.tree,$routeParams.method):$scope.templateUrl="views/users/overview.html"}else $scope.templateUrl="views/packages/overview.html"}else $scope.templateUrl="views/common/dashboard.html"},reloadOnSearch:!1,resolve:canRoute(!0)}).when("/:section/:tree/:method?/:id",{template:"<div ng-include='templateUrl'></div>",controller:function($scope,$routeParams,navigationService){$routeParams.tree&&$routeParams.method?$scope.templateUrl=navigationService.getTreeTemplateUrl($routeParams.tree,$routeParams.method):$scope.templateUrl="views/common/dashboard.html"},reloadOnSearch:!1,reloadOnUrl:!1,resolve:canRoute(!0)}).otherwise({redirectTo:"/login"})}).config(function($locationProvider){$locationProvider.html5Mode(!1),$locationProvider.hashPrefix("")});