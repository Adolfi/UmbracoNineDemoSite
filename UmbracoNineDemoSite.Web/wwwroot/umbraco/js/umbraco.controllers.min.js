!function(){"use strict";function MainController($scope,$location,appState,treeService,notificationsService,userService,historyService,updateChecker,navigationService,eventsService,tmhDynamicLocale,localStorageService,editorService,overlayService,assetsService,tinyMceAssets){function handleFirstTab(evt){9===evt.keyCode&&function enableTabbingActive(){$scope.tabbingActive=!0,$scope.$digest(),window.addEventListener("mousedown",disableTabbingActive),window.removeEventListener("keydown",handleFirstTab)}()}function disableTabbingActive(evt){$scope.tabbingActive=!1,$scope.$digest(),window.removeEventListener("mousedown",disableTabbingActive),window.addEventListener("keydown",handleFirstTab)}$scope.authenticated=null,$scope.touchDevice=appState.getGlobalState("touchDevice"),$scope.infiniteMode=!1,$scope.overlay={},$scope.drawer={},$scope.search={},$scope.login={},$scope.tabbingActive=!1,tinyMceAssets.forEach(function(tinyJsAsset){assetsService.loadJs(tinyJsAsset,$scope)}),window.addEventListener("keydown",handleFirstTab),$scope.$on("showFocusOutline",function(){$scope.tabbingActive=!0,window.addEventListener("mousedown",disableTabbingActive),window.removeEventListener("keydown",handleFirstTab)}),$scope.removeNotification=function(index){notificationsService.remove(index)},$scope.closeSearch=function(){appState.setSearchState("show",!1)},$scope.showLoginScreen=function(isTimedOut){$scope.login.pageTitle=$scope.$root.locationTitle,$scope.login.isTimedOut=isTimedOut,$scope.login.show=!0},$scope.hideLoginScreen=function(){$scope.$root.locationTitle=$scope.login.pageTitle,$scope.login.show=!1};var evts=[];evts.push(eventsService.on("app.notAuthenticated",function(evt,data){$scope.authenticated=null,$scope.user=null;var isTimedOut=!(!data||!data.isTimedOut);$scope.showLoginScreen(isTimedOut),localStorageService.remove("emailMarketingTourShown"),localStorageService.remove("introTourShown")})),evts.push(eventsService.on("app.userRefresh",function(evt){userService.refreshCurrentUser().then(function(data){$scope.user=data,$scope.user.locale&&tmhDynamicLocale.set($scope.user.locale)})})),evts.push(eventsService.on("app.ready",function(evt,data){if($scope.authenticated=data.authenticated,$scope.user=data.user,updateChecker.check().then(function(update){if(update&&"null"!==update&&"None"!==update.type){var notification={headline:"Update available",message:"Click to download",sticky:!0,type:"info",url:update.url,target:"_blank"};notificationsService.add(notification)}}),void 0!==data.lastUserId&&null!==data.lastUserId&&data.lastUserId!==data.user.id){var section=appState.getSectionState("currentSection");section&&navigationService.reloadSection(section),$location.path("/").search(""),historyService.removeAll(),treeService.clearCache(),editorService.closeAll(),overlayService.close(),localStorageService.clearAll()}"credentials"===data.loginType&&localStorageService.clearAll(),$scope.user.locale&&tmhDynamicLocale.set($scope.user.locale)})),evts.push(eventsService.on("appState.searchState.changed",function(e,args){"show"===args.key&&($scope.search.show=args.value)})),evts.push(eventsService.on("appState.drawerState.changed",function(e,args){"view"===args.key&&($scope.drawer.view=args.value),"model"===args.key&&($scope.drawer.model=args.value),"showDrawer"===args.key&&($scope.drawer.show=args.value)})),evts.push(eventsService.on("appState.overlay",function(name,args){$scope.overlay=args})),evts.push(eventsService.on("appState.tour.start",function(name,args){$scope.tour=args,$scope.tour.show=!0})),evts.push(eventsService.on("appState.tour.end",function(){$scope.tour=null})),evts.push(eventsService.on("appState.tour.complete",function(){$scope.tour=null})),evts.push(eventsService.on("appState.backdrop",function(name,args){$scope.backdrop=args})),evts.push(eventsService.on("appState.editors.open",function(name,args){$scope.infiniteMode=!!(args&&args.editors.length>0)})),evts.push(eventsService.on("appState.editors.close",function(name,args){$scope.infiniteMode=!!(args&&args.editors.length>0)})),$scope.$on("$destroy",function(){for(var e in evts)eventsService.unsubscribe(evts[e])})}function NavigationController($scope,$rootScope,$location,$log,$q,$routeParams,$timeout,$cookies,treeService,appState,navigationService,keyboardService,historyService,eventsService,angularHelper,languageResource,contentTypeResource,editorState){var treeInitPromise=$q.defer();$scope.treeApi={},$scope.onTreeInit=function(){return $scope.treeApi.callbacks.treeNodeExpanded(nodeExpandedHandler),$scope.treeApi.callbacks.treeLoaded(function(args){appState.setTreeState("currentRootNode",args.tree)}),$scope.treeApi.callbacks.treeSynced(function(args){void 0!==args.activate&&!0!==args.activate||appState.setTreeState("selectedNode",args.node)}),$scope.treeApi.callbacks.treeOptionsClick(function(args){args.event.stopPropagation(),args.event.preventDefault(),args.event&&args.event.altKey&&(args.skipDefault=!0),navigationService.showMenu(args)}),$scope.treeApi.callbacks.treeNodeAltSelect(function(args){args.event.stopPropagation(),args.event.preventDefault(),args.skipDefault=!0,navigationService.showMenu(args)}),$scope.treeApi.callbacks.treeNodeSelect(function(args){var n=args.node;if(args.event.stopPropagation(),args.event.preventDefault(),n.metaData&&n.metaData.jsClickCallback&&Utilities.isString(n.metaData.jsClickCallback)&&""!==n.metaData.jsClickCallback){var jsPrefix="javascript:",js;js=n.metaData.jsClickCallback.startsWith(jsPrefix)?n.metaData.jsClickCallback.substr(jsPrefix.length):n.metaData.jsClickCallback;try{var func=eval(js);null!=func&&"function"==typeof func&&func.call()}catch(ex){$log.error("Error evaluating js callback from legacy tree node: "+ex)}}else n.routePath?(historyService.add({name:n.name,link:n.routePath,icon:n.icon}),appState.setTreeState("selectedNode",args.node),$location.path(n.routePath),navigationService.clearSearch()):n.section&&($location.path(n.section),navigationService.clearSearch());navigationService.hideNavigation()}),treeInitPromise.promise},$scope.showContextMenuDialog=!1,$scope.showContextMenu=!1,$scope.showSearchResults=!1,$scope.menuDialogTitle=null,$scope.menuActions=[],$scope.menuNode=null,$scope.languages=[],$scope.selectedLanguage={},$scope.page={},$scope.page.languageSelectorIsOpen=!1,$scope.currentSection=null,$scope.customTreeParams=null,$scope.treeCacheKey="_",$scope.showNavigation=appState.getGlobalState("showNavigation");var expandedPaths=[];keyboardService.bind("ctrl+shift+s",function(){navigationService.showSearch()});var isInit=!1,evts=[];function ensureMainCulture(){if(!$location.search().mculture){var language=lastLanguageOrDefault();language&&$timeout(function(){$scope.selectLanguage(language)})}}function configureTreeAndLanguages(){if("content"===$scope.currentSection){var mainCulture=$location.search().mculture;if(mainCulture&&$scope.languages&&$scope.languages.length>1){var found=_.find($scope.languages,function(l){return!0!==mainCulture&&l.culture.toLowerCase()===mainCulture.toLowerCase()});found&&(found.active=!0,$scope.selectedLanguage=found)}var queryParams={};$scope.selectedLanguage&&$scope.selectedLanguage.culture&&(queryParams.culture=$scope.selectedLanguage.culture,mainCulture||$location.search("mculture",$scope.selectedLanguage.culture));var queryString=$.param(queryParams)}queryString?($scope.customTreeParams=queryString,$scope.treeCacheKey=queryString):$scope.treeCacheKey="_"}function ensureInit(){if(!isInit){isInit=!0;var navInit=!1;$rootScope.$on("$routeChangeSuccess",function(){$routeParams.section&&(navInit||(navInit=!0,initNav()),$scope.currentSection!=$routeParams.section&&appState.setSectionState("currentSection",$routeParams.section))})}}function loadLanguages(){return contentTypeResource.allowsCultureVariation().then(function(b){return!0===b?languageResource.getAll():$q.when([])})}function initNav(){loadLanguages().then(function(languages){if($scope.languages=languages,$scope.languages.length>1){var language=null,mainCulture=$location.search().mculture;mainCulture&&(language=_.find($scope.languages,function(l){return l.culture.toLowerCase()===mainCulture.toLowerCase()})),language||(language=lastLanguageOrDefault())&&$location.search("mculture",language.culture)}$scope.currentSection=$routeParams.section,configureTreeAndLanguages(),treeInitPromise.resolve({section:$scope.currentSection,customTreeParams:$scope.customTreeParams,cacheKey:$scope.treeCacheKey,onLoaded:function onLoaded(){eventsService.emit("app.navigationReady",{treeApi:$scope.treeApi})}})})}function lastLanguageOrDefault(){if(!$scope.languages||$scope.languages.length<=1)return null;var lastCulture=$cookies.get("UMB_MCULTURE"),language=lastCulture?_.find($scope.languages,function(l){return l.culture.toLowerCase()===lastCulture.toLowerCase()}):null;return language||(language=_.find($scope.languages,function(l){return l.isDefault})),language}function nodeExpandedHandler(args){args.node&&treeService._trackExpandedPaths(args.node,expandedPaths)}evts.push(eventsService.on("appState.globalState.changed",function(e,args){"showNavigation"===args.key&&($scope.showNavigation=args.value)})),evts.push(eventsService.on("appState.menuState.changed",function(e,args){"showMenuDialog"===args.key&&($scope.showContextMenuDialog=args.value),"dialogTemplateUrl"===args.key&&($scope.dialogTemplateUrl=args.value),"showMenu"===args.key&&($scope.showContextMenu=args.value),"dialogTitle"===args.key&&($scope.menuDialogTitle=args.value),"menuActions"===args.key&&($scope.menuActions=args.value),"currentNode"===args.key&&($scope.menuNode=args.value)})),evts.push(eventsService.on("appState.treeState.changed",function(e,args){"currentRootNode"===args.key&&(args.value.root&&!1===args.value.root.containsTrees?$rootScope.emptySection=!0:$rootScope.emptySection=!1)})),evts.push(eventsService.on("appState.sectionState.changed",function(e,args){"currentSection"===args.key&&$scope.currentSection!=args.value&&navigationService.waitForNavReady().then(function(){$scope.currentSection=args.value,configureTreeAndLanguages(),$scope.treeApi.load({section:$scope.currentSection,customTreeParams:$scope.customTreeParams,cacheKey:$scope.treeCacheKey})}),"showSearchResults"===args.key&&($scope.showSearchResults=args.value)})),evts.push(eventsService.on("editors.languages.languageDeleted",function(e,args){loadLanguages().then(function(languages){$scope.languages=languages;var defaultCulture=$scope.languages[0].culture;if(args.language.culture===$scope.selectedLanguage.culture){$scope.selectedLanguage=defaultCulture,$scope.languages.length>1?$location.search("mculture",defaultCulture):$location.search("mculture",null);var currentEditorState=editorState.getCurrent();currentEditorState&&currentEditorState.path&&$scope.treeApi.syncTree({path:currentEditorState.path,activate:!0})}})})),evts.push(eventsService.on("editors.languages.languageSaved",function(e,args){args.isNew?loadLanguages().then(function(languages){$scope.languages=languages}):args.language.isDefault&&loadLanguages().then(function(languages){$scope.languages=languages})})),evts.push(eventsService.on("app.notAuthenticated",function(){$scope.authenticated=!1})),evts.push(eventsService.on("app.ready",function(evt,data){$scope.authenticated=!0,ensureInit(),ensureMainCulture()})),evts.push(eventsService.on("appState.editors.open",function(name,args){$scope.infiniteMode=!!(args&&args.editors.length>0)})),evts.push(eventsService.on("appState.editors.close",function(name,args){$scope.infiniteMode=!!(args&&args.editors.length>0)})),evts.push(eventsService.on("treeService.removeNode",function(e,args){var currentEditorState=editorState.getCurrent();if(currentEditorState&&currentEditorState.id.toString()===args.node.id.toString()){var section=appState.getSectionState("currentSection");$location.path("/"+section)}})),$scope.selectLanguage=function(language){$location.search("mculture",language.culture);var expireDate=new Date;expireDate.setDate(expireDate.getDate()+365),$cookies.put("UMB_MCULTURE",language.culture,{path:"/",expires:expireDate}),$scope.page.languageSelectorIsOpen=!1,configureTreeAndLanguages(),$scope.treeApi.load({section:$scope.currentSection,customTreeParams:$scope.customTreeParams,cacheKey:$scope.treeCacheKey}).then(function(){var currNode=appState.getTreeState("selectedNode"),promises=[];if(currNode){var path=treeService.getPath(currNode);promises.push($scope.treeApi.syncTree({path:path,activate:!0}))}Utilities.forEach($scope.languages,function(language){language.active=!1}),language.active=!0,angularHelper.executeSequentialPromises(promises)})},$scope.searchShowMenu=function(ev,args){args.skipDefault=!0,navigationService.showMenu(args)},$scope.searchHide=function(){navigationService.hideSearch()};var treeActive=!1;function closeTree(){appState.getGlobalState("touchDevice")||(treeActive=!1,$timeout(function(){treeActive||navigationService.hideTree()},300))}$scope.enterTree=function(event){treeActive=!0},$scope.leaveTree=function(event){event&&closeTree()},$scope.onOutsideClick=function(){closeTree()},$scope.toggleLanguageSelector=function(){$scope.page.languageSelectorIsOpen=!$scope.page.languageSelectorIsOpen},$scope.$on("$destroy",function(){for(var e in evts)eventsService.unsubscribe(evts[e])})}function AuthorizeUpgradeController($scope,$window){$scope.loginAndRedirect=function(event){var qry=$window.location.search.trimStart("?").split("&"),redir=_.find(qry,function(item){return item.startsWith("redir=")});$window.location=redir?decodeURIComponent(redir.split("=")[1]):"/"}}function DashboardController($scope,$q,$routeParams,$location,dashboardResource,localizationService){var DASHBOARD_QUERY_PARAM="dashboard";$scope.page={},$scope.page.nameLocked=!0,$scope.page.loading=!0,$scope.dashboard={};var promises=[];promises.push(localizationService.localize("sections_"+$routeParams.section).then(function(name){$scope.dashboard.name=name})),promises.push(dashboardResource.getDashboard($routeParams.section).then(function(tabs){$scope.dashboard.tabs=tabs,$scope.dashboard.tabs&&$scope.dashboard.tabs.length>0&&function initActiveTab(){var dashboardAlias=$location.search()[DASHBOARD_QUERY_PARAM],dashboardIndex=$scope.dashboard.tabs.findIndex(function(tab){return tab.alias===dashboardAlias}),activeIndex=-1!==dashboardIndex?dashboardIndex:0,tab=$scope.dashboard.tabs[activeIndex];tab.active=!0,$location.search(DASHBOARD_QUERY_PARAM,tab.alias)}()})),$q.all(promises).then(function(){$scope.page.loading=!1}),$scope.changeTab=function(tab){$scope.dashboard.tabs&&$scope.dashboard.tabs.length>0&&$scope.dashboard.tabs.forEach(function(tab){tab.active=!1}),tab.active=!0,$location.search(DASHBOARD_QUERY_PARAM,tab.alias)}}function IconPickerController($scope,localizationService,iconHelper){var vm=this;function submit(){$scope.model&&$scope.model.submit&&$scope.model.submit($scope.model)}vm.filter={searchTerm:""},vm.selectIcon=function selectIcon(icon,color){$scope.model.icon=icon,$scope.model.color=color,submit()},vm.selectColor=function selectColor(color){var newColor=color||vm.colors.find(function(x){return x.default});$scope.model.color=newColor.value,vm.color=newColor},vm.submit=submit,vm.close=function close(){$scope.model&&$scope.model.close&&$scope.model.close()},vm.colors=[{name:"Black",value:"color-black",default:!0},{name:"Blue Grey",value:"color-blue-grey"},{name:"Grey",value:"color-grey"},{name:"Brown",value:"color-brown"},{name:"Blue",value:"color-blue"},{name:"Light Blue",value:"color-light-blue"},{name:"Indigo",value:"color-indigo"},{name:"Purple",value:"color-purple"},{name:"Deep Purple",value:"color-deep-purple"},{name:"Cyan",value:"color-cyan"},{name:"Green",value:"color-green"},{name:"Light Green",value:"color-light-green"},{name:"Lime",value:"color-lime"},{name:"Yellow",value:"color-yellow"},{name:"Amber",value:"color-amber"},{name:"Orange",value:"color-orange"},{name:"Deep Orange",value:"color-deep-orange"},{name:"Red",value:"color-red"},{name:"Pink",value:"color-pink"}],function onInit(){vm.loading=!0,function setTitle(){$scope.model.title||localizationService.localize("defaultdialogs_selectIcon").then(function(data){$scope.model.title=data})}(),iconHelper.getAllIcons().then(function(icons){vm.icons=icons,iconHelper.getIcons().then(function(icons){if(icons&&icons.length>0){var legacyIcons=icons.filter(function(icon){return!vm.icons.find(function(x){return x.name==icon})}).map(function(icon){return{name:icon,svgString:null}});vm.icons=legacyIcons.concat(vm.icons)}vm.loading=!1})}),vm.color=$scope.model.color?function findColor(value){return vm.colors.find(function(x){return x.value===value})}($scope.model.color):vm.colors.find(function(x){return x.default}),vm.icon=$scope.model.icon?$scope.model.icon:void 0}()}function ItemPickerController($scope,localizationService){function submit(model){$scope.model.submit&&$scope.model.submit(model)}this.selectItem=function selectItem(item){$scope.model.selectedItem=item,submit($scope.model)},this.submit=submit,this.close=function close(){$scope.model.close&&$scope.model.close()},function onInit(){$scope.model.title||localizationService.localize("defaultdialogs_selectItem").then(function(value){$scope.model.title=value})}()}function MacroPickerController($scope,entityResource,macroResource,umbPropEditorHelper,macroService,formHelper,localizationService){function editParams(insertIfNoParameters){insertIfNoParameters=void 0===insertIfNoParameters||insertIfNoParameters,macroResource.getMacroParameters($scope.model.selectedMacro.id).then(function(data){Utilities.isArray(data)&&0!==data.length?($scope.wizardStep="paramSelect",$scope.model.macroParams=data,$scope.model.dialogData&&$scope.model.dialogData.macroData&&$scope.model.dialogData.macroData.macroParamsDictionary&&_.each($scope.model.dialogData.macroData.macroParamsDictionary,function(val,key){var prop=_.find($scope.model.macroParams,function(item){return item.alias==key});if(prop)if(_.isString(val))if((val=_.unescape(val)).detectIsJson())try{prop.value=Utilities.fromJson(val)}catch(e){prop.value=val}else prop.value=val;else prop.value=val})):insertIfNoParameters?$scope.model.submit($scope.model):($scope.wizardStep="macroSelect",displayA11yMessages($scope.macros))})}function displayA11yMessages(macros){$scope.noMacroParams||!macros||0===macros.length?localizationService.localize("general_searchNoResult").then(function(value){$scope.a11yInfo=value}):macros&&(1===macros.length?localizationService.localize("treeSearch_searchResult").then(function(value){$scope.a11yInfo="1 "+value}):localizationService.localize("treeSearch_searchResults").then(function(value){$scope.a11yInfo=macros.length+" "+value}))}$scope.macros=[],$scope.a11yInfo="",$scope.model.selectedMacro=null,$scope.model.macroParams=[],$scope.displayA11YMessageForFilter=function displayA11YMessageForFilter(){displayA11yMessages(_.filter($scope.macros,function(v){return v.name.toLowerCase().includes($scope.model.searchTerm.toLowerCase())}))},$scope.wizardStep="macroSelect",$scope.noMacroParams=!1,$scope.model.searchTerm="",$scope.selectMacro=function(macro){$scope.model.selectedMacro=macro,"macroSelect"===$scope.wizardStep?editParams(!0):($scope.$broadcast("formSubmitting",{scope:$scope}),$scope.model.submit($scope.model))},$scope.close=function(){$scope.model.close&&$scope.model.close()},$scope.model.dialogData&&$scope.model.dialogData.macroData&&($scope.wizardStep="paramSelect"),entityResource.getAll("Macro",$scope.model.dialogData&&$scope.model.dialogData.richTextEditor&&!0===$scope.model.dialogData.richTextEditor?"UseInEditor=true":null).then(function(data){if(Utilities.isArray(data)&&0==data.length&&($scope.nomacros=!0),Utilities.isArray($scope.model.dialogData.allowedMacros)&&$scope.model.dialogData.allowedMacros.length>0?$scope.macros=_.filter(data,function(d){return _.contains($scope.model.dialogData.allowedMacros,d.alias)}):$scope.macros=data,$scope.model.dialogData&&$scope.model.dialogData.macroData&&$scope.model.dialogData.macroData.macroAlias){var found=_.find(data,function(item){return item.alias===$scope.model.dialogData.macroData.macroAlias});if(found)return $scope.model.selectedMacro=found,void editParams(!0)}1==$scope.macros.length?($scope.model.selectedMacro=$scope.macros[0],editParams(!1)):$scope.wizardStep="macroSelect",displayA11yMessages($scope.macros)}),function onInit(){$scope.model.title||localizationService.localize("defaultdialogs_selectMacro").then(function(value){$scope.model.title=value})}()}function LegacyController($scope,$routeParams,$element){var url=decodeURIComponent($routeParams.url.replace(/javascript\:/gi,"")),urlParts=url.split("?"),extIndex=urlParts[0].lastIndexOf("."),ext=-1===extIndex?"":urlParts[0].substr(extIndex);if(".js"===ext&&""!==ext)throw"Invalid url";for(var i=0;i<"*(){}[];:<>\\|'\"".length;i++){var reg=new RegExp("\\"+"*(){}[];:<>\\|'\""[i],"g");urlParts[0]=urlParts[0].replace(reg,"")}url=urlParts[0]+(1===urlParts.length?"":"?"+urlParts[1]),$scope.legacyPath=url}function ItemPickerOverlay($scope,localizationService){$scope.filter={searchTerm:""},$scope.selectItem=function(item){$scope.model.selectedItem=item,$scope.submitForm($scope.model)},$scope.tooltip={show:!1,event:null},$scope.showTooltip=function(item,$event){item.tooltip&&($scope.tooltip={show:!0,event:$event,text:item.tooltip})},$scope.hideTooltip=function(){$scope.tooltip={show:!1,event:null,text:null}},function onInit(){$scope.model.hideSubmitButton=!0,$scope.model.title||localizationService.localize("defaultdialogs_selectItem").then(function(value){$scope.model.title=value}),$scope.model.orderBy||($scope.model.orderBy="name")}()}function contentCreateController($scope,$routeParams,contentTypeResource,iconHelper,$location,navigationService,blueprintConfig,authResource,contentResource,$q){var mainCulture=$routeParams.mculture?$routeParams.mculture:null;function close(){navigationService.hideMenu()}function createBlank(docType){$location.path("/content/content/edit/"+$scope.currentNode.id).search("doctype",docType.alias).search("create","true").search("cculture",mainCulture).search("csegment",null).search("blueprintId",null),close()}function createFromBlueprint(blueprintId){$location.path("/content/content/edit/"+$scope.currentNode.id).search("doctype",$scope.docType.alias).search("create","true").search("blueprintId",blueprintId),close()}$scope.close=function(){close()},$scope.closeDialog=function(showMenu){navigationService.hideDialog(showMenu)},$scope.createContentType=function(){$location.path("/settings/documenttypes/edit/-1").search("create","true"),close()},$scope.editContentType=function(){$location.path("/settings/documenttypes/edit/"+$scope.contentTypeId).search("view","permissions"),close()},$scope.createBlank=createBlank,$scope.createOrSelectBlueprintIfAny=function createOrSelectBlueprintIfAny(docType){var blueprints=_.map(_.pairs(docType.blueprints||{}),function(pair){return{id:pair[0],name:pair[1]}});$scope.docType=docType,blueprints.length?blueprintConfig.skipSelect?createFromBlueprint(blueprints[0].id):($scope.selectContentType=!1,$scope.selectBlueprint=!0,$scope.selectableBlueprints=blueprints):createBlank(docType)},$scope.createFromBlueprint=createFromBlueprint;var unbindModelWatcher=$scope.$watch("currentNode",function initialize(){$scope.loading=!0,$scope.allowedTypes=null;var getAllowedTypes=contentTypeResource.getAllowedTypes($scope.currentNode.id).then(function(data){$scope.allowedTypes=iconHelper.formatContentTypeIcons(data)}),getCurrentUser=authResource.getCurrentUser().then(function(currentUser){if($scope.hasSettingsAccess=currentUser.allowedSections.indexOf("settings")>-1,$scope.hasSettingsAccess&&$scope.currentNode.id>-1)return contentResource.getById($scope.currentNode.id).then(function(data){$scope.contentTypeId=data.contentTypeId})});$q.all([getAllowedTypes,getCurrentUser]).then(function(){if(!0===$scope.hasSettingsAccess&&0===$scope.allowedTypes.length)return contentTypeResource.getCount().then(function(count){$scope.countTypes=count})}).then(function(){$scope.loading=!1}),$scope.selectContentType=!0,$scope.selectBlueprint=!1,$scope.allowBlank=blueprintConfig.allowBlank});$scope.$on("$destroy",function(){unbindModelWatcher()})}function ContentDeleteController($scope,$timeout,contentResource,treeService,navigationService,editorState,$location,overlayService,languageResource){function toggleDeleting(isDeleting){$scope.currentNode.loading=isDeleting,$scope.busy=isDeleting}$scope.performDelete=function(){if($scope.busy)return!1;toggleDeleting(!0),contentResource.deleteById($scope.currentNode.id).then(function(){var rootNode=treeService.getTreeRoot($scope.currentNode);if(treeService.removeNode($scope.currentNode),toggleDeleting(!1),rootNode){var recycleBin=treeService.getDescendantNode(rootNode,-20);recycleBin&&(recycleBin.hasChildren=!0,recycleBin.expanded&&treeService.loadNodeChildren({node:recycleBin,section:"content"}))}if(editorState.current&&editorState.current.id==$scope.currentNode.id){var location="/content";"-20"===$scope.currentNode.parentId.toString()?location="/content/content/recyclebin":"-1"!==$scope.currentNode.parentId.toString()&&(location="/content/content/edit/"+$scope.currentNode.parentId),$location.path(location)}$scope.success=!0},function(err){toggleDeleting(!1),err.status&&err.status>=500&&overlayService.ysod(err)})},$scope.cancel=function(){toggleDeleting(!1),$scope.close()},$scope.close=function(){navigationService.hideDialog()}}function ContentEditController($scope,$routeParams,contentResource){var infiniteMode=$scope.model&&$scope.model.infiniteMode;$scope.contentId=infiniteMode?$scope.model.id:$routeParams.id,$scope.saveMethod=contentResource.save,$scope.getMethod=contentResource.getById,$scope.getScaffoldMethod=$routeParams.blueprintId?function scaffoldBlueprint(){return contentResource.getBlueprintScaffold($routeParams.id,$routeParams.blueprintId)}:infiniteMode?function scaffoldInfiniteEmpty(){return contentResource.getScaffold($scope.model.parentId,$scope.model.documentTypeAlias)}:function scaffoldEmpty(){return contentResource.getScaffold($routeParams.id,$routeParams.doctype)},$scope.page=$routeParams.page,$scope.isNew=infiniteMode?$scope.model.create:$routeParams.create,$scope.culture=$routeParams.cculture?$routeParams.cculture:$routeParams.mculture,$scope.segment=$routeParams.csegment?$routeParams.csegment:null,$scope.$on("$routeUpdate",function(event,next){$scope.culture=next.params.cculture?next.params.cculture:$routeParams.mculture,$scope.segment=next.params.csegment?next.params.csegment:null,$scope.isNew="true"===next.params.create,$scope.contentId=infiniteMode?$scope.model.id:$routeParams.id})}function ContentEmptyRecycleBinController($scope,contentResource,treeService,navigationService,notificationsService,$route){$scope.busy=!1,$scope.performDelete=function(){$scope.busy=!0,$scope.currentNode.loading=!0,contentResource.emptyRecycleBin($scope.currentNode.id).then(function(result){$scope.busy=!1,$scope.currentNode.loading=!1,treeService.removeChildNodes($scope.currentNode),navigationService.hideMenu(),$route.reload()})},$scope.cancel=function(){navigationService.hideDialog()}}function ContentRecycleBinController($scope,$routeParams,contentResource,navigationService,localizationService){$scope.page={},$scope.page.name="Recycle Bin",$scope.page.nameLocked=!0,$scope.listViewPath=null,$routeParams.id="-20",contentResource.getRecycleBin().then(function(result){$scope.content=result}),navigationService.syncTree({tree:"content",path:["-1",$routeParams.id],forceReload:!1}),function localizePageName(){localizationService.localize("general_recycleBin").then(function(value){$scope.page.name=value})}()}function ContentBlueprintCreateController($scope,$location,contentTypeResource,navigationService,appState){var vm=this,node=$scope.currentNode,section=appState.getSectionState("currentSection");vm.createBlueprint=function createBlueprint(documentType){$location.path("/"+section+"/contentBlueprints/edit/"+node.id).search("create","true").search("doctype",documentType.alias),navigationService.hideMenu()},vm.close=function close(){navigationService.hideDialog(!0)},function onInit(){vm.loading=!0,contentTypeResource.getAll().then(function(documentTypes){vm.documentTypes=documentTypes,vm.loading=!1})}()}function ContentBlueprintDeleteController($scope,contentResource,treeService,navigationService){$scope.performDelete=function(){$scope.currentNode.loading=!0,contentResource.deleteBlueprint($scope.currentNode.id).then(function(){$scope.currentNode.loading=!1;treeService.getTreeRoot($scope.currentNode);treeService.removeNode($scope.currentNode),navigationService.hideMenu()})},$scope.cancel=function(){navigationService.hideDialog()}}function ContentBlueprintEditController($scope,$routeParams,contentResource){function initialize(content){if(content.apps&&content.apps.length){var contentApp=_.find(content.apps,function(app){return"umbContent"===app.alias});content.apps=contentApp?[contentApp]:[]}return content.allowPreview=!1,content.allowedActions=["A","S","C"],content}$scope.contentId=$routeParams.id,$scope.isNew="-1"===$routeParams.id,$scope.saveMethod=contentResource.saveBlueprint,$scope.getMethod=function getBlueprintById(id){return contentResource.getBlueprintById(id).then(function(blueprint){return initialize(blueprint)})},$scope.getScaffoldMethod=function getScaffold(){return contentResource.getScaffold(-1,$routeParams.doctype).then(function(scaffold){return initialize(scaffold)})},$scope.culture=$routeParams.cculture?$routeParams.cculture:$routeParams.mculture,$scope.segment=$routeParams.csegment?$routeParams.csegment:null,$scope.$on("$routeUpdate",function(event,next){$scope.culture=next.params.cculture?next.params.cculture:$routeParams.mculture,$scope.segment=next.params.csegment?next.params.csegment:null,$scope.isNew="-1"===$routeParams.id,$scope.contentId=$routeParams.id})}function startUpVideosDashboardController($scope,dashboardResource){$scope.videos=[],$scope.init=function(url){dashboardResource.getRemoteXmlData("COM",url).then(function(data){var feed=$(data.data);$("item",feed).each(function(i,item){var video={};video.thumbnail=$(item).find("thumbnail").attr("url"),video.title=$("title",item).text(),video.link=$("guid",item).text(),$scope.videos.push(video)})},function(exception){console.error("ex from remote data",exception)})}}function startUpDynamicContentController($q,$timeout,$scope,dashboardResource,assetsService,tourService,eventsService){var vm=this;vm.loading=!0,vm.showDefault=!1,vm.startTour=function startTour(tour){tourService.startTour(tour)},vm.defaultDashboard={infoBoxes:[{title:"Documentation",description:"Find the answers to your Umbraco questions",url:"https://our.umbraco.com/documentation/?utm_source=core&utm_medium=dashboard&utm_content=text&utm_campaign=documentation/"},{title:"Community",description:"Find the answers or ask your Umbraco questions",url:"https://our.umbraco.com/?utm_source=core&utm_medium=dashboard&utm_content=text&utm_campaign=our_forum"},{title:"Umbraco.tv",description:"Tutorial videos (some are free, some are on subscription)",url:"https://umbraco.tv/?utm_source=core&utm_medium=dashboard&utm_content=text&utm_campaign=tutorial_videos"},{title:"Training",description:"Real-life training and official Umbraco certifications",url:"https://umbraco.com/training/?utm_source=core&utm_medium=dashboard&utm_content=text&utm_campaign=training"}],articles:[{title:"Umbraco.TV - Learn from the source!",description:"Umbraco.TV will help you go from zero to Umbraco hero at a pace that suits you. Our easy to follow online training videos will give you the fundamental knowledge to start building awesome Umbraco websites.",img:"views/dashboard/default/umbracotv.png",url:"https://umbraco.tv/?utm_source=core&utm_medium=dashboard&utm_content=image&utm_campaign=tv",altText:"Umbraco.TV - Hours of Umbraco Video Tutorials",buttonText:"Visit Umbraco.TV"},{title:"Our Umbraco - The Friendliest Community",description:"Our Umbraco - the official community site is your one stop for everything Umbraco. Whether you need a question answered or looking for cool plugins, the world's best and friendliest community is just a click away.",img:"views/dashboard/default/ourumbraco.png",url:"https://our.umbraco.com/?utm_source=core&utm_medium=dashboard&utm_content=image&utm_campaign=our",altText:"Our Umbraco",buttonText:"Visit Our Umbraco"}]},[].push(eventsService.on("appState.tour.complete",function(name,completedTour){$timeout(function(){Utilities.forEach(vm.tours,function(tourGroup){Utilities.forEach(tourGroup,function(tour){tour.alias===completedTour.alias&&(tour.completed=!0)})})})})),assetsService.loadCss(dashboardResource.getRemoteDashboardCssUrl("content"),$scope),dashboardResource.getRemoteDashboardContent("content").then(function(data){vm.loading=!1,data&&data.sections?vm.dashboard=data:vm.showDefault=!0},function(exception){console.error(exception),vm.loading=!1,vm.showDefault=!0}),function onInit(){tourService.getGroupedTours().then(function(groupedTours){vm.tours=groupedTours})}()}function startupLatestEditsController($scope){}function MediaFolderBrowserDashboardController($scope,$routeParams,$location,contentTypeResource,userService){var currentUser={};userService.getCurrentUser().then(function(user){(currentUser=user).startMediaIds.indexOf(-1)>=0?contentTypeResource.getPropertyTypeScaffold(-96).then(function(dt){$scope.fakeProperty={alias:"contents",config:dt.config,description:"",editor:dt.editor,hideLabel:!0,id:1,label:"Contents:",validation:{mandatory:!1,pattern:null},value:"",view:dt.view},$routeParams.id=-1}):currentUser.startMediaIds.length>0&&$location.path("/media/media/edit/"+(0===currentUser.startMediaIds.length?-1:currentUser.startMediaIds[0]))})}function ExamineManagementController($http,$q,$timeout,umbRequestHelper,localizationService,overlayService,editorService){var vm=this;function setViewState(state){vm.searchResults=null,vm.viewState=state}function search(searcher,e,pageNumber){if(!e||13===e.keyCode){if(!searcher)throw"searcher parameter is required";searcher.isProcessing=!0,umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("examineMgmtBaseUrl","GetSearchResults",{searcherName:searcher.name,query:encodeURIComponent(vm.searchText),pageIndex:pageNumber?pageNumber-1:0})),"Failed to search").then(function(searchResults){searcher.isProcessing=!1,vm.searchResults=searchResults,vm.searchResults.pageNumber=pageNumber||1,vm.searchResults.totalPages=Math.ceil(vm.searchResults.totalRecords/20),_.each(vm.searchResults.results,function(result){var section=result.values.__IndexType[0];switch(section){case"content":case"media":result.editUrl="/"+section+"/"+section+"/edit/"+result.values.__NodeId[0],result.editId=result.values.__NodeId[0],result.editSection=section;break;case"member":result.editUrl="/member/member/edit/"+result.values.__Key[0],result.editId=result.values.__Key[0],result.editSection=section}})})}}vm.indexerDetails=[],vm.searcherDetails=[],vm.loading=!0,vm.viewState="list",vm.selectedIndex=null,vm.selectedSearcher=null,vm.searchResults=null,vm.showSearchResultDialog=function showSearchResultDialog(values){vm.searchResults&&localizationService.localize("examineManagement_fieldValues").then(function(value){editorService.open({title:value,searchResultValues:values,size:"medium",view:"views/dashboard/settings/examinemanagementresults.html",close:function close(){editorService.close()}})})},vm.showIndexInfo=function showIndexInfo(index){vm.selectedIndex=index,setViewState("index-details")},vm.showSearcherInfo=function showSearcherInfo(searcher){vm.selectedSearcher=searcher,setViewState("searcher-details")},vm.search=search,vm.toggle=function toggle(provider,propName){void 0!==provider[propName]?provider[propName]=!provider[propName]:provider[propName]=!0},vm.rebuildIndex=function rebuildIndex(index,event){var dialog={view:"views/dashboard/settings/overlays/examinemanagement.rebuild.html",index:index,submitButtonLabelKey:"general_ok",submitButtonStyle:"danger",submit:function submit(model){!function performRebuild(index){index.isProcessing=!0,index.processingAttempts=0,umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("examineMgmtBaseUrl","PostRebuildIndex",{indexName:index.name})),"Failed to rebuild index").then(function(){$timeout(function(){(function checkProcessing(index,checkActionName){umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("examineMgmtBaseUrl",checkActionName,{indexName:index.name})),"Failed to check index processing").then(function(data){if(null!==data&&"null"!==data){for(var k in data)index[k]=data[k];index.isProcessing=!1}else $timeout(function(){index.processingAttempts<100?(checkProcessing(index,checkActionName),index.processingAttempts++):index.isProcessing=!1},1e3)})})(index,"PostCheckRebuildIndex")})})}(model.index),overlayService.close()},close:function close(){overlayService.close()}};localizationService.localize("examineManagement_rebuildIndex").then(function(value){dialog.title=value,overlayService.open(dialog)}),event.preventDefault(),event.stopPropagation()},vm.setViewState=setViewState,vm.nextSearchResultPage=function nextSearchResultPage(pageNumber){search(vm.selectedIndex?vm.selectedIndex:vm.selectedSearcher,null,pageNumber)},vm.prevSearchResultPage=function prevSearchResultPage(pageNumber){search(vm.selectedIndex?vm.selectedIndex:vm.selectedSearcher,null,pageNumber)},vm.goToPageSearchResultPage=function goToPageSearchResultPage(pageNumber){search(vm.selectedIndex?vm.selectedIndex:vm.selectedSearcher,null,pageNumber)},vm.goToResult=function goToResult(result,event){if(!result.editUrl)return;if(event.ctrlKey||event.shiftKey||event.metaKey||event.button&&1===event.button)return;var editor={id:result.editId,submit:function submit(model){editorService.close()},close:function close(){editorService.close()}};switch(result.editSection){case"content":editorService.contentEditor(editor);break;case"media":editorService.mediaEditor(editor);break;case"member":editorService.memberEditor(editor)}event.stopPropagation(),event.preventDefault()},vm.infoOverlay=null,function init(){$q.all([umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("examineMgmtBaseUrl","GetIndexerDetails")),"Failed to retrieve indexer details").then(function(data){vm.indexerDetails=data}),umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("examineMgmtBaseUrl","GetSearcherDetails")),"Failed to retrieve searcher details").then(function(data){vm.searcherDetails=data})]).then(function(){vm.loading=!1})}()}function modelsBuilderManagementController($scope,$http,umbRequestHelper,modelsBuilderManagementResource){var vm=this;vm.reload=function reload(){vm.loading=!0,modelsBuilderManagementResource.getDashboard().then(function(result){vm.dashboard=result,vm.loading=!1})},vm.generate=function generate(){vm.generating=!0,umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("modelsBuilderBaseUrl","BuildModels")),"Failed to generate.").then(function(result){vm.generating=!1,vm.dashboard=result})},vm.dashboard=null,function init(){vm.loading=!0,modelsBuilderManagementResource.getDashboard().then(function(result){vm.dashboard=result,vm.loading=!1})}()}function ProfilerController($scope,$cookies,$http,umbRequestHelper){var vm=this;vm.loading=!0,vm.toggle=function toggle(){!0===vm.alwaysOn?($cookies.remove("UMB-DEBUG",{path:"/"}),vm.alwaysOn=!1):($cookies.put("UMB-DEBUG","true",{path:"/",expires:"Tue, 01 Jan 2100 00:00:01 GMT"}),vm.alwaysOn=!0)},function init(){vm.alwaysOn="true"===$cookies.get("UMB-DEBUG"),umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("webProfilingBaseUrl","GetStatus")),"Failed to retrieve status for web profiling").then(function(status){vm.loading=!1,vm.profilerEnabled=status.Enabled})}()}function publishedSnapshotCacheController($scope,$http,umbRequestHelper,localizationService,overlayService){var vm=this;function verify(){vm.working||(vm.working=!0,umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("publishedSnapshotCacheStatusBaseUrl","GetStatus")),"Failed to verify the cache.").then(function(result){vm.working=!1,vm.status=result}))}vm.collect=function collect(){if(vm.working)return;vm.working=!0,umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("publishedSnapshotCacheStatusBaseUrl","Collect")),"Failed to verify the cache.").then(function(result){vm.working=!1,vm.status=result})},vm.reload=function reload(event){if(vm.working)return;var dialog={view:"views/dashboard/settings/overlays/nucache.reload.html",submitButtonLabelKey:"general_ok",submit:function submit(model){!function performReload(){vm.working=!0,umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("publishedSnapshotCacheStatusBaseUrl","ReloadCache")),"Failed to trigger a cache reload").then(function(result){vm.working=!1})}(),overlayService.close()},close:function close(){overlayService.close()}};localizationService.localize("general_reload").then(function(value){dialog.title=value,overlayService.open(dialog)}),event.preventDefault(),event.stopPropagation()},vm.verify=verify,vm.rebuild=function rebuild(event){if(vm.working)return;var dialog={view:"views/dashboard/settings/overlays/nucache.rebuild.html",submitButtonLabelKey:"general_ok",submit:function submit(model){!function performRebuild(){vm.working=!0,umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("publishedSnapshotCacheStatusBaseUrl","RebuildDbCache")),"Failed to rebuild the cache.").then(function(result){vm.working=!1,vm.status=result})}(),overlayService.close()},close:function close(){overlayService.close()}};localizationService.localize("general_rebuild").then(function(value){dialog.title=value,overlayService.open(dialog)}),event.preventDefault(),event.stopPropagation()},function init(){vm.working=!1,verify()}()}function publishedStatusController($scope,$http,umbRequestHelper){var vm=this;umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("publishedStatusBaseUrl","GetPublishedStatusUrl")),"Failed to get published status url").then(function(result){vm.includeUrl=result})}function DataTypeCreateController($scope,$location,navigationService,dataTypeResource,formHelper,appState){$scope.model={folderName:"",creatingFolder:!1};var node=$scope.currentNode,section=appState.getSectionState("currentSection");$scope.showCreateFolder=function(){$scope.model.creatingFolder=!0},$scope.createContainer=function(){formHelper.submitForm({scope:$scope,formCtrl:$scope.createFolderForm})&&dataTypeResource.createContainer(node.id,$scope.model.folderName).then(function(folderId){navigationService.hideMenu();var currPath=node.path?node.path:"-1";navigationService.syncTree({tree:"datatypes",path:currPath+","+folderId,forceReload:!0,activate:!0}),formHelper.resetForm({scope:$scope,formCtrl:$scope.createFolderForm})},function(err){formHelper.resetForm({scope:$scope,formCtrl:$scope.createFolderForm,hasErrors:!0})})},$scope.createDataType=function(){$location.search("create",null),$location.path("/"+section+"/datatypes/edit/"+node.id).search("create","true"),navigationService.hideMenu()},$scope.close=function(){navigationService.hideDialog(!0)}}function DataTypeDeleteController($scope,dataTypeResource,treeService,navigationService,localizationService){var vm=this;vm.hasReferences=!1,vm.references=[],vm.performDelete=function(){$scope.currentNode.loading=!0,dataTypeResource.deleteById($scope.currentNode.id).then(function(){$scope.currentNode.loading=!1;treeService.getTreeRoot($scope.currentNode);treeService.removeNode($scope.currentNode),navigationService.hideMenu()})},vm.performContainerDelete=function(){$scope.currentNode.loading=!0,dataTypeResource.deleteContainerById($scope.currentNode.id).then(function(){$scope.currentNode.loading=!1;treeService.getTreeRoot($scope.currentNode);treeService.removeNode($scope.currentNode),navigationService.hideMenu()})},vm.cancel=function(){navigationService.hideDialog()},vm.onReferenceClicked=function(event){!0!==event.metaKey&&navigationService.hideDialog()},vm.labels={},localizationService.localize("editdatatype_acceptDeleteConsequence",[$scope.currentNode.name]).then(function(data){vm.labels.deleteConfirm=data});!function init(){"dataTypes"===$scope.currentNode.nodeType&&(vm.loading=!0,dataTypeResource.getReferences($scope.currentNode.id).then(function(data){vm.loading=!1,vm.references=data,vm.hasReferences=data.documentTypes.length>0||data.mediaTypes.length>0||data.memberTypes.length>0}))}()}function DataTypeEditController($scope,$routeParams,appState,navigationService,dataTypeResource,serverValidationManager,contentEditingHelper,formHelper,editorState,dataTypeHelper,eventsService,localizationService){var evts=[],vm=this;function createPreValueProps(preVals){vm.preValues=dataTypeHelper.createPreValueProps(preVals)}function setHeaderNameState(content){1==content.isSystem&&(vm.page.nameLocked=!0)}function loadDataType(){vm.page.loading=!0,vm.showIdentifier=!0,dataTypeResource.getById($routeParams.id).then(function(data){vm.preValuesLoaded=!0,vm.content=data,createPreValueProps(vm.content.preValues),setHeaderNameState(vm.content),editorState.set(vm.content),serverValidationManager.notifyAndClearAllSubscriptions(),navigationService.syncTree({tree:"datatypes",path:data.path}).then(function(syncArgs){vm.page.menu.currentNode=syncArgs.node}),vm.page.loading=!1})}vm.header={},vm.header.editorfor="visuallyHiddenTexts_newDataType",vm.header.setPageTitle=!0,vm.page={},vm.page.loading=!1,vm.page.menu={},vm.page.menu.currentSection=appState.getSectionState("currentSection"),vm.page.menu.currentNode=null,vm.properties={selectedEditor:{alias:"selectedEditor",description:"Select a property editor",label:"Property editor"}},vm.preValues=[],vm.save=function saveDataType(){formHelper.submitForm({scope:$scope})&&(vm.page.saveButtonState="busy",dataTypeResource.save(vm.content,vm.preValues,$routeParams.create).then(function(data){formHelper.resetForm({scope:$scope}),contentEditingHelper.handleSuccessfulSave({scope:$scope,savedContent:data,rebindCallback:function rebindCallback(){createPreValueProps(data.preValues)}}),setHeaderNameState(vm.content),editorState.set(vm.content),navigationService.syncTree({tree:"datatypes",path:data.path,forceReload:!0}).then(function(syncArgs){vm.page.menu.currentNode=syncArgs.node}),vm.page.saveButtonState="success",dataTypeHelper.rebindChangedProperties(vm.content,data)},function(err){formHelper.resetForm({scope:$scope,hasErrors:!0}),contentEditingHelper.handleSaveError({err:err}),vm.page.saveButtonState="error",editorState.set(vm.content)}))},evts.push(eventsService.on("app.refreshEditor",function(name,error){loadDataType()})),$scope.$on("$destroy",function(){for(var e in evts)eventsService.unsubscribe(evts[e])}),function init(){$scope.$watch("vm.content.selectedEditor",function(newVal,oldVal){if(newVal&&newVal!=oldVal&&(oldVal||$routeParams.create)){var currDataTypeId=$routeParams.create?void 0:$routeParams.id;dataTypeResource.getPreValues(newVal,currDataTypeId).then(function(data){vm.preValuesLoaded=!0,vm.content.preValues=data,createPreValueProps(vm.content.preValues),setHeaderNameState(vm.content),editorState.set(vm.content)})}}),$routeParams.create?(vm.page.loading=!0,vm.showIdentifier=!1,dataTypeResource.getScaffold($routeParams.id).then(function(data){vm.preValuesLoaded=!0,vm.content=data,setHeaderNameState(vm.content),editorState.set(vm.content),vm.page.loading=!1})):loadDataType(),localizationService.localizeMany(["general_settings","general_info"]).then(function(values){vm.page.navigation=[{name:values[0],alias:"settings",icon:"icon-settings",view:"views/datatypes/views/datatype.settings.html",active:!0},{name:values[1],alias:"info",icon:"icon-info",view:"views/datatypes/views/datatype.info.html"}]})}()}function DataTypeInfoController($scope,$routeParams,dataTypeResource,eventsService,$timeout,editorService){var vm=this,evts=[],referencesLoaded=!1;function loadRelations(){referencesLoaded||(referencesLoaded=!0,dataTypeResource.getReferences($routeParams.id).then(function(data){vm.view.loading=!1,vm.references=data,vm.hasReferences=data.documentTypes.length>0||data.mediaTypes.length>0||data.memberTypes.length>0}))}function open(id,event,type){if(!(event.ctrlKey||event.shiftKey||event.metaKey||event.button&&1===event.button)){event.stopPropagation(),event.preventDefault();var editor={id:id,submit:function submit(model){editorService.close(),vm.view.loading=!0,referencesLoaded=!1,loadRelations()},close:function close(){editorService.close()}};switch(type){case"documentType":editorService.documentTypeEditor(editor);break;case"mediaType":editorService.mediaTypeEditor(editor);break;case"memberType":editorService.memberTypeEditor(editor)}}}vm.references={},vm.hasReferences=!1,vm.view={},vm.view.loading=!0,vm.openDocumentType=function openDocumentType(id,event){open(id,event,"documentType")},vm.openMediaType=function openMediaType(id,event){open(id,event,"mediaType")},vm.openMemberType=function openMemberType(id,event){open(id,event,"memberType")},evts.push(eventsService.on("app.tabChange",function(event,args){$timeout(function(){"info"===args.alias&&loadRelations()})})),$scope.$on("$destroy",function(){for(var e in evts)eventsService.unsubscribe(evts[e])})}function DictionaryCreateController($scope,$location,dictionaryResource,navigationService,notificationsService,formHelper,appState){var vm=this;vm.itemKey="",vm.createItem=function createItem(){if(formHelper.submitForm({scope:$scope,formCtrl:$scope.createDictionaryForm})){var node=$scope.currentNode;dictionaryResource.create(node.id,vm.itemKey).then(function(data){navigationService.hideMenu();var currPath=node.path?node.path:"-1";navigationService.syncTree({tree:"dictionary",path:currPath+","+data,forceReload:!0,activate:!0}),formHelper.resetForm({scope:$scope,formCtrl:$scope.createDictionaryForm});var currentSection=appState.getSectionState("currentSection");$location.path("/"+currentSection+"/dictionary/edit/"+data)},function(err){formHelper.resetForm({scope:$scope,formCtrl:$scope.createDictionaryForm,hasErrors:!0}),err.data&&err.data.message&&(notificationsService.error(err.data.message),navigationService.hideMenu())})}},$scope.$emit("$changeTitle","")}function DictionaryDeleteController($scope,$location,dictionaryResource,treeService,navigationService,appState){this.cancel=function cancel(){navigationService.hideDialog()},this.performDelete=function performDelete(){if($scope.busy)return!1;$scope.currentNode.loading=!0,$scope.busy=!0,dictionaryResource.deleteById($scope.currentNode.id).then(function(){$scope.currentNode.loading=!1;var parentId=$scope.currentNode.parentId;treeService.removeNode($scope.currentNode),navigationService.hideMenu();var currentSection=appState.getSectionState("currentSection");"-1"!==parentId?$location.path("/"+currentSection+"/dictionary/edit/"+parentId):$location.path("/"+currentSection+"/")})}}function DictionaryEditController($scope,$routeParams,$location,dictionaryResource,navigationService,appState,editorState,contentEditingHelper,formHelper,notificationsService,localizationService){var vm=this;function bindDictionary(data){localizationService.localize("dictionaryItem_description").then(function(value){vm.description=value.replace("%0%",data.name)});for(var i=0;i<data.translations.length;i++)data.translations[i].property={alias:(translation=data.translations[i]).isoCode,label:translation.displayName,hideLabel:!1},change(data.translations[i]);var translation;contentEditingHelper.handleSuccessfulSave({scope:$scope,savedContent:data}),vm.content=data,editorState.set(vm.content),navigationService.syncTree({tree:"dictionary",path:data.path,forceReload:!0}).then(function(syncArgs){vm.page.menu.currentNode=syncArgs.node})}function change(translation){if(translation.translation){var charsCount=translation.translation.length;translation.nearMaxLimit=charsCount>Math.max(.8*vm.maxlength,vm.maxlength-50)}}vm.nameDirty=!1,vm.header={},vm.header.editorfor="template_insertDictionaryItem",vm.header.setPageTitle=!0,vm.page={},vm.page.loading=!1,vm.page.nameLocked=!1,vm.page.menu={},vm.page.menu.currentSection=appState.getSectionState("currentSection"),vm.page.menu.currentNode=null,vm.description="",vm.showBackButton=!0,vm.maxlength=1e3,vm.save=function saveDictionary(){formHelper.submitForm({scope:$scope,statusMessage:"Saving..."})&&(vm.page.saveButtonState="busy",dictionaryResource.save(vm.content,vm.nameDirty).then(function(data){formHelper.resetForm({scope:$scope}),bindDictionary(data),vm.page.saveButtonState="success"},function(err){formHelper.resetForm({scope:$scope,hasErrors:!0}),contentEditingHelper.handleSaveError({err:err}),notificationsService.error(err.data.message),vm.page.saveButtonState="error"}))},vm.back=function back(){$location.path(vm.page.menu.currentSection+"/dictionary/list")},vm.change=change,$scope.$watch("vm.content.name",function(newVal,oldVal){newVal&&newVal!==oldVal&&void 0!==oldVal&&(vm.nameDirty=!0)}),function onInit(){!function loadDictionary(){vm.page.loading=!0,dictionaryResource.getById($routeParams.id).then(function(data){bindDictionary(data),vm.page.loading=!1})}()}()}function DictionaryListController($scope,$location,dictionaryResource,localizationService,appState){var vm=this;vm.title="Dictionary overview",vm.loading=!1,vm.items=[],vm.clickItem=function clickItem(id){var currentSection=appState.getSectionState("currentSection");$location.path("/"+currentSection+"/dictionary/edit/"+id)},function onInit(){localizationService.localize("dictionaryItem_overviewTitle").then(function(value){vm.title=value}),function loadList(){vm.loading=!0,dictionaryResource.getList().then(function(data){vm.items=data,vm.items.forEach(function(item){item.style={paddingLeft:10*item.level}}),vm.loading=!1})}()}()}function DocumentTypesCreateController($scope,$location,navigationService,contentTypeResource,formHelper,appState,notificationsService,localizationService,iconHelper){$scope.model={allowCreateFolder:null===$scope.currentNode.parentId||"container"===$scope.currentNode.nodeType,folderName:"",creatingFolder:!1};var disableTemplates=Umbraco.Sys.ServerVariables.features.disabledFeatures.disableTemplates;$scope.model.disableTemplates=disableTemplates;var node=$scope.currentNode;$scope.showCreateFolder=function(){$scope.model.creatingFolder=!0},$scope.createContainer=function(){formHelper.submitForm({scope:$scope,formCtrl:$scope.createFolderForm})&&contentTypeResource.createContainer(node.id,$scope.model.folderName).then(function(folderId){navigationService.hideMenu();var currPath=node.path?node.path:"-1";navigationService.syncTree({tree:"documenttypes",path:currPath+","+folderId,forceReload:!0,activate:!0}),formHelper.resetForm({scope:$scope,formCtrl:$scope.createFolderForm});appState.getSectionState("currentSection")},function(err){formHelper.resetForm({scope:$scope,formCtrl:$scope.createFolderForm,hasErrors:!0}),$scope.error=err})},disableTemplates||($scope.createDocType=function(){$location.search("create",null),$location.search("notemplate",null),$location.path("/settings/documenttypes/edit/"+node.id).search("create","true"),navigationService.hideMenu()}),$scope.createComponent=function(){$location.search("create",null),$location.search("notemplate",null),$location.path("/settings/documenttypes/edit/"+node.id).search("create","true").search("notemplate","true"),navigationService.hideMenu()},$scope.createComposition=function(){$location.search("create",null),$location.search("notemplate",null),$location.search("iscomposition",null),$location.path("/settings/documenttypes/edit/"+node.id).search("create","true").search("notemplate","true").search("iscomposition","true"),navigationService.hideMenu()},$scope.createElement=function(){$location.search("create",null),$location.search("notemplate",null),$location.search("iselement",null),$location.path("/settings/documenttypes/edit/"+node.id).search("create","true").search("notemplate","true").search("iselement","true"),navigationService.hideMenu()},$scope.close=function(){navigationService.hideDialog(!0)}}function DocumentTypesDeleteController($scope,dataTypeResource,contentTypeResource,treeService,navigationService,localizationService){$scope.performDelete=function(){$scope.currentNode.loading=!0,contentTypeResource.deleteById($scope.currentNode.id).then(function(){$scope.currentNode.loading=!1;treeService.getTreeRoot($scope.currentNode);treeService.removeNode($scope.currentNode),navigationService.hideMenu()})},$scope.performContainerDelete=function(){$scope.currentNode.loading=!0,contentTypeResource.deleteContainerById($scope.currentNode.id).then(function(){$scope.currentNode.loading=!1;treeService.getTreeRoot($scope.currentNode);treeService.removeNode($scope.currentNode),navigationService.hideMenu()})},$scope.cancel=function(){navigationService.hideDialog()},$scope.labels={},localizationService.format(["contentTypeEditor_yesDelete","contentTypeEditor_andAllDocuments"],"%0% "+$scope.currentNode.name+" %1%").then(function(data){$scope.labels.deleteConfirm=data})}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(arr,i){if(Symbol.iterator in Object(arr)||"[object Arguments]"===Object.prototype.toString.call(arr)){var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(arr,i){if(Symbol.iterator in Object(arr)||"[object Arguments]"===Object.prototype.toString.call(arr)){var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function MacrosCreateController($scope,$location,macroResource,navigationService,notificationsService,formHelper,appState){var vm=this;vm.itemKey="",vm.createItem=function createItem(){if(formHelper.submitForm({scope:$scope,formCtrl:$scope.createMacroForm})){var node=$scope.currentNode;macroResource.createMacro(vm.itemKey).then(function(data){navigationService.hideMenu();var currPath=node.path?node.path:"-1";navigationService.syncTree({tree:"macros",path:currPath+","+data,forceReload:!0,activate:!0}),formHelper.resetForm({scope:$scope,formCtrl:$scope.createMacroForm});var currentSection=appState.getSectionState("currentSection");$location.path("/"+currentSection+"/macros/edit/"+data)},function(err){formHelper.resetForm({scope:$scope,formCtrl:$scope.createMacroForm,hasErrors:!0}),err.data&&err.data.message&&(notificationsService.error(err.data.message),navigationService.hideMenu())})}}}function MacrosDeleteController($scope,macroResource,navigationService,treeService){this.name=$scope.currentNode.name,this.performDelete=function performDelete(){$scope.currentNode.loading=!0,macroResource.deleteById($scope.currentNode.id).then(function(){$scope.currentNode.loading=!1,treeService.removeNode($scope.currentNode),navigationService.hideMenu()})},this.cancel=function cancel(){navigationService.hideDialog()}}function MacrosEditController($scope,$q,$routeParams,macroResource,editorState,navigationService,formHelper,contentEditingHelper,localizationService,angularHelper){var vm=this;function bindMacro(data){vm.macro=data,vm.macro&&vm.macro.view&&(vm.macro.node={icon:"icon-article",name:vm.macro.view}),editorState.set(vm.macro),navigationService.syncTree({tree:"macros",path:vm.macro.path,forceReload:!0}).then(function(syncArgs){vm.page.menu.currentNode=syncArgs.node})}vm.promises={},vm.header={},vm.header.editorfor="general_macro",vm.header.setPageTitle=!0,vm.page={},vm.page.loading=!1,vm.page.saveButtonState="init",vm.page.menu={},vm.labels={},vm.toggle=function toggleValue(key){vm.macro[key]=!vm.macro[key]},vm.save=function saveMacro(){formHelper.submitForm({scope:$scope,statusMessage:"Saving..."})&&(vm.page.saveButtonState="busy",macroResource.saveMacro(vm.macro).then(function(data){formHelper.resetForm({scope:$scope}),bindMacro(data),vm.page.saveButtonState="success"},function(error){formHelper.resetForm({scope:$scope,hasErrors:!0}),contentEditingHelper.handleSaveError({err:error}),vm.page.saveButtonState="error"}))},vm.setDirty=function setFormDirty(){var currentForm=angularHelper.getCurrentForm($scope);currentForm&&currentForm.$setDirty()},function init(){vm.page.loading=!0,vm.promises.partialViews=function getPartialViews(){var deferred=$q.defer();return macroResource.getPartialViews().then(function(data){deferred.resolve(data)},function(){deferred.reject()}),deferred.promise}(),vm.promises.macro=function getMacro(){var deferred=$q.defer();return macroResource.getById($routeParams.id).then(function(data){deferred.resolve(data)},function(){deferred.reject()}),deferred.promise}(),vm.views=[],vm.node=null,$q.all(vm.promises).then(function(values){for(var keys=Object.keys(values),i=0;i<keys.length;i++){var key=keys[i];"partialViews"===key&&(vm.views=values[key]),"macro"===key&&bindMacro(values[key])}vm.page.loading=!1}),localizationService.localizeMany(["general_settings","macro_parameters"]).then(function(values){vm.labels.settings=values[0],vm.labels.parameters=values[1],vm.page.navigation=[{name:vm.labels.settings,alias:"settings",icon:"icon-settings",view:"views/macros/views/settings.html",active:!0},{name:vm.labels.parameters,alias:"parameters",icon:"icon-list",view:"views/macros/views/parameters.html"}]})}()}function MacrosParametersController($scope,$q,editorService,localizationService,macroResource){var vm=this;function getParameterEditorByAlias(alias){var deferred=$q.defer();return macroResource.getParameterEditorByAlias(alias).then(function(data){deferred.resolve(data)},function(){deferred.reject()}),deferred.promise}function openOverlay(parameter,title,onSubmit){var ruleDialog={title:title,parameter:_.clone(parameter),view:"views/macros/infiniteeditors/parameter.html",size:"small",submit:function submit(model){onSubmit(model.parameter),editorService.close()},close:function close(){editorService.close()}};editorService.open(ruleDialog)}function setDirty(){$scope.model.setDirty()}vm.add=function add(evt){evt.preventDefault(),openOverlay({},vm.labels.addParameter,function(newParameter){$scope.model.macro.parameters||($scope.model.macro.parameters=[]),$scope.model.macro.parameters.push(newParameter),setDirty()})},vm.edit=function edit(parameter,evt){evt.preventDefault();var promises=[getParameterEditorByAlias(parameter.editor)];$q.all(promises).then(function(values){parameter.dataTypeName=values[0].name,openOverlay(parameter,vm.labels.editParameter,function(newParameter){parameter.key=newParameter.key,parameter.label=newParameter.label,parameter.editor=newParameter.editor,setDirty()})})},vm.remove=function remove(parameter,evt){evt.preventDefault(),$scope.model.macro.parameters=_.without($scope.model.macro.parameters,parameter),setDirty()},vm.labels={},$scope.sortableOptions={axis:"y",containment:"parent",cursor:"move",items:"> div.control-group",handle:".handle",tolerance:"pointer",update:function update(e,ui){setDirty()}},function init(){localizationService.localizeMany(["macro_addParameter","macro_editParameter"]).then(function(data){vm.labels.addParameter=data[0],vm.labels.editParameter=data[1]})}()}function MacrosSettingsController($scope,editorService,localizationService){$scope.model.openViewPicker=function openViewPicker(){var controlPicker={title:labels.selectViewFile,section:"settings",treeAlias:"partialViewMacros",entityType:"partialView",onlyInitialized:!1,filter:function filter(i){if(-1===i.name.indexOf(".cshtml")&&-1===i.name.indexOf(".vbhtml"))return!0},filterCssClass:"not-allowed",select:function select(node){var id=decodeURIComponent(node.id.replace(/\+/g," "));$scope.model.macro.view="~/Views/MacroPartials/"+id,$scope.model.macro.node={icon:node.icon,name:$scope.model.macro.view},editorService.close()},close:function close(){editorService.close()}};editorService.treePicker(controlPicker)},$scope.model.removeMacroView=function removeMacroView(){$scope.model.macro.node=null,$scope.model.macro.view=null};var labels={};localizationService.localizeMany(["macro_selectViewFile"]).then(function(data){labels.selectViewFile=data[0]})}function mediaCreateController($scope,$location,mediaTypeResource,iconHelper,navigationService,authResource,mediaResource){$scope.createMediaItem=function(docType){$location.path("/media/media/edit/"+$scope.currentNode.id).search("doctype",docType.alias).search("create","true"),navigationService.hideMenu()},$scope.close=function(){navigationService.hideMenu()},$scope.closeDialog=function(){navigationService.hideDialog(!0)};var unbindModelWatcher=$scope.$watch("currentNode",function initialize(){$scope.allowedTypes=null,mediaTypeResource.getAllowedTypes($scope.currentNode.id).then(function(data){$scope.allowedTypes=iconHelper.formatContentTypeIcons(data)}),$scope.currentNode.id>-1&&authResource.getCurrentUser().then(function(currentUser){currentUser.allowedSections.indexOf("settings")>-1&&($scope.hasSettingsAccess=!0,mediaResource.getById($scope.currentNode.id).then(function(data){$scope.mediaTypeId=data.contentType.id}))})});$scope.$on("$destroy",function(){unbindModelWatcher()})}function MediaDeleteController($scope,mediaResource,treeService,navigationService,editorState,$location,overlayService){$scope.performDelete=function(){if($scope.busy)return!1;$scope.currentNode.loading=!0,$scope.busy=!0,mediaResource.deleteById($scope.currentNode.id).then(function(){$scope.currentNode.loading=!1;var rootNode=treeService.getTreeRoot($scope.currentNode);if(treeService.removeNode($scope.currentNode),rootNode){var recycleBin=treeService.getDescendantNode(rootNode,-21);recycleBin&&(recycleBin.hasChildren=!0,recycleBin.expanded&&treeService.loadNodeChildren({node:recycleBin,section:"media"}))}if(editorState.current&&editorState.current.id==$scope.currentNode.id){var location="/media";"-21"===$scope.currentNode.parentId.toString()?location="/media/media/recyclebin":"-1"!==$scope.currentNode.parentId.toString()&&(location="/media/media/edit/"+$scope.currentNode.parentId),$location.path(location)}$scope.success=!0},function(err){$scope.currentNode.loading=!1,$scope.busy=!1,err.status&&err.status>=500&&overlayService.ysod(err)})},$scope.close=function(){navigationService.hideDialog()}}function mediaEditController($scope,$routeParams,$location,$http,$q,appState,mediaResource,entityResource,navigationService,notificationsService,localizationService,serverValidationManager,contentEditingHelper,fileManager,formHelper,editorState,umbRequestHelper,eventsService){var evts=[],nodeId=null,create=!1,infiniteMode=$scope.model&&$scope.model.infiniteMode;function init(){var content=$scope.content,isAppPresent=!1;$scope.app&&(content.apps.forEach(function(app){app===$scope.app&&(isAppPresent=!0)}),!1===isAppPresent&&content.apps.forEach(function(app){app.alias===$scope.app.alias&&(isAppPresent=!0,app.active=!0,$scope.appChanged(app))})),!1===isAppPresent&&(content.apps[0].active=!0,$scope.appChanged(content.apps[0])),editorState.set($scope.content),function bindEvents(){for(var e in evts)eventsService.unsubscribe(evts[e]);evts.push(eventsService.on("editors.mediaType.saved",function(name,args){args&&args.mediaType&&args.mediaType.key===$scope.content.contentType.key&&($scope.page.loading=!0,loadMedia().then(function(){$scope.page.loading=!1},function(){$scope.page.loading=!1}))}))}()}function syncTreeNode(content,path,initialLoad){infiniteMode||($scope.content.isChildOfListView?!0===initialLoad&&(navigationService.syncTree({tree:"media",path:path.substring(0,path.lastIndexOf(",")).split(","),forceReload:!0!==initialLoad}),umbRequestHelper.resourcePromise($http.get(content.treeNodeUrl),"Failed to retrieve data for child node "+content.id).then(function(node){$scope.page.menu.currentNode=node})):navigationService.syncTree({tree:"media",path:path.split(","),forceReload:!0!==initialLoad}).then(function(syncArgs){$scope.page.menu.currentNode=syncArgs.node}))}function loadMedia(){return mediaResource.getById(nodeId).then(function(data){$scope.content=data,data.isChildOfListView&&!1===data.trashed&&($scope.page.listViewPath=$routeParams.page?"/media/media/edit/"+data.parentId+"?page="+$routeParams.page:"/media/media/edit/"+data.parentId),editorState.set($scope.content),serverValidationManager.notifyAndClearAllSubscriptions(),infiniteMode||syncTreeNode($scope.content,data.path,!0),$scope.content.parentId&&-1!==$scope.content.parentId&&-21!==$scope.content.parentId&&entityResource.getAncestors(nodeId,"media").then(function(anc){$scope.ancestors=anc}),init(),$scope.page.loading=!1,$q.resolve($scope.content)},function(error){$scope.page.loading=!1,$q.reject(error)})}nodeId=infiniteMode&&$scope.model.id?$scope.model.id:$routeParams.id,create=infiniteMode?$scope.model.create:$routeParams.create,$scope.currentSection=appState.getSectionState("currentSection"),$scope.currentNode=null,$scope.header={},$scope.header.setPageTitle="media"===$scope.currentSection,$scope.page={},$scope.page.loading=!1,$scope.page.menu={},$scope.page.menu.currentSection=appState.getSectionState("currentSection"),$scope.page.menu.currentNode=null,$scope.page.listViewPath=null,$scope.page.saveButtonState="init",$scope.page.submitButtonLabelKey="buttons_save",$scope.app=null,create?($scope.page.loading=!0,mediaResource.getScaffold(nodeId,$routeParams.doctype).then(function(data){$scope.content=data,init(),$scope.page.loading=!1},function(){$scope.page.loading=!1})):($scope.page.loading=!0,loadMedia().then(function(){$scope.page.loading=!1},function(){$scope.page.loading=!1})),$scope.page.submitButtonLabelKey="buttons_save",$scope.save=function(){formHelper.submitForm({scope:$scope})?($scope.page.saveButtonState="busy",mediaResource.save($scope.content,create,fileManager.getFiles()).then(function(data){return formHelper.resetForm({scope:$scope}),infiniteMode&&$scope.model.submit?($scope.model.mediaNode=$scope.content,$scope.model.submit($scope.model)):(contentEditingHelper.handleSuccessfulSave({scope:$scope,savedContent:data,rebindCallback:contentEditingHelper.reBindChangedProperties($scope.content,data)}),editorState.set($scope.content),syncTreeNode($scope.content,data.path),$scope.page.saveButtonState="success",init()),eventsService.emit("editors.media.saved",{media:data}),data},function(err){formHelper.resetForm({scope:$scope,hasErrors:!0}),contentEditingHelper.handleSaveError({err:err,rebindCallback:contentEditingHelper.reBindChangedProperties($scope.content,err.data)}),editorState.set($scope.content),$scope.page.saveButtonState="error"})):function showValidationNotification(){localizationService.localizeMany(["speechBubbles_validationFailedHeader","speechBubbles_validationFailedMessage"]).then(function(data){notificationsService.error(data[0],data[1])})}()},$scope.close=function(){$scope.model.close&&$scope.model.close($scope.model)},$scope.appChanged=function(app){$scope.app=app,infiniteMode&&($scope.page.submitButtonLabelKey="buttons_saveAndClose")},$scope.showBack=function(){return!infiniteMode&&!!$scope.page.listViewPath},$scope.onBack=function(){$scope.page.listViewPath&&$location.path($scope.page.listViewPath.split("?")[0])},$scope.$on("$destroy",function(){for(var e in evts)eventsService.unsubscribe(evts[e])})}function MediaEmptyRecycleBinController($scope,mediaResource,treeService,navigationService,notificationsService,$route){$scope.busy=!1,$scope.performDelete=function(){$scope.busy=!0,$scope.currentNode.loading=!0,mediaResource.emptyRecycleBin($scope.currentNode.id).then(function(result){$scope.busy=!1,$scope.currentNode.loading=!1,treeService.removeChildNodes($scope.currentNode),navigationService.hideMenu(),$route.reload()})},$scope.cancel=function(){navigationService.hideDialog()}}function MediaRecycleBinController($scope,$routeParams,mediaResource,navigationService,localizationService){$scope.page={},$scope.page.name="Recycle Bin",$scope.page.nameLocked=!0,$scope.listViewPath=null,$routeParams.id="-21",mediaResource.getRecycleBin().then(function(result){$scope.content=result}),navigationService.syncTree({tree:"media",path:["-1",$routeParams.id],forceReload:!1}),function localizePageName(){localizationService.localize("general_recycleBin").then(function(value){$scope.page.name=value})}()}function MediaTypesCreateController($scope,$location,navigationService,mediaTypeResource,formHelper,appState,localizationService){$scope.model={folderName:"",creatingFolder:!1};var node=$scope.currentNode;$scope.showCreateFolder=function(){$scope.model.creatingFolder=!0},$scope.createContainer=function(){formHelper.submitForm({scope:$scope,formCtrl:$scope.createFolderForm})&&mediaTypeResource.createContainer(node.id,$scope.model.folderName).then(function(folderId){navigationService.hideMenu();var currPath=node.path?node.path:"-1";navigationService.syncTree({tree:"mediatypes",path:currPath+","+folderId,forceReload:!0,activate:!0}),formHelper.resetForm({scope:$scope,formCtrl:$scope.createFolderForm});appState.getSectionState("currentSection")},function(err){formHelper.resetForm({scope:$scope,formCtrl:$scope.createFolderForm,hasErrors:!0}),$scope.error=err})},$scope.createMediaType=function(){$location.search("create",null),$location.path("/settings/mediatypes/edit/"+node.id).search("create","true"),navigationService.hideMenu()},$scope.close=function(){navigationService.hideDialog(!0)}}function MediaTypesDeleteController($scope,mediaTypeResource,treeService,navigationService,localizationService){$scope.performDelete=function(){$scope.currentNode.loading=!0,mediaTypeResource.deleteById($scope.currentNode.id).then(function(){$scope.currentNode.loading=!1;treeService.getTreeRoot($scope.currentNode);treeService.removeNode($scope.currentNode),navigationService.hideMenu()})},$scope.performContainerDelete=function(){$scope.currentNode.loading=!0,mediaTypeResource.deleteContainerById($scope.currentNode.id).then(function(){$scope.currentNode.loading=!1;treeService.getTreeRoot($scope.currentNode);treeService.removeNode($scope.currentNode),navigationService.hideMenu()})},$scope.cancel=function(){navigationService.hideDialog()},$scope.labels={},localizationService.format(["contentTypeEditor_yesDelete","contentTypeEditor_andAllMediaItems"],"%0% "+$scope.currentNode.name+" %1%").then(function(data){$scope.labels.deleteConfirm=data})}function memberCreateController($scope,memberTypeResource,iconHelper,navigationService,$location){memberTypeResource.getTypes($scope.currentNode.id).then(function(data){$scope.allowedTypes=iconHelper.formatContentTypeIcons(data)}),$scope.close=function(){navigationService.hideDialog(!0)},$scope.createMemberType=function(memberType){$location.path("/member/member/edit/"+$scope.currentNode.id).search("doctype",memberType.alias).search("create","true"),navigationService.hideNavigation()}}function MemberDeleteController($scope,memberResource,treeService,navigationService,editorState,$location,$routeParams){$scope.performDelete=function(){$scope.currentNode.loading=!0,memberResource.deleteByKey($scope.currentNode.id).then(function(){$scope.currentNode.loading=!1,treeService.removeNode($scope.currentNode),editorState.current&&editorState.current.key==$scope.currentNode.id&&$location.path("/member/member/list/"+($routeParams.listName?$routeParams.listName:"all-members")),navigationService.hideMenu()})},$scope.cancel=function(){navigationService.hideDialog()}}function MemberEditController($scope,$routeParams,$location,$http,$q,appState,memberResource,entityResource,navigationService,notificationsService,localizationService,serverValidationManager,contentEditingHelper,fileManager,formHelper,editorState,umbRequestHelper,eventsService){var evts=[],infiniteMode=$scope.model&&$scope.model.infiniteMode,id=infiniteMode?$scope.model.id:$routeParams.id,create=infiniteMode?$scope.model.create:$routeParams.create,listName=infiniteMode?$scope.model.listname:$routeParams.listName,docType=infiniteMode?$scope.model.doctype:$routeParams.doctype;function buildTreePath(data){return listName?"-1,"+listName:"-1"}function init(){var content=$scope.content,isAppPresent=!1;$scope.app&&(_.forEach(content.apps,function(app){app===$scope.app&&(isAppPresent=!0)}),!1===isAppPresent&&_.forEach(content.apps,function(app){app.alias===$scope.app.alias&&(isAppPresent=!0,app.active=!0,$scope.appChanged(app))})),!1===isAppPresent&&(content.apps[0].active=!0,$scope.appChanged(content.apps[0])),0===content.membershipScenario&&($scope.page.nameLocked=!0),editorState.set($scope.content),function bindEvents(){for(var e in evts)eventsService.unsubscribe(evts[e]);evts.push(eventsService.on("editors.memberType.saved",function(name,args){args&&args.memberType&&args.memberType.key.replace(/-/g,"")===$scope.content.contentType.key&&($scope.page.loading=!0,loadMember().then(function(){$scope.page.loading=!1}))}))}()}function loadMember(){var deferred=$q.defer();return id&&id.length<9?entityResource.getById(id,"Member").then(function(entity){$location.path("/member/member/edit/"+entity.key),deferred.resolve($scope.content)},function(){deferred.reject()}):memberResource.getByKey(id).then(function(data){if($scope.content=data,!infiniteMode){var path=buildTreePath();navigationService.syncTree({tree:"member",path:path.split(","),forceReload:!0})}umbRequestHelper.resourcePromise($http.get(data.treeNodeUrl),"Failed to retrieve data for child node "+data.key).then(function(node){$scope.page.menu.currentNode=node}),serverValidationManager.notifyAndClearAllSubscriptions(),init(),$scope.page.loading=!1,deferred.resolve($scope.content)},function(){deferred.reject()}),deferred.promise}$scope.header={},$scope.header.editorfor="visuallyHiddenTexts_newMember",$scope.header.setPageTitle=!0,$scope.page={},$scope.page.loading=!0,$scope.page.menu={},$scope.page.menu.currentSection=appState.getSectionState("currentSection"),$scope.page.menu.currentNode=null,$scope.page.nameLocked=!1,$scope.page.saveButtonState="init",$scope.page.exportButton="init",create?docType?memberResource.getScaffold(docType).then(function(data){$scope.content=data,init(),$scope.page.loading=!1}):memberResource.getScaffold().then(function(data){$scope.content=data,init(),$scope.page.loading=!1}):($scope.page.loading=!0,loadMember().then(function(){$scope.page.loading=!1})),$scope.save=function(){formHelper.submitForm({scope:$scope})?($scope.page.saveButtonState="busy",memberResource.save($scope.content,create,fileManager.getFiles()).then(function(data){if(formHelper.resetForm({scope:$scope}),infiniteMode&&$scope.model.submit)$scope.model.memberNode=$scope.content,$scope.model.submit($scope.model);else{contentEditingHelper.handleSuccessfulSave({scope:$scope,savedContent:data,redirectId:data.key,rebindCallback:contentEditingHelper.reBindChangedProperties($scope.content,data)}),editorState.set($scope.content);var path=buildTreePath();navigationService.syncTree({tree:"member",path:path.split(",")}),$scope.page.saveButtonState="success",init()}},function(err){formHelper.resetForm({scope:$scope,hasErrors:!0}),contentEditingHelper.handleSaveError({err:err,rebindCallback:contentEditingHelper.reBindChangedProperties($scope.content,err.data)}),editorState.set($scope.content),$scope.page.saveButtonState="error"})):function showValidationNotification(){localizationService.localizeMany(["speechBubbles_validationFailedHeader","speechBubbles_validationFailedMessage"]).then(function(data){notificationsService.error(data[0],data[1])})}()},$scope.appChanged=function(app){$scope.app=app,infiniteMode&&($scope.page.submitButtonLabelKey="buttons_saveAndClose")},$scope.showBack=function(){return!infiniteMode&&!!listName},$scope.onBack=function(){$location.path("/member/member/list/"+listName),$location.search("listName",null),$routeParams.page&&$location.search("page",$routeParams.page)},$scope.export=function(){var memberKey=$scope.content.key;memberResource.exportMemberData(memberKey)},$scope.$on("$destroy",function(){for(var e in evts)eventsService.unsubscribe(evts[e])})}function MemberListController($scope,$routeParams,$location,$q,$window,appState,memberResource,entityResource,navigationService,notificationsService,angularHelper,serverValidationManager,contentEditingHelper,fileManager,formHelper,umbModelMapper,editorState,localizationService){$scope.currentSection=appState.getSectionState("currentSection"),$scope.currentNode=null,$scope.page={},$scope.page.lockedName=!0,$scope.page.loading=!0,memberResource.getListNode($routeParams.id).then(function(data){$scope.content=data,null!=$scope.content&&null!=$scope.content.name&&"allmembers"==$scope.content.name.replace(" ","").toLowerCase()&&localizationService.localize("member_allMembers").then(function(value){$scope.content.name=value}),editorState.set($scope.content),navigationService.syncTree({tree:"member",path:data.path.split(",")}).then(function(syncArgs){$scope.currentNode=syncArgs.node}),serverValidationManager.notifyAndClearAllSubscriptions(),$scope.page.loading=!1})}function MemberGroupsDeleteController($scope,memberGroupResource,treeService,navigationService){$scope.performDelete=function(){$scope.currentNode.loading=!0,memberGroupResource.deleteById($scope.currentNode.id).then(function(){$scope.currentNode.loading=!1;treeService.getTreeRoot($scope.currentNode);treeService.removeNode($scope.currentNode),navigationService.hideMenu()})},$scope.cancel=function(){navigationService.hideDialog()}}function MemberGroupsEditController($scope,$routeParams,appState,navigationService,memberGroupResource,contentEditingHelper,formHelper,editorState,eventsService){$scope.page={},$scope.page.loading=!1,$scope.header={},$scope.header.editorfor="content_membergroup",$scope.header.setPageTitle=!0,$scope.page.menu={},$scope.page.menu.currentSection=appState.getSectionState("currentSection"),$scope.page.menu.currentNode=null;var evts=[];function loadMemberGroup(){$scope.page.loading=!0,memberGroupResource.getById($routeParams.id).then(function(data){$scope.content=data,editorState.set($scope.content),navigationService.syncTree({tree:"memberGroups",path:data.path}).then(function(syncArgs){$scope.page.menu.currentNode=syncArgs.node}),$scope.page.loading=!1})}$routeParams.create?($scope.page.loading=!0,memberGroupResource.getScaffold().then(function(data){$scope.content=data,editorState.set($scope.content),$scope.page.loading=!1})):loadMemberGroup(),$scope.save=function(){formHelper.submitForm({scope:$scope})&&($scope.page.saveButtonState="busy",memberGroupResource.save($scope.content,$scope.preValues,$routeParams.create).then(function(data){formHelper.resetForm({scope:$scope}),contentEditingHelper.handleSuccessfulSave({scope:$scope,savedContent:data}),editorState.set($scope.content),navigationService.syncTree({tree:"memberGroups",path:data.path,forceReload:!0}).then(function(syncArgs){$scope.page.menu.currentNode=syncArgs.node}),$scope.page.saveButtonState="success"},function(err){formHelper.resetForm({scope:$scope,hasErrors:!0}),contentEditingHelper.handleSaveError({err:err}),$scope.page.saveButtonState="error",editorState.set($scope.content)}))},evts.push(eventsService.on("app.refreshEditor",function(name,error){loadMemberGroup()})),$scope.$on("$destroy",function(){for(var e in evts)eventsService.unsubscribe(evts[e])})}function MemberTypesCreateController($scope,$location,navigationService,memberTypeResource,formHelper,appState,localizationService){$scope.model={folderName:"",creatingFolder:!1};var node=$scope.currentNode,section=appState.getSectionState("currentSection");$scope.showCreateFolder=function(){$scope.model.creatingFolder=!0},$scope.createContainer=function(){formHelper.submitForm({scope:$scope,formCtrl:this.createFolderForm})&&memberTypeResource.createContainer(node.id,$scope.model.folderName).then(function(folderId){navigationService.hideMenu();var currPath=node.path?node.path:"-1";navigationService.syncTree({tree:"membertypes",path:currPath+","+folderId,forceReload:!0,activate:!0}),formHelper.resetForm({scope:$scope,formCtrl:this.createFolderForm})},function(err){formHelper.resetForm({scope:$scope,formCtrl:this.createFolderForm,hasErrors:!0})})},$scope.createMemberType=function(){$location.search("create",null),$location.path("/"+section+"/membertypes/edit/"+node.id).search("create","true"),navigationService.hideMenu()}}function MemberTypesDeleteController($scope,memberTypeResource,treeService,navigationService,localizationService){$scope.performDelete=function(){$scope.currentNode.loading=!0,memberTypeResource.deleteById($scope.currentNode.id).then(function(){$scope.currentNode.loading=!1;treeService.getTreeRoot($scope.currentNode);treeService.removeNode($scope.currentNode),navigationService.hideMenu()})},$scope.cancel=function(){navigationService.hideDialog()},$scope.labels={},localizationService.format(["contentTypeEditor_yesDelete","contentTypeEditor_andAllMembers"],"%0% "+$scope.currentNode.name+" %1%").then(function(data){$scope.labels.deleteConfirm=data})}function PartialViewMacrosDeleteController($scope,codefileResource,treeService,navigationService){$scope.performDelete=function(){$scope.currentNode.loading=!0,codefileResource.deleteByPath("partialViewMacros",$scope.currentNode.id).then(function(){$scope.currentNode.loading=!1;treeService.getTreeRoot($scope.currentNode);treeService.removeNode($scope.currentNode),navigationService.hideMenu()})},$scope.cancel=function(){navigationService.hideDialog()}}function PartialViewsDeleteController($scope,codefileResource,treeService,navigationService){$scope.performDelete=function(){$scope.currentNode.loading=!0,$scope.error=null,codefileResource.deleteByPath("partialViews",$scope.currentNode.id).then(function(){$scope.currentNode.loading=!1;treeService.getTreeRoot($scope.currentNode);treeService.removeNode($scope.currentNode),navigationService.hideMenu()},function(err){$scope.currentNode.loading=!1,$scope.error=err})},$scope.cancel=function(){navigationService.hideDialog()}}function imageFilePickerController($scope,editorService){$scope.add=function(){var mediaPickerOptions={view:"mediapicker",multiPicker:!1,disableFolderSelect:!0,onlyImages:!0,submit:function submit(model){$scope.model.value=model.selection[0].image,editorService.close()},close:function close(){editorService.close()}};editorService.mediaPicker(mediaPickerOptions)},$scope.remove=function(){$scope.model.value=null}}function mediaFolderPickerController($scope,editorService,entityResource){function retriveFolderData(){var id=$scope.model.value;null!=id?entityResource.getById(id,"Media").then(function(media){$scope.media=media}):$scope.folderName=""}$scope.folderName="",retriveFolderData(),$scope.add=function(){var mediaPickerOptions={view:"mediapicker",multiPicker:!1,disableFolderSelect:!1,onlyImages:!1,onlyFolders:!0,submit:function submit(model){$scope.model.value=model.selection[0].udi,retriveFolderData(),editorService.close()},close:function close(){editorService.close()}};editorService.mediaPicker(mediaPickerOptions)},$scope.remove=function(){$scope.model.value=null,retriveFolderData()}}function mediaPickerController($scope,entityResource,iconHelper,editorService,angularHelper){$scope.renderModel=[],$scope.allowRemove=!0,$scope.allowEdit=!0,$scope.sortable=!1;var dialogOptions={multiPicker:!1,entityType:"Media",section:"media",treeAlias:"media",idType:"udi"};function syncModelValue(){var currIds=_.map($scope.renderModel,function(i){return"udi"===dialogOptions.idType?i.udi:i.id});$scope.model.value=function trim(str,chr){var rgxtrim=chr?new RegExp("^"+chr+"+|"+chr+"+$","g"):new RegExp("^\\s+|\\s+$","g");return str.replace(rgxtrim,"")}(currIds.join(),","),angularHelper.getCurrentForm($scope).$setDirty()}$scope.model.config&&Utilities.extend(dialogOptions,$scope.model.config),$scope.openTreePicker=function(){var treePicker=dialogOptions;treePicker.submit=function(model){treePicker.multiPicker?_.each(model.selection,function(item,i){$scope.add(item)}):($scope.clear(),$scope.add(model.selection[0])),editorService.close()},treePicker.close=function(){editorService.close()},editorService.treePicker(treePicker)},$scope.remove=function(index){$scope.renderModel.splice(index,1),syncModelValue()},$scope.clear=function(){$scope.renderModel=[],syncModelValue()},$scope.add=function(item){var itemId="udi"===dialogOptions.idType?item.udi:item.id;if(_.map($scope.renderModel,function(i){return"udi"===dialogOptions.idType?i.udi:i.id}).indexOf(itemId)<0){item.icon=iconHelper.convertFromLegacyIcon(item.icon),$scope.renderModel.push({name:item.name,id:item.id,icon:item.icon,udi:item.udi});var itemRenderIndex=$scope.renderModel.length-1;entityResource.getUrl(item.id,dialogOptions.entityType).then(function(data){$scope.renderModel[itemRenderIndex].path=data})}syncModelValue()};var modelIds=$scope.model.value?$scope.model.value.split(","):[];modelIds.length>0&&entityResource.getByIds(modelIds,dialogOptions.entityType).then(function(data){_.each(data,function(item,i){item.icon=iconHelper.convertFromLegacyIcon(item.icon),$scope.renderModel.push({name:item.name,id:item.id,icon:item.icon,udi:item.udi});var itemRenderIndex=$scope.renderModel.length-1;entityResource.getUrl(item.id,dialogOptions.entityType).then(function(data){$scope.renderModel[itemRenderIndex].path=data})})})}function TreeSourceTypePickerController($scope,contentTypeResource,mediaTypeResource,memberTypeResource,editorService,eventsService,angularHelper){var vm=this;vm.loading=!1,vm.itemTypes=[],vm.remove=function remove(itemType){vm.itemTypes=_.without(vm.itemTypes,itemType),updateModel()},vm.add=function add(){if(!currentItemType)return;var editor={multiPicker:!0,filterCssClass:"not-allowed not-published",filter:function filter(item){return"container"===item.nodeType||item.metaData.isElement||!!_.findWhere(vm.itemTypes,{udi:item.udi})},submit:function submit(model){var newItemTypes=_.map(model.selection,function(selected){return _.findWhere(allItemTypes,{udi:selected.udi})});vm.itemTypes=_.uniq(_.union(vm.itemTypes,newItemTypes)),updateModel(),editorService.close()},close:function close(){editorService.close()}};switch(currentItemType){case"content":editorService.contentTypePicker(editor);break;case"media":editorService.mediaTypePicker(editor);break;case"member":editorService.memberTypePicker(editor)}};var allItemTypes=null,currentItemType=null;function init(){switch(vm.loading=!0,currentItemType){case"content":contentTypeResource.getAll().then(getAllItemTypesCallback);break;case"media":mediaTypeResource.getAll().then(getAllItemTypesCallback);break;case"member":memberTypeResource.getTypes().then(getAllItemTypesCallback)}}function getAllItemTypesCallback(all){allItemTypes=all,vm.loading=!1;var currentItemTypes=_.map(($scope.model.value||"").split(","),function(s){return s.trim()});vm.itemTypes=_.filter(allItemTypes,function(itemType){return currentItemTypes.indexOf(itemType.alias)>=0})}function updateModel(){$scope.model.value=_.pluck(vm.itemTypes,"alias").join(),angularHelper.getCurrentForm($scope).$setDirty()}var evts=[];evts.push(eventsService.on("treeSourceChanged",function(e,args){currentItemType&&currentItemType!==args.value&&(vm.itemTypes=[],updateModel()),currentItemType=args.value,init()})),$scope.$on("$destroy",function(){for(var e in evts)eventsService.unsubscribe(evts[e])}),$scope.model.config.itemType&&(currentItemType=$scope.model.config.itemType,init())}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function booleanEditorController($scope){var config={truevalue:"1",falsevalue:"0",showLabels:!1};function setupViewModel(){$scope.renderModel={value:!1},$scope.model.config&&$scope.model.config.default&&Object.toBoolean($scope.model.config.default)&&$scope.model&&!$scope.model.value&&($scope.renderModel.value=!0),$scope.model&&$scope.model.value&&Object.toBoolean($scope.model.value)&&($scope.renderModel.value=!0)}$scope.model.config&&($scope.model.config.showLabels=$scope.model.config.showLabels?Object.toBoolean($scope.model.config.showLabels):config.showLabels),Utilities.extend(config,$scope.model.config),$scope.model.config=config,setupViewModel(),$scope.model&&!$scope.model.value&&($scope.model.value=!0===$scope.renderModel.value?$scope.model.config.truevalue:$scope.model.config.falsevalue),$scope.model.onValueChanged=function(newVal,oldVal){setupViewModel()};var unsubscribe=$scope.$watch("model.value",function(newVal,oldVal){newVal!==oldVal&&setupViewModel()});$scope.toggle=function(){if(function setDirty(){$scope.modelValueForm&&$scope.modelValueForm.modelValue.$setDirty()}(),$scope.renderModel.value)return $scope.model.value=$scope.model.config.falsevalue,void setupViewModel();$scope.model.value=$scope.model.config.truevalue,setupViewModel()},$scope.$on("$destroy",function(){unsubscribe()})}function ColorPickerController($scope,$timeout){var vm=this,config={items:[],multiple:!1};if(Utilities.extend(config,$scope.model.config),$scope.model.config=config,$scope.isConfigured=$scope.model.config&&$scope.model.config.items&&_.keys($scope.model.config.items).length>0,$scope.isConfigured){for(var key in $scope.model.config.items)$scope.model.config.items[key].hasOwnProperty("value")||($scope.model.config.items[key]={value:$scope.model.config.items[key],label:$scope.model.config.items[key]});$scope.model.useLabel=Object.toBoolean($scope.model.config.useLabel),function initActiveColor(){if(!$scope.model.value)return;"string"==typeof $scope.model.value&&($scope.model.value={value:$scope.model.value,label:$scope.model.value});if(!$scope.model.value.hasOwnProperty("value"))return;var modelColor=$scope.model.value.value,modelLabel=$scope.model.value.label,foundItem=null;for(var key in $scope.model.config.items){var item=$scope.model.config.items[key];if(item.value==modelColor&&item.label==modelLabel){foundItem=item;break}}if(!foundItem)for(var key in $scope.model.config.items){var item=$scope.model.config.items[key];if(item.value==modelColor){foundItem=item;break}}if(!foundItem)for(var key in $scope.model.config.items){var item=$scope.model.config.items[key];if(item.label==modelLabel){foundItem=item;break}}foundItem&&($scope.model.value.value=foundItem.value,$scope.model.value.label=foundItem.label)}()}if(!Utilities.isArray($scope.model.config.items)){var items=[];for(var i in $scope.model.config.items){var oldValue=$scope.model.config.items[i];oldValue.hasOwnProperty("value")?items.push({value:oldValue.value,label:oldValue.label,sortOrder:oldValue.sortOrder,id:i}):items.push({value:oldValue,label:oldValue,sortOrder:sortOrder,id:i})}items.sort(function(a,b){return a.sortOrder>b.sortOrder?1:b.sortOrder>a.sortOrder?-1:0}),$scope.model.config.items=items}vm.selectColor=function(color){$timeout(function(){var newColor=color?color.value:null;vm.modelValueForm.selectedColor.$setViewValue(newColor)})},$scope.validateMandatory=function(){return{isValid:!$scope.model.validation.mandatory||null!=$scope.model.value&&""!=$scope.model.value&&(!$scope.model.value.hasOwnProperty("value")||""!==$scope.model.value.value),errorMsg:$scope.model.validation.mandatoryMessage||"Value cannot be empty",errorKey:"required"}}}function contentPickerController($scope,$q,$routeParams,$location,entityResource,editorState,iconHelper,navigationService,localizationService,editorService,userService,overlayService){var unsubscribe,vm={labels:{general_recycleBin:"",general_add:""}};function subscribe(){unsubscribe=$scope.$on("formSubmitting",function(ev,args){var currIds=_.map($scope.renderModel,function(i){return"udi"===$scope.model.config.idType?i.udi:i.id});$scope.model.value=function trim(str,chr){var rgxtrim=chr?new RegExp("^"+chr+"+|"+chr+"+$","g"):new RegExp("^\\s+|\\s+$","g");return str.replace(rgxtrim,"")}(currIds.join(),",")})}function validate(){$scope.contentPickerForm&&($scope.model.config&&$scope.model.config.minNumber&&parseInt($scope.model.config.minNumber)>$scope.renderModel.length?$scope.contentPickerForm.minCount.$setValidity("minCount",!1):$scope.contentPickerForm.minCount.$setValidity("minCount",!0),$scope.model.config&&$scope.model.config.maxNumber&&parseInt($scope.model.config.maxNumber)<$scope.renderModel.length?$scope.contentPickerForm.maxCount.$setValidity("maxCount",!1):$scope.contentPickerForm.maxCount.$setValidity("maxCount",!0))}$scope.renderModel=[],$scope.sortableModel=[],$scope.labels=vm.labels,$scope.dialogEditor=editorState&&editorState.current&&!0===editorState.current.isDialogEditor;var defaultConfig={multiPicker:!1,showOpenButton:!1,showEditButton:!1,showPathOnHover:!1,dataTypeKey:null,maxNumber:1,minNumber:0,startNode:{query:"",type:"content",id:$scope.model.config.startNodeId?$scope.model.config.startNodeId:-1}};$scope.sortableOptions={axis:"y",containment:"parent",distance:10,opacity:.7,tolerance:"pointer",scroll:!0,zIndex:6e3,update:function update(e,ui){setDirty()}};var removeAllEntriesAction={labelKey:"clipboard_labelForRemoveAllEntries",labelTokens:[],icon:"trash",method:function removeAllEntries(){localizationService.localizeMany(["content_nestedContentDeleteAllItems","general_delete"]).then(function(data){overlayService.confirmDelete({title:data[1],content:data[0],close:function close(){overlayService.close()},submit:function submit(){$scope.clear(),overlayService.close()}})})},isDisabled:!0};if($scope.model.config&&($scope.model.config.startNode||delete $scope.model.config.startNode,$scope.model.config=Utilities.extend(defaultConfig,$scope.model.config),$scope.model.validation&&$scope.model.validation.mandatory&&!$scope.model.config.minNumber&&($scope.model.config.minNumber=1),!0===$scope.model.config.multiPicker&&$scope.umbProperty)){var propertyActions=[removeAllEntriesAction];$scope.umbProperty.setPropertyActions(propertyActions)}$scope.model.config.multiPicker=Object.toBoolean($scope.model.config.multiPicker),$scope.model.config.showOpenButton=Object.toBoolean($scope.model.config.showOpenButton),$scope.model.config.showEditButton=Object.toBoolean($scope.model.config.showEditButton),$scope.model.config.showPathOnHover=Object.toBoolean($scope.model.config.showPathOnHover);var entityType="member"===$scope.model.config.startNode.type?"Member":"media"===$scope.model.config.startNode.type?"Media":"Document";$scope.allowOpenButton=!1,$scope.allowEditButton="Document"===entityType,$scope.allowRemoveButton=!0;var dialogOptions={multiPicker:$scope.model.config.multiPicker,entityType:entityType,filterCssClass:"not-allowed not-published",startNodeId:null,dataTypeKey:$scope.model.dataTypeKey,currentNode:editorState?editorState.current:null,callback:function callback(data){Utilities.isArray(data)?_.each(data,function(item,i){$scope.add(item)}):($scope.clear(),$scope.add(data)),setDirty()},treeAlias:$scope.model.config.startNode.type,section:$scope.model.config.startNode.type,idType:"udi"};if(Utilities.extend(dialogOptions,$scope.model.config),dialogOptions.dataTypeKey=$scope.model.dataTypeKey,$scope.model.config.maxNumber&&1===parseInt($scope.model.config.maxNumber)&&(dialogOptions.multiPicker=!1),$scope.model.config.filter&&localizationService.localize("contentPicker_allowedItemTypes",[$scope.model.config.filter]).then(function(data){dialogOptions.filterTitle=data}),"Member"===entityType){dialogOptions.filterCssClass="not-allowed";var currFilter=dialogOptions.filter;dialogOptions.filter=function(i){if(i.metaData.isContainer)return!0;if(!currFilter)return!1;var filterItem=currFilter.toLowerCase().split(","),itemContentType=i.metaData.contentType||i.metaData.ContentTypeAlias,found=filterItem.indexOf(itemContentType.toLowerCase())>=0;return!!(!currFilter.startsWith("!")&&!found||currFilter.startsWith("!")&&found)}}if("settings"===$routeParams.section&&"documentTypes"===$routeParams.tree)dialogOptions.startNodeId=-1;else if($scope.model.config.startNode.query){var rootId=$routeParams.id;entityResource.getByQuery($scope.model.config.startNode.query,rootId,"Document").then(function(ent){dialogOptions.startNodeId=("udi"===$scope.model.config.idType?ent.udi:ent.id).toString()})}else dialogOptions.startNodeId=$scope.model.config.startNode.id;function setDirty(){$scope.contentPickerForm&&$scope.contentPickerForm.modelValue&&$scope.contentPickerForm.modelValue.$setDirty()}function syncRenderModel(doValidation){var valueIds=$scope.model.value?$scope.model.value.split(","):[];if($scope.sortableModel=valueIds,removeAllEntriesAction.isDisabled=0===valueIds.length,valueIds.length>0){for(var renderModelIds=_.map($scope.renderModel,function(d){return("udi"===$scope.model.config.idType?d.udi:d.id).toString()}),toRemove=_.difference(renderModelIds,valueIds),j=0;j<toRemove.length;j++){var index=renderModelIds.indexOf(toRemove[j]);$scope.renderModel.splice(index,1)}var missingIds=_.difference(valueIds,renderModelIds);if(missingIds.length>0)return entityResource.getByIds(missingIds,entityType).then(function(data){return _.each(valueIds,function(id,i){var entity=_.find(data,function(d){return"udi"===$scope.model.config.idType?d.udi==id:d.id==id});entity&&function addSelectedItem(item){item.icon&&(item.icon=iconHelper.convertFromLegacyIcon(item.icon));if(!item.icon)switch(entityType){case"Document":item.icon="icon-document";break;case"Media":item.icon="icon-picture";break;case"Member":item.icon="icon-user"}$scope.renderModel.push({name:item.name,id:item.id,udi:item.udi,icon:item.icon,path:item.path,url:item.url,key:item.key,trashed:item.trashed,published:!item.metaData||!1!==item.metaData.IsPublished||"Document"!==entityType}),function setEntityUrl(entity){"Member"!==entityType&&entityResource.getUrl(entity.id,entityType).then(function(data){$scope.renderModel.forEach(function(item){item.id===entity.id&&(entity.trashed?item.url=vm.labels.general_recycleBin:item.url=data)})})}(item)}(entity)}),doValidation&&validate(),setSortingState($scope.renderModel),$q.when(!0)});var current=$scope.renderModel;$scope.renderModel=[];for(var k=0;k<valueIds.length;k++){var id=valueIds[k],found=_.find(current,function(d){return"udi"===$scope.model.config.idType?d.udi==id:d.id==id});found&&$scope.renderModel.push(found)}return doValidation&&validate(),setSortingState($scope.renderModel),$q.when(!0)}return $scope.renderModel=[],doValidation&&validate(),setSortingState($scope.renderModel),$q.when(!0)}function setSortingState(items){items.length>1?$scope.sortableOptions.disabled=!1:$scope.sortableOptions.disabled=!0}$scope.openCurrentPicker=function(){switch($scope.currentPicker=dialogOptions,$scope.currentPicker.submit=function(model){Utilities.isArray(model.selection)&&(_.each(model.selection,function(item,i){$scope.add(item)}),setDirty()),setDirty(),editorService.close()},$scope.currentPicker.close=function(){editorService.close()},entityType){case"Document":editorService.contentPicker($scope.currentPicker);break;case"Media":editorService.mediaPicker($scope.currentPicker);break;case"Member":editorService.memberPicker($scope.currentPicker)}},$scope.remove=function(index){var currIds=$scope.model.value?$scope.model.value.split(","):[];currIds.length>0&&(currIds.splice(index,1),setDirty(),$scope.model.value=currIds.join()),removeAllEntriesAction.isDisabled=0===currIds.length},$scope.showNode=function(index){var id=$scope.renderModel[index].id,section=$scope.model.config.startNode.type.toLowerCase();entityResource.getPath(id,entityType).then(function(path){navigationService.changeSection(section),navigationService.showTree(section,{tree:section,path:path,forceReload:!1,activate:!0});var routePath=section+"/"+section+"/edit/"+id.toString();$location.path(routePath).search("")})},$scope.add=function(item){var currIds=$scope.model.value?$scope.model.value.split(","):[],itemId=("udi"===$scope.model.config.idType?item.udi:item.id).toString();currIds.indexOf(itemId)<0&&(currIds.push(itemId),$scope.model.value=currIds.join()),removeAllEntriesAction.isDisabled=!1},$scope.clear=function(){$scope.model.value=null,removeAllEntriesAction.isDisabled=!0},$scope.openEditor=function(item){var editor={id:"Member"===entityType?item.key:item.id,submit:function submit(model){var node="Member"===entityType?model.memberNode:"Media"===entityType?model.mediaNode:model.contentNode;item.name=node.name,"Member"!==entityType&&("Document"===entityType&&(item.published=node.hasPublishedVersion),entityResource.getUrl(node.id,entityType).then(function(data){item.url=data})),editorService.close()},close:function close(){editorService.close()}};switch(entityType){case"Document":editorService.contentEditor(editor);break;case"Media":editorService.mediaEditor(editor);break;case"Member":editorService.memberEditor(editor)}},$scope.$on("$destroy",function(){unsubscribe&&unsubscribe()}),function init(){userService.getCurrentUser().then(function(user){switch(entityType){case"Document":var hasAccessToContent=-1!==user.allowedSections.indexOf("content");$scope.allowOpenButton=hasAccessToContent;break;case"Media":var hasAccessToMedia=-1!==user.allowedSections.indexOf("media");$scope.allowOpenButton=hasAccessToMedia;break;case"Member":var hasAccessToMember=-1!==user.allowedSections.indexOf("member");$scope.allowOpenButton=hasAccessToMember}}),localizationService.localizeMany(["general_recycleBin","general_add"]).then(function(data){vm.labels.general_recycleBin=data[0],vm.labels.general_add=data[1],syncRenderModel(!1).then(function(){!function startWatch(){$scope.$watchCollection("sortableModel",function(newVal,oldVal){$scope.model.value=newVal.join()}),$scope.$watch("model.value",function(newVal,oldVal){newVal!==oldVal&&syncRenderModel(!0)})}(),subscribe(),validate()})})}()}function dateTimePickerController($scope,angularHelper,dateHelper,validationMessageService){var flatPickr=null;function setDate(momentDate){angularHelper.safeApply($scope,function(){momentDate&&momentDate.isValid()?($scope.datePickerForm.datepicker.$setValidity("pickerError",!0),$scope.hasDatetimePickerValue=!0,$scope.model.datetimePickerValue=momentDate.format($scope.model.config.format)):($scope.hasDatetimePickerValue=!1,$scope.model.datetimePickerValue=null),function updateModelValue(momentDate){$scope.hasDatetimePickerValue?$scope.model.config.pickTime?$scope.model.value&&Object.toBoolean($scope.model.config.offsetTime)&&void 0!==Umbraco.Sys.ServerVariables.application.serverTimeOffset?($scope.model.value=dateHelper.convertToServerStringTime(momentDate,Umbraco.Sys.ServerVariables.application.serverTimeOffset),$scope.serverTime=dateHelper.convertToServerStringTime(momentDate,Umbraco.Sys.ServerVariables.application.serverTimeOffset,"YYYY-MM-DD HH:mm:ss Z")):$scope.model.value=momentDate.format("YYYY-MM-DD HH:mm:ss"):$scope.model.value=momentDate.format("YYYY-MM-DD"):$scope.model.value=null;!function setDirty(){$scope.datePickerForm&&$scope.datePickerForm.datepicker.$setDirty()}()}(momentDate)})}function setDatePickerVal(){if($scope.model.value){if($scope.model.value&&Object.toBoolean($scope.model.config.offsetTime)&&$scope.serverTimeNeedsOffsetting)dateVal=dateHelper.convertToLocalMomentTime($scope.model.value,Umbraco.Sys.ServerVariables.application.serverTimeOffset),$scope.serverTime=dateHelper.convertToServerStringTime(dateVal,Umbraco.Sys.ServerVariables.application.serverTimeOffset,"YYYY-MM-DD HH:mm:ss Z");else var dateVal=$scope.model.value?moment($scope.model.value,"YYYY-MM-DD HH:mm:ss"):moment();$scope.model.datetimePickerValue=dateVal.format($scope.model.config.format)}else $scope.clearDate()}$scope.clearDate=function(){$scope.hasDatetimePickerValue=!1,$scope.model&&($scope.model.datetimePickerValue=null,$scope.model.value=null),$scope.datePickerForm&&$scope.datePickerForm.datepicker&&$scope.datePickerForm.datepicker.$setValidity("pickerError",!0)},$scope.datePickerSetup=function(instance){flatPickr=instance},$scope.datePickerChange=function(date){setDate(moment(date)),setDatePickerVal()},$scope.inputChanged=function(){if(""===$scope.model.datetimePickerValue&&$scope.hasDatetimePickerValue)$scope.clearDate();else if($scope.model.datetimePickerValue){var momentDate=moment($scope.model.datetimePickerValue,$scope.model.config.format,!0);momentDate&&momentDate.isValid()||(momentDate=moment(new Date($scope.model.datetimePickerValue))),momentDate&&momentDate.isValid()&&setDate(momentDate),setDatePickerVal(),flatPickr.setDate($scope.model.value,!1)}},$scope.model.onValueChanged=function(newVal,oldVal){if(newVal!=oldVal){var minDate=moment("0001-01-01"),newDate=moment(newVal);newDate.isAfter(minDate)?setDate(newDate):$scope.clearDate()}},$scope.$watch("model.value",function(newVal,oldVal){newVal!==oldVal&&($scope.hasDatetimePickerValue=!!newVal,setDatePickerVal())}),function onInit(){if($scope.hasDatetimePickerValue=!!$scope.model.value,$scope.model.datetimePickerValue=null,$scope.serverTime=null,$scope.serverTimeNeedsOffsetting=!1,$scope.model.config=Utilities.extend({pickDate:!0,pickTime:!0,useSeconds:!0,format:"YYYY-MM-DD HH:mm:ss",icons:{time:"icon-time",date:"icon-calendar",up:"icon-chevron-up",down:"icon-chevron-down"}},$scope.model.config),""!==$scope.model.config.format&&void 0!==$scope.model.config.format&&null!==$scope.model.config.format||($scope.model.config.format=$scope.model.config.pickTime?"YYYY-MM-DD HH:mm:ss":"YYYY-MM-DD"),void 0!==Umbraco.Sys.ServerVariables.application.serverTimeOffset){var serverOffset=Umbraco.Sys.ServerVariables.application.serverTimeOffset,localOffset=(new Date).getTimezoneOffset();$scope.serverTimeNeedsOffsetting=-serverOffset!==localOffset}var dateFormat=$scope.model.config.pickTime?"Y-m-d H:i:S":"Y-m-d";$scope.datePickerConfig={enableTime:$scope.model.config.pickTime,dateFormat:dateFormat,time_24hr:!0},$scope.model.config.format.toLowerCase().match(/^h{1,2}:m{1,2}:s{1,2}\s?a?$/gim)&&($scope.datePickerConfig.enableTime=!0,$scope.datePickerConfig.noCalendar=!0),setDatePickerVal(),validationMessageService.getMandatoryMessage($scope.model.validation).then(function(value){$scope.mandatoryMessage=value})}()}function emailController($scope,validationMessageService){validationMessageService.getMandatoryMessage($scope.model.validation).then(function(value){$scope.mandatoryMessage=value})}function entityPicker($scope,entityResource){$scope.model.config.entityType||($scope.model.config.entityType="DocumentType"),$scope.model.config.publishBy?$scope.selectOptions="entity."+$scope.model.config.publishBy+" as entity.name for entity in entities":$scope.selectOptions="entity.id as entity.name for entity in entities",entityResource.getAll($scope.model.config.entityType).then(function(data){_.each(data,function(d){d.id=d.id.toString()}),$scope.entities=data}),null===$scope.model.value||void 0===$scope.model.value?$scope.model.config.multiple?$scope.model.value=[]:$scope.model.value="":Object.toBoolean($scope.model.config.multiple)&&_.isString($scope.model.value)&&($scope.model.value=$scope.model.value.split(","))}function EyeDropperColorPickerController($scope,angularHelper){var vm=this,config={showAlpha:!0,showPalette:!0,allowEmpty:!0};Utilities.extend(config,$scope.model.config),$scope.model.config=config,vm.options=$scope.model.config,vm.color=$scope.model.value||null,vm.selectColor=function(color){angularHelper.safeApply($scope,function(){vm.color=color?color.toString():null,$scope.model.value=vm.color,$scope.propertyForm.selectedColor.$setViewValue(vm.color)})},$scope.validateMandatory=function(){return{isValid:!$scope.model.validation.mandatory||null!=$scope.model.value&&""!=$scope.model.value,errorMsg:$scope.model.validation.mandatoryMessage||"Value cannot be empty",errorKey:"required"}}}function ConfigController($scope){var vm=this;function onWatch(){vm.showConfig=$scope.model.config&&($scope.model.config.length>0||Object.keys($scope.model.config).length>0),vm.showStyles=$scope.model.styles&&($scope.model.styles.length>0||Object.keys($scope.model.styles).length>0),vm.showEmptyState=!1===vm.showConfig&&!1===vm.showStyles}vm.submit=function submit(){$scope.model&&$scope.model.submit&&$scope.model.submit($scope.model)},vm.close=function close(){$scope.model.close&&$scope.model.close()},vm.showEmptyState=!1,vm.showConfig=!1,vm.showStyles=!1,$scope.$watchCollection("model.config",onWatch),$scope.$watchCollection("model.styles",onWatch)}function EditConfigController($scope,angularHelper){var vm=this;function blurAceEditor(event,_editor){var code=_editor.getValue(),form=vm.gridConfigEditor;(function isValidJson(model){var flag=!0;try{Utilities.fromJson(model)}catch(err){flag=!1}return flag})(code)?($scope.model.config=Utilities.fromJson(code),function setValid(form){form.$setValidity("json",!0)}(form)):function setInvalid(form){form.$setValidity("json",!1)}(form)}vm.submit=function submit(){$scope.model&&$scope.model.submit&&$scope.model.submit($scope.model)},vm.close=function close(){$scope.model.close&&$scope.model.close()},vm.aceOption={mode:"json",theme:"chrome",showPrintMargin:!1,advanced:{fontSize:"14px",enableSnippets:!0,enableBasicAutocompletion:!0,enableLiveAutocompletion:!1},onLoad:function onLoad(_editor){vm.editor=_editor,vm.configJson=Utilities.toJson($scope.model.config,!0),vm.editor.setValue(vm.configJson),vm.editor.on("blur",blurAceEditor)}}}function RowConfigController($scope,localizationService){var vm=this;vm.configureCell=function configureCell(cell,row){if($scope.currentCell&&$scope.currentCell===cell)delete $scope.currentCell;else{if(null===cell){var available=$scope.availableRowSpace,space=4;available<4&&available>0&&(space=available),cell={grid:space},row.areas.push(cell)}cell.allowed=cell.allowed||[],$scope.editors.forEach(function(e){e.allowed=-1!==cell.allowed.indexOf(e.alias)}),cell.allowAll=cell.allowAll||!cell.allowed||!cell.allowed.length,$scope.currentCell=cell}},vm.closeArea=function closeArea(){$scope.currentCell=null},vm.deleteArea=function deleteArea(cell,row){$scope.currentCell===cell&&($scope.currentCell=null);var index=row.areas.indexOf(cell);row.areas.splice(index,1)},vm.selectEditor=function selectEditor(cell,editor){cell.allowed=cell.allowed||[];var index=cell.allowed.indexOf(editor.alias);!0===editor.allowed?-1===index&&cell.allowed.push(editor.alias):cell.allowed.splice(index,1)},vm.toggleAllowed=function toggleAllowed(cell){cell.allowAll=!cell.allowAll,cell.allowed?delete cell.allowed:cell.allowed=[]},vm.percentage=function percentage(spans){return(spans/$scope.columns*100).toFixed(8)},vm.scaleUp=function scaleUp(section,max,overflow){var add=1;!0!==overflow&&(add=max>1?1:max);section.grid=section.grid+add},vm.scaleDown=function scaleDown(section){var remove=section.grid>1?1:0;section.grid=section.grid-remove},vm.close=function close(){$scope.model.close&&$scope.model.close()},vm.submit=function submit(){$scope.model.submit&&$scope.model.submit($scope.currentRow)},vm.labels={},$scope.$watch("currentRow",function(row){if(row){var total=0;_.forEach(row.areas,function(area){total+=area.grid}),$scope.availableRowSpace=$scope.columns-total;var originalName=$scope.currentRow.name;originalName&&(originalName!=row.name?$scope.nameChanged=!0:$scope.nameChanged=!1)}},!0),function init(){$scope.currentRow=$scope.model.currentRow,$scope.columns=$scope.model.columns,$scope.editors=$scope.model.editors,$scope.nameChanged=!1,localizationService.localizeMany(["grid_addRowConfiguration","grid_allowAllEditors"]).then(function(data){vm.labels.title=data[0],vm.labels.allowAllEditors=data[1],function setTitle(value){$scope.model.title||($scope.model.title=value)}(vm.labels.title)})}()}function IdWithGuidValueController($rootScope,$scope,$filter){!function formatDisplayValue(){$scope.model.value.length>1?($scope.displayid=$scope.model.value[0],$scope.displayguid=$scope.model.value[1]):$scope.displayid=$scope.model.value}()}function iconPreValsController($scope,editorService){$scope.model.value||($scope.model.value="icon-list");var valueArray=$scope.model.value.split(" ");$scope.icon=valueArray[0],$scope.color=valueArray[1],$scope.openIconPicker=function(){var iconPicker={icon:$scope.icon,color:$scope.color,submit:function submit(model){model.icon&&(model.color?($scope.model.value=model.icon+" "+model.color,$scope.color=model.color):$scope.model.value=model.icon,$scope.icon=model.icon,$scope.iconForm.$setDirty()),editorService.close()},close:function close(){editorService.close()}};editorService.iconPicker(iconPicker)}}function includePropsPreValsController($rootScope,$scope,localizationService,contentTypeResource){$scope.model.value||($scope.model.value=[]),$scope.hasError=!1,$scope.errorMsg="",$scope.propertyAliases=[],$scope.selectedField=null,$scope.systemFields=[{value:"sortOrder"},{value:"updateDate"},{value:"updater"},{value:"createDate"},{value:"owner"},{value:"published"},{value:"contentTypeAlias"},{value:"email"},{value:"username"}],$scope.getLocalizedKey=function(alias){switch(alias){case"name":return"general_name";case"sortOrder":return"general_sort";case"updateDate":return"content_updateDate";case"updater":return"content_updatedBy";case"createDate":return"content_createDate";case"owner":return"content_createBy";case"published":return"content_isPublished";case"contentTypeAlias":return"content_documentType";case"email":return"general_email";case"username":return"general_username"}return alias},$scope.changeField=function(){$scope.hasError=!1,$scope.errorMsg=""},$scope.removeField=function(e){var index=$scope.model.value.indexOf(e);$scope.model.value.splice(index,1)},_.each($scope.systemFields,function(e,i){var key=$scope.getLocalizedKey(e.value);localizationService.localize(key).then(function(v){switch(e.name=v,e.value){case"updater":case"published":e.name+=" (Content only)";break;case"email":case"username":e.name+=" (Members only)"}})});$scope.sortableOptions={helper:function fixHelper(e,ui){ui.children().each(function(){$(this).width($(this).width())});var row=ui.clone();return row.css("background-color","lightgray"),row},handle:".handle",opacity:.5,axis:"y",containment:"parent",cursor:"move",items:"> tr",tolerance:"pointer",forcePlaceholderSize:!0,start:function start(e,ui){ui.placeholder.height(ui.item.height())},update:function update(e,ui){var newIndex=ui.item.index(),originalIndex=function getAliasIndexByText(value){for(var i=0;i<$scope.model.value.length;i++)if($scope.model.value[i].alias===value)return i;return-1}($(".alias-value",ui.item).text().trim());if(originalIndex>-1){var movedElement=$scope.model.value[originalIndex];$scope.model.value.splice(originalIndex,1),$scope.model.value.splice(newIndex,0,movedElement)}}},contentTypeResource.getAllPropertyTypeAliases().then(function(data){$scope.propertyAliases=data}),$scope.addField=function(){var val=$scope.selectedField;if(val){var isSystem=val.startsWith("_system_");isSystem&&(val=val.trimStart("_system_")),_.find($scope.model.value,function(i){return i.alias===val})?($scope.hasError=!0,$scope.errorMsg="Property is already added"):($scope.hasError=!1,$scope.errorMsg="",$scope.model.value.push({alias:val,isSystem:isSystem?1:0}))}else $scope.hasError=!0,$scope.errorMsg="No property selected"}}function listViewController($scope,$interpolate,$routeParams,$injector,$timeout,currentUserResource,notificationsService,iconHelper,editorState,localizationService,appState,$location,listViewHelper,navigationService,editorService,overlayService,languageResource,mediaHelper,eventsService){if($routeParams.create)$scope.isNew=!0;else{var contentResource,getContentTypesCallback,getListResultsCallback,deleteItemCallback,getIdCallback,createEditUrlCallback;if($scope.model.config.entityType&&"member"===$scope.model.config.entityType||"member"===appState.getSectionState("currentSection")?($scope.entityType="member",contentResource=$injector.get("memberResource"),getContentTypesCallback=$injector.get("memberTypeResource").getTypes,getListResultsCallback=contentResource.getPagedResults,deleteItemCallback=contentResource.deleteByKey,getIdCallback=function getIdCallback(selected){return selected.key},createEditUrlCallback=function createEditUrlCallback(item){return"/"+$scope.entityType+"/"+$scope.entityType+"/edit/"+item.key+"?page="+$scope.options.pageNumber+"&listName="+$scope.contentId}):($scope.model.config.entityType&&"media"===$scope.model.config.entityType||"media"===appState.getSectionState("currentSection")?($scope.entityType="media",contentResource=$injector.get("mediaResource"),getContentTypesCallback=$injector.get("mediaTypeResource").getAllowedTypes):($scope.entityType="content",contentResource=$injector.get("contentResource"),getContentTypesCallback=$injector.get("contentTypeResource").getAllowedTypes),getListResultsCallback=contentResource.getChildren,deleteItemCallback=contentResource.deleteById,getIdCallback=function getIdCallback(selected){return selected.id},createEditUrlCallback=function createEditUrlCallback(item){return"/"+$scope.entityType+"/"+$scope.entityType+"/edit/"+item.id+"?list="+$routeParams.id+"&page="+$scope.options.pageNumber+"&filter="+$scope.options.filter+"&orderBy="+$scope.options.orderBy+"&orderDirection="+$scope.options.orderDirection}),$scope.pagination=[],$scope.isNew=!1,$scope.actionInProgress=!1,$scope.selection=[],$scope.folders=[],$scope.page={createDropdownOpen:!1},$scope.listViewResultSet={totalPages:0,items:[]},$scope.createAllowedButtonSingle=!1,$scope.createAllowedButtonSingleWithBlueprints=!1,$scope.createAllowedButtonMultiWithBlueprints=!1,$scope.currentNodePermissions=null,"content"===$scope.entityType&&editorState.current){var currentUserPermissions=editorState.current.allowedActions;$scope.currentNodePermissions={canCopy:_.contains(currentUserPermissions,"O"),canCreate:_.contains(currentUserPermissions,"C"),canDelete:_.contains(currentUserPermissions,"D"),canMove:_.contains(currentUserPermissions,"M"),canPublish:_.contains(currentUserPermissions,"U"),canUnpublish:_.contains(currentUserPermissions,"U")}}if($scope.buttonPermissions=null,"content"===$scope.entityType){var idsWithPermissions=null;$scope.buttonPermissions={canCopy:!0,canCreate:!0,canDelete:!0,canMove:!0,canPublish:!0,canUnpublish:!0},$scope.$watch("selection.length",function(newVal,oldVal){if(null==idsWithPermissions&&newVal>0||null!=idsWithPermissions){var ids=_.map($scope.selection,function(i){return i.id.toString()}),filtered={};_.each(idsWithPermissions,function(value,key,list){_.contains(ids,key)&&(filtered[key]=value)}),idsWithPermissions=filtered;var existingIds=_.keys(idsWithPermissions),missingLookup=_.map(_.difference(ids,existingIds),function(i){return Number(i)});missingLookup.length>0?currentUserResource.getPermissions(missingLookup).then(function(p){$scope.buttonPermissions=listViewHelper.getButtonPermissions(p,idsWithPermissions)}):$scope.buttonPermissions=listViewHelper.getButtonPermissions({},idsWithPermissions)}})}var listParamsForCurrent=$routeParams.id==$routeParams.list;$scope.options={useInfiniteEditor:!0===$scope.model.config.useInfiniteEditor,pageSize:$scope.model.config.pageSize?$scope.model.config.pageSize:10,pageNumber:listParamsForCurrent&&$routeParams.page&&NaN!=Number($routeParams.page)&&Number($routeParams.page)>0?$routeParams.page:1,filter:(listParamsForCurrent&&$routeParams.filter?$routeParams.filter:"").trim(),orderBy:(listParamsForCurrent&&$routeParams.orderBy?$routeParams.orderBy:$scope.model.config.orderBy?$scope.model.config.orderBy:"VersionDate").trim(),orderDirection:(listParamsForCurrent&&$routeParams.orderDirection?$routeParams.orderDirection:$scope.model.config.orderDirection?$scope.model.config.orderDirection:"desc").trim(),orderBySystemField:!0,includeProperties:$scope.model.config.includeProperties?$scope.model.config.includeProperties:[{alias:"updateDate",header:"Last edited",isSystem:1},{alias:"updater",header:"Last edited by",isSystem:1}],layout:{layouts:$scope.model.config.layouts,activeLayout:listViewHelper.getLayout($routeParams.id,$scope.model.config.layouts)},allowBulkPublish:"content"===$scope.entityType&&$scope.model.config.bulkActionPermissions.allowBulkPublish,allowBulkUnpublish:"content"===$scope.entityType&&$scope.model.config.bulkActionPermissions.allowBulkUnpublish,allowBulkCopy:"content"===$scope.entityType&&$scope.model.config.bulkActionPermissions.allowBulkCopy,allowBulkMove:"member"!==$scope.entityType&&$scope.model.config.bulkActionPermissions.allowBulkMove,allowBulkDelete:$scope.model.config.bulkActionPermissions.allowBulkDelete,cultureName:$routeParams.cculture?$routeParams.cculture:$routeParams.mculture},_.each($scope.options.includeProperties,function(property){property.nameExp=property.nameTemplate?$interpolate(property.nameTemplate):void 0}),$scope.$watch(function(){return $routeParams.cculture?$routeParams.cculture:$routeParams.mculture},function(newVal,oldVal){newVal&&newVal!==oldVal&&($scope.options.cultureName=newVal,$scope.reloadView($scope.contentId))});for(var j=0;j<$scope.options.includeProperties.length;j++){var includedProperty=$scope.options.includeProperties[j];if(includedProperty.alias.toLowerCase()===$scope.options.orderBy.toLowerCase()){$scope.options.orderBySystemField=1===includedProperty.isSystem;break}}if(_.each($scope.options.includeProperties,function(e,i){if(e.allowSorting=!0,e.isSystem&&"member"===$scope.entityType&&(e.allowSorting="username"===e.alias||"email"===e.alias||"updateDate"===e.alias||"createDate"===e.alias||"contentTypeAlias"===e.alias),e.isSystem){var key=function getLocalizedKey(alias){switch(alias){case"sortOrder":return"general_sort";case"updateDate":return"content_updateDate";case"updater":return"content_updatedBy";case"createDate":return"content_createDate";case"owner":return"content_createBy";case"published":return"content_isPublished";case"contentTypeAlias":return"content"===$scope.entityType?"content_documentType":"media"===$scope.entityType?"content_mediatype":"content_membertype";case"email":return"general_email";case"username":return"general_username"}return alias}(e.alias);localizationService.localize(key).then(function(v){e.header=v})}}),$scope.selectLayout=function(layout){$scope.options.layout.activeLayout=listViewHelper.setLayout($routeParams.id,layout,$scope.model.config.layouts)},$scope.next=function(pageNumber){$scope.options.pageNumber=pageNumber,$scope.reloadView($scope.contentId)},$scope.goToPage=function(pageNumber){$scope.options.pageNumber=pageNumber,$scope.reloadView($scope.contentId)},$scope.prev=function(pageNumber){$scope.options.pageNumber=pageNumber,$scope.reloadView($scope.contentId)},$scope.getContent=function(contentId){$scope.reloadView($scope.contentId,!0)},$scope.reloadView=function(id,reloadActiveNode){id&&($scope.viewLoaded=!1,$scope.folders=[],listViewHelper.clearSelection($scope.listViewResultSet.items,$scope.folders,$scope.selection),getListResultsCallback(id,$scope.options).then(function(data){$scope.actionInProgress=!1,$scope.listViewResultSet=data;var section=appState.getSectionState("currentSection");if($scope.listViewResultSet.items&&_.each($scope.listViewResultSet.items,function(e,index){!function setPropertyValues(result){result.editPath=createEditUrlCallback(result),_.each($scope.options.includeProperties,function(e,i){var alias=e.alias,value=result[alias];if(value===Object(value)&&(value=value.name),void 0===value&&(value=function getCustomPropertyValue(alias,properties){for(var value="",index=0,foundAlias=!1,i=0;i<properties.length;i++){if(properties[i].alias==alias){foundAlias=!0;break}index++}foundAlias&&(value=properties[index].value);return value}(alias,result.properties)),function isDate(val){if(Utilities.isString(val))return val.match(/^(\d{4})\-(\d{2})\-(\d{2})\ (\d{2})\:(\d{2})\:(\d{2})$/);return!1}(value)&&(value=value.substring(0,value.length-3)),e.nameExp){var newValue=e.nameExp({value:value});newValue&&(newValue=newValue.trim())&&(value=newValue)}result[alias]=value})}(e),"media"!==section||mediaHelper.hasFilePropertyType(e)||$scope.folders.push(e)}),$scope.viewLoaded=!0,$scope.options.pageNumber>$scope.listViewResultSet.totalPages)$scope.options.pageNumber=$scope.listViewResultSet.totalPages,$scope.reloadView(id,reloadActiveNode);else if(reloadActiveNode&&"media"===section){var activeNode=appState.getTreeState("selectedNode");activeNode?activeNode.expanded&&navigationService.reloadNode(activeNode):navigationService.reloadSection(section)}}))},$scope.makeSearch=function(){null!==$scope.options.filter&&void 0!==$scope.options.filter&&($scope.options.pageNumber=1,$scope.reloadView($scope.contentId))},$scope.onSearchStartTyping=function(){$scope.viewLoaded=!1},$scope.selectedItemsCount=function(){return $scope.selection.length},$scope.clearSelection=function(){listViewHelper.clearSelection($scope.listViewResultSet.items,$scope.folders,$scope.selection)},$scope.getIcon=function(entry){return iconHelper.convertFromLegacyIcon(entry.icon)},$scope.delete=function(){var dialog={view:"views/propertyeditors/listview/overlays/delete.html",deletesVariants:selectionHasVariants(),isTrashed:$scope.isTrashed,submitButtonLabelKey:"contentTypeEditor_yesDelete",submitButtonStyle:"danger",submit:function submit(model){!function performDelete(){applySelected(function(selected,index){return deleteItemCallback(getIdCallback(selected[index]))},function(count,total){var key=1===total?"bulk_deletedItemOfItem":"bulk_deletedItemOfItems";return localizationService.localize(key,[count,total])},function(total){var key=1===total?"bulk_deletedItem":"bulk_deletedItems";return localizationService.localize(key,[total])}).then(function(){$scope.reloadView($scope.contentId,!0)})}(),overlayService.close()},close:function close(){overlayService.close()}};localizationService.localize("general_delete").then(function(value){dialog.title=value,overlayService.open(dialog)})},$scope.publish=function(){var dialog={view:"views/propertyeditors/listview/overlays/listviewpublish.html",submitButtonLabelKey:"actions_publish",submit:function submit(model){var selectedCultures=[];model.languages&&model.languages.length>0&&model.languages.forEach(function(language){language.publish&&selectedCultures.push(language.culture)}),function performPublish(cultures){applySelected(function(selected,index){return contentResource.publishById(getIdCallback(selected[index]),cultures)},function(count,total){var key=1===total?"bulk_publishedItemOfItem":"bulk_publishedItemOfItems";return localizationService.localize(key,[count,total])},function(total){var key=1===total?"bulk_publishedItem":"bulk_publishedItems";return localizationService.localize(key,[total])}).then(function(){$scope.reloadView($scope.contentId)})}(selectedCultures),overlayService.close()},close:function close(){overlayService.close()}};selectionHasVariants()?languageResource.getAll().then(function(languages){dialog.languages=languages,overlayService.open(dialog)},function(error){notificationsService.error(error)}):overlayService.open(dialog)},$scope.unpublish=function(){var dialog={view:"views/propertyeditors/listview/overlays/listviewunpublish.html",submitButtonLabelKey:"actions_unpublish",submitButtonStyle:"warning",submit:function submit(model){var selectedCultures=[];model.languages&&model.languages.length>0&&model.languages.forEach(function(language){language.unpublish&&selectedCultures.push(language.culture)}),function performUnpublish(cultures){applySelected(function(selected,index){return contentResource.unpublish(getIdCallback(selected[index]),cultures)},function(count,total){var key=1===total?"bulk_unpublishedItemOfItem":"bulk_unpublishedItemOfItems";return localizationService.localize(key,[count,total])},function(total){var key=1===total?"bulk_unpublishedItem":"bulk_unpublishedItems";return localizationService.localize(key,[total])}).then(function(){$scope.reloadView($scope.contentId,!0)})}(selectedCultures),overlayService.close()},close:function close(){overlayService.close()}};selectionHasVariants()?languageResource.getAll().then(function(languages){dialog.languages=languages,overlayService.open(dialog)},function(error){notificationsService.error(error)}):overlayService.open(dialog)},$scope.move=function(){var move={section:$scope.entityType,currentNode:$scope.contentId,submit:function submit(model){model.target&&function performMove(target){var newPath=null;applySelected(function(selected,index){return contentResource.move({parentId:target.id,id:getIdCallback(selected[index])}).then(function(path){return newPath=path,path})},function(count,total){var key=1===total?"bulk_movedItemOfItem":"bulk_movedItemOfItems";return localizationService.localize(key,[count,total])},function(total){var key=1===total?"bulk_movedItem":"bulk_movedItems";return localizationService.localize(key,[total])}).then(function(){newPath&&($scope.reloadView($scope.contentId),navigationService.syncTree({tree:target.nodeType?target.nodeType:target.metaData.treeAlias,path:newPath,forceReload:!0,activate:!1}).then(function(args){var activeNode=appState.getTreeState("selectedNode");activeNode&&navigationService.reloadNode(activeNode)}))})}(model.target),editorService.close()},close:function close(){editorService.close()}};editorService.move(move)},$scope.copy=function(){var copyEditor={section:$scope.entityType,currentNode:$scope.contentId,submit:function submit(model){model.target&&function performCopy(target,relateToOriginal,includeDescendants){applySelected(function(selected,index){return contentResource.copy({parentId:target.id,id:getIdCallback(selected[index]),relateToOriginal:relateToOriginal,recursive:includeDescendants})},function(count,total){var key=1===total?"bulk_copiedItemOfItem":"bulk_copiedItemOfItems";return localizationService.localize(key,[count,total])},function(total){var key=1===total?"bulk_copiedItem":"bulk_copiedItems";return localizationService.localize(key,[total])})}(model.target,model.relateToOriginal,model.includeDescendants),editorService.close()},close:function close(){editorService.close()}};editorService.copy(copyEditor)},$scope.createBlank=function createBlank(entityType,docTypeAlias){if($scope.options.useInfiniteEditor){var editorModel={create:!0,submit:function submit(model){editorService.close(),$scope.reloadView($scope.contentId)},close:function close(){editorService.close(),$scope.reloadView($scope.contentId)}};if("content"==entityType)return editorModel.parentId=$scope.contentId,editorModel.documentTypeAlias=docTypeAlias,void editorService.contentEditor(editorModel);if("media"==entityType)return void editorService.mediaEditor(editorModel);if("member"==entityType)return editorModel.doctype=docTypeAlias,void editorService.memberEditor(editorModel)}$location.path("/"+entityType+"/"+entityType+"/edit/"+$scope.contentId).search("doctype",docTypeAlias).search("create","true")},$scope.createFromBlueprint=function createFromBlueprint(entityType,docTypeAlias,blueprintId){$location.path("/"+entityType+"/"+entityType+"/edit/"+$scope.contentId).search("doctype",docTypeAlias).search("create","true").search("blueprintId",blueprintId)},$scope.toggleDropdown=function toggleDropdown(){$scope.page.createDropdownOpen=!$scope.page.createDropdownOpen},$scope.leaveDropdown=function leaveDropdown(){$scope.page.createDropdownOpen=!1},_.find($scope.options.includeProperties,function(property){return"sortOrder"===property.alias})){var eventSubscription=eventsService.on("sortCompleted",function(e,args){parseInt(args.id)===parseInt($scope.contentId)&&$scope.reloadView($scope.contentId)});$scope.$on("$destroy",function(){eventsService.unsubscribe(eventSubscription)})}!function initView(){var id=$routeParams.id;void 0!==id&&($scope.contentId=id,$scope.isTrashed=editorState.current?editorState.current.trashed:"-20"===id||"-21"===id,$scope.options.allowBulkPublish=$scope.options.allowBulkPublish&&!$scope.isTrashed,$scope.options.allowBulkUnpublish=$scope.options.allowBulkUnpublish&&!$scope.isTrashed,$scope.options.allowBulkCopy=$scope.options.allowBulkCopy&&!$scope.isTrashed,$scope.options.bulkActionsAllowed=$scope.options.allowBulkPublish||$scope.options.allowBulkUnpublish||$scope.options.allowBulkCopy||$scope.options.allowBulkMove||$scope.options.allowBulkDelete,!1===$scope.isTrashed&&getContentTypesCallback(id).then(function(listViewAllowedTypes){$scope.listViewAllowedTypes=listViewAllowedTypes;var blueprints=!1;_.each(listViewAllowedTypes,function(allowedType){_.isEmpty(allowedType.blueprints)?allowedType.blueprints=null:(blueprints=!0,allowedType.blueprints=_.map(_.pairs(allowedType.blueprints||{}),function(pair){return{id:pair[0],name:pair[1]}}))}),1===listViewAllowedTypes.length&&!1===blueprints&&($scope.createAllowedButtonSingle=!0),1===listViewAllowedTypes.length&&!0===blueprints&&($scope.createAllowedButtonSingleWithBlueprints=!0),listViewAllowedTypes.length>1&&($scope.createAllowedButtonMultiWithBlueprints=!0)}),$scope.reloadView($scope.contentId))}()}function showNotificationsAndReset(err,reload,successMsgPromise){err.status&&err.status>=500&&overlayService.ysod(err),$timeout(function(){$scope.bulkStatus="",$scope.actionInProgress=!1},500),successMsgPromise&&localizationService.localize("bulk_done").then(function(v){successMsgPromise.then(function(successMsg){notificationsService.success(v,successMsg)})})}function applySelected(fn,getStatusMsg,getSuccessMsg,confirmMsg){var selected=$scope.selection;if(0!==selected.length&&(!confirmMsg||confirm(confirmMsg)))return $scope.actionInProgress=!0,getStatusMsg(0,selected.length).then(function(value){$scope.bulkStatus=value}),function serial(selected,fn,getStatusMsg,index){return fn(selected,index).then(function(content){return getStatusMsg(++index,selected.length).then(function(value){$scope.bulkStatus=value}),index<selected.length?serial(selected,fn,getStatusMsg,index):content},function(err){return showNotificationsAndReset(err),err})}(selected,fn,getStatusMsg,0).then(function(result){result.data&&Utilities.isArray(result.data.notifications)||showNotificationsAndReset(result,0,getSuccessMsg(selected.length))})}function selectionHasVariants(){var variesByCulture=!1;return $scope.selection.forEach(function(selectedItem){$scope.listViewResultSet.items.forEach(function(resultItem){selectedItem.id!==resultItem.id&&selectedItem.key!==resultItem.key||!resultItem.variesByCulture||(variesByCulture=!0)})}),variesByCulture}}function sortByPreValsController($rootScope,$scope,localizationService,editorState,listViewPrevalueHelper){function getPrevalues(){return editorState.current.preValues?editorState.current.preValues:listViewPrevalueHelper.getPrevalues()}$scope.$watch(function(){return _.findWhere(getPrevalues(),{key:"includeProperties"}).value},function(){!function populateFields(){function findFromSortByFields(value){return _.find($scope.sortByFields,function(e){return e.value.toLowerCase()===value.toLowerCase()})}var propsPreValue=_.findWhere(getPrevalues(),{key:"includeProperties"});if($scope.sortByFields=[],$scope.sortByFields.push({value:"name",name:"Name",isSystem:1}),null!=propsPreValue)for(var i=0;i<propsPreValue.value.length;i++){var value=propsPreValue.value[i];$scope.sortByFields.push({value:value.alias,name:value.header,isSystem:value.isSystem})}_.each([{value:"SortOrder",key:"general_sort"},{value:"Name",key:"general_name"},{value:"UpdateDate",key:"content_updateDate"},{value:"Updater",key:"content_updatedBy"},{value:"CreateDate",key:"content_createDate"},{value:"Owner",key:"content_createBy"},{value:"ContentTypeAlias",key:"content_documentType"},{value:"Published",key:"content_isPublished"},{value:"Email",key:"general_email"},{value:"Username",key:"general_username"}],function(e){localizationService.localize(e.key).then(function(v){var sortByListValue=findFromSortByFields(e.value);sortByListValue&&(sortByListValue.name=v)})}),_.each($scope.sortByFields,function(sortByField){sortByField.name||(sortByField.name="("+sortByField.value+")")});var existingValue=findFromSortByFields($scope.model.value);$scope.model.value=existingValue?existingValue.value:$scope.sortByFields[0].value}()},!0)}function MarkdownEditorController($scope,$element,assetsService,editorService,$timeout){null!==$scope.model.value&&""!==$scope.model.value||($scope.model.value=$scope.model.config.defaultValue),$scope.editorId=$scope.model.alias+_.uniqueId("-"),assetsService.load(["lib/markdown/markdown.converter.js","lib/markdown/markdown.sanitizer.js","lib/markdown/markdown.editor.js"]).then(function(){setTimeout(function(){$timeout(function(){$scope.markdownEditorInitComplete=!1;var converter2=new Markdown.Converter,editor2=new Markdown.Editor(converter2,"-"+$scope.editorId);editor2.run(),editor2.hooks.set("insertImageDialog",function(callback){return function openMediaPicker(callback){var mediaPicker={disableFolderSelect:!0,submit:function submit(model){var selectedImagePath=model.selection[0].image;callback(selectedImagePath),editorService.close()},close:function close(){editorService.close()}};editorService.mediaPicker(mediaPicker)}(callback),!0}),editor2.hooks.set("insertLinkDialog",function(callback){return function openLinkPicker(callback){var linkPicker={hideTarget:!0,size:$scope.model.config.overlayWidthSize,submit:function submit(model){callback(model.target.url,model.target.name),editorService.close()},close:function close(){editorService.close()}};editorService.linkPicker(linkPicker)}(callback),!0}),editor2.hooks.set("onPreviewRefresh",function(){$scope.model.value!==$("textarea",$element).val()&&($scope.markdownEditorInitComplete?function setDirty(){$scope.modelValueForm&&$scope.modelValueForm.modelValue.$setDirty()}():$scope.markdownEditorInitComplete=!0,$scope.model.value=$("textarea",$element).val())})},200)}),assetsService.loadCss("lib/markdown/markdown.css",$scope)})}function memberGroupPicker($scope,editorService,memberGroupResource){if(this.openMemberGroupPicker=function openMemberGroupPicker(){var memberGroupPicker={multiPicker:!0,submit:function submit(model){var selectedGroupIds=_.map(model.selectedMemberGroups?model.selectedMemberGroups:[model.selectedMemberGroup],function(id){return parseInt(id)}),newGroupIds=_.difference(selectedGroupIds,renderModelIds());newGroupIds&&newGroupIds.length?memberGroupResource.getByIds(newGroupIds).then(function(groups){$scope.renderModel=_.union($scope.renderModel,groups),setDirty(),editorService.close()}):editorService.close()},close:function close(){editorService.close()}};editorService.memberGroupPicker(memberGroupPicker)},this.remove=function remove(index){$scope.renderModel.splice(index,1),setDirty()},this.clear=function clear(){$scope.renderModel=[],setDirty()},$scope.renderModel=[],$scope.allowRemove=!0,$scope.groupIds=[],$scope.model.value){var groupIds=$scope.model.value.split(",");memberGroupResource.getByIds(groupIds).then(function(groups){$scope.renderModel=groups})}function setDirty(){$scope.modelValueForm&&$scope.modelValueForm.modelValue.$setDirty()}function renderModelIds(){return _.map($scope.renderModel,function(i){return i.id})}var unsubscribe=$scope.$on("formSubmitting",function(ev,args){$scope.model.value=function trim(str,chr){var rgxtrim=chr?new RegExp("^"+chr+"+|"+chr+"+$","g"):new RegExp("^\\s+|\\s+$","g");return str.replace(rgxtrim,"")}(renderModelIds().join(),",")});$scope.$on("$destroy",function(){unsubscribe()})}function memberGroupController($scope,editorService,memberGroupResource){function setDirty(){$scope.modelValueForm&&$scope.modelValueForm.modelValue.$setDirty()}this.pickGroup=function pickGroup(){editorService.memberGroupPicker({multiPicker:!0,submit:function submit(model){var selectedGroupIds=_.map(model.selectedMemberGroups?model.selectedMemberGroups:[model.selectedMemberGroup],function(id){return parseInt(id)});memberGroupResource.getByIds(selectedGroupIds).then(function(selectedGroups){_.each(selectedGroups,function(group){$scope.model.value[group.name]=!0})}),setDirty(),editorService.close()},close:function close(){editorService.close()}})},this.removeGroup=function removeGroup(group){$scope.model.value[group]=!1,setDirty()},$scope.getSelected=function(){var selected=[];for(var n in $scope.model.value)!0===$scope.model.value[n]&&selected.push(n);return selected}}function memberPickerController($scope,entityResource,iconHelper,editorService){$scope.renderModel=[],$scope.allowRemove=!0;var dialogOptions={multiPicker:!1,entityType:"Member",section:"member",treeAlias:"member",filter:function filter(i){return 1==i.metaData.isContainer},filterCssClass:"not-allowed",callback:function callback(data){Utilities.isArray(data)?_.each(data,function(item,i){$scope.add(item)}):($scope.clear(),$scope.add(data))}};function setDirty(){$scope.modelValueForm&&$scope.modelValueForm.modelValue.$setDirty()}$scope.model.config&&Utilities.extend(dialogOptions,$scope.model.config),$scope.openMemberPicker=function(){var memberPicker=dialogOptions;memberPicker.submit=function(model){model.selection&&_.each(model.selection,function(item,i){$scope.add(item)}),editorService.close()},memberPicker.close=function(){editorService.close()},editorService.treePicker(memberPicker)},$scope.remove=function(index){$scope.renderModel.splice(index,1),setDirty()},$scope.add=function(item){var currIds=_.map($scope.renderModel,function(i){return"udi"===$scope.model.config.idType?i.udi:i.id}),itemId="udi"===$scope.model.config.idType?item.udi:item.id;currIds.indexOf(itemId)<0&&(item.icon=iconHelper.convertFromLegacyIcon(item.icon),$scope.renderModel.push({name:item.name,id:item.id,udi:item.udi,icon:item.icon}),setDirty())},$scope.clear=function(){$scope.renderModel=[]};var unsubscribe=$scope.$on("formSubmitting",function(ev,args){var currIds=_.map($scope.renderModel,function(i){return"udi"===$scope.model.config.idType?i.udi:i.id});$scope.model.value=function trim(str,chr){var rgxtrim=chr?new RegExp("^"+chr+"+|"+chr+"+$","g"):new RegExp("^\\s+|\\s+$","g");return str.replace(rgxtrim,"")}(currIds.join(),",")});$scope.$on("$destroy",function(){unsubscribe()});var modelIds=$scope.model.value?$scope.model.value.split(","):[];entityResource.getByIds(modelIds,"Member").then(function(data){_.each(data,function(item,i){item.icon=item.icon?iconHelper.convertFromLegacyIcon(item.icon):"icon-user",$scope.renderModel.push({name:item.name,id:item.id,udi:item.udi,icon:item.icon})})})}function MultipleTextBoxController($scope,$timeout){var backspaceHits=0;if($scope.promptIsVisible="-1",$scope.sortableOptions={axis:"y",containment:"parent",cursor:"move",items:"> div.textbox-wrapper",tolerance:"pointer"},$scope.model.value||($scope.model.value=[]),$scope.model.config.min>0)for(var i=0;i<$scope.model.config.min;i++)i+1>$scope.model.value.length&&$scope.model.value.push({value:""});function validate(){if($scope.multipleTextboxForm){var invalid=$scope.model.validation.mandatory&&!$scope.model.value.length;$scope.multipleTextboxForm.mandatory.$setValidity("minCount",!invalid)}}$scope.addRemoveOnKeyDown=function(event,index){var txtBoxValue=$scope.model.value[index];switch(event.preventDefault(),event.keyCode){case 13:if($scope.model.config.max<=0&&txtBoxValue.value||$scope.model.value.length<$scope.model.config.max&&txtBoxValue.value){var newItemIndex=index+1;$scope.model.value.splice(newItemIndex,0,{value:""}),$scope.model.value[newItemIndex].hasFocus=!0}break;case 8:if($scope.model.value.length>$scope.model.config.min){var remainder=[];if(""===txtBoxValue.value?backspaceHits++:backspaceHits=0,""===txtBoxValue.value&&2===backspaceHits){for(var x=0;x<$scope.model.value.length;x++)x!==index&&remainder.push($scope.model.value[x]);$scope.model.value=remainder;var prevItemIndex=index-1;prevItemIndex>=0&&($scope.model.value[prevItemIndex].hasFocus=!1,$timeout(function(){$scope.model.value[prevItemIndex].hasFocus=!0})),backspaceHits=0}}}validate()},$scope.add=function(){if($scope.model.config.max<=0||$scope.model.value.length<$scope.model.config.max){$scope.model.value.push({value:""});var newItemIndex=$scope.model.value.length-1;$scope.model.value[newItemIndex].hasFocus=!0}validate()},$scope.remove=function(index){$scope.hidePrompt();for(var remainder=[],x=0;x<$scope.model.value.length;x++)x!==index&&remainder.push($scope.model.value[x]);$scope.model.value=remainder},$scope.showPrompt=function(idx,item){var i=$scope.model.value.indexOf(item);i===idx&&($scope.promptIsVisible=i)},$scope.hidePrompt=function(){$scope.promptIsVisible="-1"},$timeout(function(){validate()});var unsubscribe=$scope.$on("formSubmitting",function(ev,args){$scope.model.value=$scope.model.value.filter(function(el){return""!==el.value.trim()})||[]});$scope.$on("$destroy",function(){unsubscribe()})}function multiUrlPickerController($scope,localizationService,entityResource,iconHelper,editorService){var vm={labels:{general_recycleBin:""}};function setDirty(){$scope.multiUrlPickerForm&&$scope.multiUrlPickerForm.modelValue.$setDirty()}$scope.renderModel=[],$scope.preview||(Array.isArray($scope.model.value)||($scope.model.value=[]),$scope.sortableOptions={axis:"y",containment:"parent",distance:10,opacity:.7,tolerance:"pointer",scroll:!0,zIndex:6e3,update:function update(){setDirty()}},$scope.model.value.forEach(function(link){link.icon=iconHelper.convertFromLegacyIcon(link.icon),$scope.renderModel.push(link)}),$scope.$on("formSubmitting",function(){$scope.model.value=$scope.renderModel}),$scope.$watch(function(){return $scope.renderModel.length},function(){$scope.model.config&&$scope.model.config.minNumber&&parseInt($scope.model.config.minNumber)>$scope.renderModel.length?$scope.multiUrlPickerForm.minCount.$setValidity("minCount",!1):$scope.multiUrlPickerForm.minCount.$setValidity("minCount",!0),$scope.model.config&&$scope.model.config.maxNumber&&parseInt($scope.model.config.maxNumber)<$scope.renderModel.length?$scope.multiUrlPickerForm.maxCount.$setValidity("maxCount",!1):$scope.multiUrlPickerForm.maxCount.$setValidity("maxCount",!0),$scope.sortableOptions.disabled=1===$scope.renderModel.length,$scope.model.value=$scope.renderModel}),$scope.remove=function($index){$scope.renderModel.splice($index,1),setDirty()},$scope.openLinkPicker=function(link,$index){var linkPicker={currentTarget:link?{name:link.name,anchor:link.queryString,udi:link.udi,url:link.url,target:link.target}:null,dataTypeKey:$scope.model.dataTypeKey,ignoreUserStartNodes:$scope.model.config&&$scope.model.config.ignoreUserStartNodes?$scope.model.config.ignoreUserStartNodes:"0",hideAnchor:!(!$scope.model.config||!$scope.model.config.hideAnchor),size:$scope.model.config.overlayWidthSize,submit:function submit(model){if(model.target.url||model.target.anchor){if(model.target.anchor&&"?"!==model.target.anchor[0]&&"#"!==model.target.anchor[0]&&(model.target.anchor=(-1===model.target.anchor.indexOf("=")?"#":"?")+model.target.anchor),link?(link.udi=model.target.udi,link.name=model.target.name||model.target.url||model.target.anchor,link.queryString=model.target.anchor,link.target=model.target.target,link.url=model.target.url):(link={name:model.target.name||model.target.url||model.target.anchor,queryString:model.target.anchor,target:model.target.target,udi:model.target.udi,url:model.target.url},$scope.renderModel.push(link)),link.udi){var entityType=model.target.isMedia?"Media":"Document";entityResource.getById(link.udi,entityType).then(function(data){link.icon=iconHelper.convertFromLegacyIcon(data.icon),link.published=!data.metaData||!1!==data.metaData.IsPublished||"Document"!==entityType,link.trashed=data.trashed,link.trashed&&(item.url=vm.labels.general_recycleBin)})}else link.icon="icon-link",link.published=!0;setDirty()}editorService.close()},close:function close(){editorService.close()}};editorService.linkPicker(linkPicker)},function init(){localizationService.localizeMany(["general_recycleBin"]).then(function(data){vm.labels.general_recycleBin=data[0]}),$scope.model.validation&&$scope.model.validation.mandatory&&!$scope.model.config.minNumber&&($scope.model.config.minNumber=1),_.each($scope.model.value,function(item){item.udi&&item.udi.indexOf("/document/")>0&&(item.url=null,entityResource.getUrlByUdi(item.udi).then(function(data){item.url=data}))})}())}function _typeof(obj){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function _typeof(obj){return typeof obj}:function _typeof(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function ReadOnlyValueController($rootScope,$scope,$filter){function formatDisplayValue(){$scope.model.config&&$scope.model.config.filter?$scope.model.config.format?$scope.displayvalue=$filter($scope.model.config.filter)($scope.model.value,$scope.model.config.format):$scope.displayvalue=$filter($scope.model.config.filter)($scope.model.value):$scope.displayvalue=$scope.model.value}formatDisplayValue(),$scope.$watch("model.value",function(newVal,oldVal){null!=newVal&&newVal!==oldVal&&formatDisplayValue()})}function sliderController($scope){var sliderRef=null;function setModelValue(values){$scope.model.value=values?values.toString():null,function setDirty(){$scope.modelValueForm&&$scope.modelValueForm.modelValue.$setDirty()}()}$scope.setup=function(slider){sliderRef=slider},$scope.change=function(values){setModelValue(values)},$scope.$watch("model.value",function(newValue,oldValue){newValue&&newValue!==oldValue&&($scope.sliderValue=newValue.split(","),sliderRef.noUiSlider.set($scope.sliderValue))}),function init(){!function configureDefaults(){$scope.model.config.enableRange=!!$scope.model.config.enableRange&&Object.toBoolean($scope.model.config.enableRange),$scope.model.config.initVal1=$scope.model.config.initVal1?parseFloat($scope.model.config.initVal1):0,$scope.model.config.initVal2=$scope.model.config.initVal2?parseFloat($scope.model.config.initVal2):0,$scope.model.config.minVal=$scope.model.config.minVal?parseFloat($scope.model.config.minVal):0,$scope.model.config.maxVal=$scope.model.config.maxVal?parseFloat($scope.model.config.maxVal):100,$scope.model.config.step=$scope.model.config.step?parseFloat($scope.model.config.step):1}();var start=$scope.model.config.enableRange?[$scope.model.config.initVal1,$scope.model.config.initVal2]:[$scope.model.config.initVal1],step=$scope.model.config.step,tooltips=$scope.model.config.enableRange?[!0,!0]:[!0],min=($scope.model.config.minVal,[$scope.model.config.minVal]),max=($scope.model.config.maxVal,[$scope.model.config.maxVal]);$scope.model.value||($scope.model.value=start.toString()),$scope.sliderValue=$scope.model.value?$scope.model.value.split(","):null;var stepDecimalPlaces=$scope.model.config.step%1==0?0:_.last($scope.model.config.step.toString().replace(",",".").split(".")).length;$scope.sliderOptions={start:start,step:step,tooltips:tooltips,format:{to:function to(value){return value.toFixed(stepDecimalPlaces)},from:function from(value){return Number(value)}},range:{min:min,max:max},pips:{mode:"steps",density:100,filter:function filterPips(value){return value===$scope.model.config.minVal||value===$scope.model.config.maxVal?1:-1}}}}()}function textAreaController($scope,validationMessageService){$scope.model.config||($scope.model.config={}),$scope.maxChars=$scope.model.config.maxChars||0,$scope.maxCharsLimit=$scope.model.config&&$scope.model.config.maxChars>0,$scope.charsCount=0,$scope.nearMaxLimit=!1,$scope.validLength=!0,$scope.$on("formSubmitting",function(){$scope.validLength?$scope.textareaFieldForm.textarea.$setValidity("maxChars",!0):$scope.textareaFieldForm.textarea.$setValidity("maxChars",!1)}),$scope.change=function(){$scope.model.value&&($scope.charsCount=$scope.model.value.length,function checkLengthVadility(){$scope.validLength=!(!0===$scope.maxCharsLimit&&$scope.charsCount>$scope.maxChars)}(),$scope.nearMaxLimit=!0===$scope.maxCharsLimit&&!0===$scope.validLength&&$scope.charsCount>Math.max(.8*$scope.maxChars,$scope.maxChars-50))},$scope.model.onValueChanged=$scope.change,$scope.change(),validationMessageService.getMandatoryMessage($scope.model.validation).then(function(value){$scope.mandatoryMessage=value})}function textboxController($scope,validationMessageService){function checkLengthVadility(){$scope.validLength=$scope.charsCount<=$scope.maxChars}$scope.model.config||($scope.model.config={}),$scope.maxChars=Math.min($scope.model.config.maxChars||512,512),$scope.charsCount=0,$scope.nearMaxLimit=!1,$scope.validLength=!0,$scope.$on("formSubmitting",function(){!0===$scope.validLength?$scope.textboxFieldForm.textbox.$setValidity("maxChars",!0):$scope.textboxFieldForm.textbox.$setValidity("maxChars",!1)}),$scope.change=function(){$scope.model.value?($scope.charsCount=$scope.model.value.length,checkLengthVadility(),$scope.nearMaxLimit=$scope.validLength&&$scope.charsCount>Math.max(.8*$scope.maxChars,$scope.maxChars-25)):($scope.charsCount=0,checkLengthVadility())},$scope.model.onValueChanged=$scope.change,$scope.change(),validationMessageService.getMandatoryMessage($scope.model.validation).then(function(value){$scope.mandatoryMessage=value})}function userPickerController($scope,iconHelper,editorService,overlayService,entityResource){$scope.renderModel=[],$scope.allowRemove=!0;var multiPicker=!(!$scope.model.config.multiPicker||"0"===$scope.model.config.multiPicker);function setDirty(){$scope.modelValueForm&&$scope.modelValueForm.modelValue.$setDirty()}$scope.openUserPicker=function(){var userPicker={multiPicker:multiPicker,selection:[],submit:function submit(model){model.selection&&_.each(model.selection,function(item,i){$scope.add(item)}),editorService.close()},close:function close(){editorService.close()}};editorService.userPicker(userPicker)},$scope.remove=function(index){var dialog={view:"views/propertyeditors/userpicker/overlays/remove.html",username:$scope.renderModel[index].name,submitButtonLabelKey:"defaultdialogs_yesRemove",submitButtonStyle:"danger",submit:function submit(){$scope.renderModel.splice(index,1),$scope.userName="",setDirty(),overlayService.close()},close:function close(){overlayService.close()}};overlayService.open(dialog)},$scope.add=function(item){var currIds=_.map($scope.renderModel,function(i){return"udi"===$scope.model.config.idType?i.udi:i.id}),itemId="udi"===$scope.model.config.idType?item.udi:item.id;currIds.indexOf(itemId)<0&&(item.icon=item.icon?iconHelper.convertFromLegacyIcon(item.icon):"icon-user",$scope.renderModel.push({name:item.name,id:item.id,udi:item.udi,icon:item.icon,avatars:item.avatars}),setDirty())},$scope.clear=function(){$scope.renderModel=[],setDirty()};var unsubscribe=$scope.$on("formSubmitting",function(ev,args){var currIds=_.map($scope.renderModel,function(i){return"udi"===$scope.model.config.idType?i.udi:i.id});$scope.model.value=function trim(str,chr){var rgxtrim=chr?new RegExp("^"+chr+"+|"+chr+"+$","g"):new RegExp("^\\s+|\\s+$","g");return str.replace(rgxtrim,"")}(currIds.join(),",")});$scope.$on("$destroy",function(){unsubscribe()});var modelIds=$scope.model.value?$scope.model.value.split(",").map(function(x){return+x}):[];0!==modelIds.length&&entityResource.getAll("User").then(function(users){users.filter(function(user){return-1!==modelIds.indexOf(user.id)}).forEach(function(item){$scope.renderModel.push({name:item.name,id:item.id,udi:item.udi,icon:item.icon=item.icon?iconHelper.convertFromLegacyIcon(item.icon):"icon-user",avatars:item.avatars})})})}function RelationTypeCreateController($scope,$location,relationTypeResource,navigationService,formHelper,appState,notificationsService){var vm=this;vm.relationType={},vm.objectTypes={},vm.createRelationType=function createRelationType(){if(formHelper.submitForm({scope:$scope,formCtrl:$scope.createRelationTypeForm,statusMessage:"Creating relation type..."})){var node=$scope.currentNode;relationTypeResource.create(vm.relationType).then(function(data){navigationService.hideMenu();var currentPath=node.path?node.path:"-1";navigationService.syncTree({tree:"relationTypes",path:currentPath+","+data,forceReload:!0,activate:!0}),formHelper.resetForm({scope:$scope,formCtrl:$scope.createRelationTypeForm});var currentSection=appState.getSectionState("currentSection");$location.path("/"+currentSection+"/relationTypes/edit/"+data)},function(err){formHelper.resetForm({scope:$scope,formCtrl:$scope.createRelationTypeForm,hasErrors:!0}),err.data&&err.data.message&&(notificationsService.error(err.data.message),navigationService.hideMenu())})}},function init(){$scope.$emit("$changeTitle",""),relationTypeResource.getRelationObjectTypes().then(function(data){vm.objectTypes=data},function(err){notificationsService.error("Could not load form.")})}()}function RelationTypeDeleteController($scope,$location,relationTypeResource,treeService,navigationService,appState){this.cancel=function cancel(){navigationService.hideDialog()},this.performDelete=function performDelete(){if($scope.busy)return!1;$scope.currentNode.loading=!0,$scope.busy=!0,relationTypeResource.deleteById($scope.currentNode.id).then(function(){$scope.currentNode.loading=!1,treeService.removeNode($scope.currentNode),navigationService.hideMenu();var currentSection=appState.getSectionState("currentSection");$location.path("/"+currentSection+"/")})}}function RelationTypeEditController($scope,$routeParams,relationTypeResource,editorState,navigationService,dateHelper,userService,entityResource,formHelper,contentEditingHelper,localizationService,eventsService){var vm=this;function changePageNumber(pageNumber){vm.options.pageNumber=pageNumber,loadRelations()}function loadRelations(){relationTypeResource.getPagedResults($routeParams.id,vm.options).then(function(data){!function formatDates(relations){relations&&userService.getCurrentUser().then(function(currentUser){relations.forEach(function(relation){relation.timestampFormatted=dateHelper.getLocalDate(relation.createDate,currentUser.locale,"LLL")})})}(data.items),vm.relationsLoading=!1,vm.relations=data})}function bindRelationType(relationType){relationType.isBidirectional=(relationType.isBidirectional||!1).toString(),vm.relationType=relationType,editorState.set(vm.relationType),navigationService.syncTree({tree:"relationTypes",path:relationType.path,forceReload:!0}).then(function(syncArgs){vm.page.menu.currentNode=syncArgs.node})}vm.header={},vm.header.editorfor="relationType_tabRelationType",vm.header.setPageTitle=!0,vm.page={},vm.page.loading=!1,vm.page.saveButtonState="init",vm.page.menu={},vm.save=function saveRelationType(){formHelper.submitForm({scope:$scope,statusMessage:"Saving..."})&&(vm.page.saveButtonState="busy",relationTypeResource.save(vm.relationType).then(function(data){formHelper.resetForm({scope:$scope}),bindRelationType(data),vm.page.saveButtonState="success"},function(error){formHelper.resetForm({scope:$scope,hasErrors:!0}),contentEditingHelper.handleSaveError({err:error}),notificationsService.error(error.data.message),vm.page.saveButtonState="error"}))},function init(){vm.page.loading=!0,vm.relationsLoading=!0,vm.changePageNumber=changePageNumber,vm.options={};localizationService.localizeMany(["relationType_tabRelationType","relationType_tabRelations"]).then(function(data){vm.page.navigation=[{name:data[0],alias:"relationType",icon:"icon-info",view:"views/relationTypes/views/relationType.html",active:!0},{name:data[1],alias:"relations",icon:"icon-trafic",view:"views/relationTypes/views/relations.html"}]});var appTabChange=eventsService.on("app.tabChange",function(event,args){"relations"===args.alias&&loadRelations()});$scope.$on("$destroy",function(){appTabChange()}),relationTypeResource.getById($routeParams.id).then(function(data){bindRelationType(data),vm.page.loading=!1})}()}function RelationTypeSettingsController($scope,localizationService){var vm=this;vm.labels={},function init(){localizationService.localizeMany(["relationType_parentToChild","relationType_bidirectional"]).then(function(data){vm.labels.parentToChild=data[0],vm.labels.bidirectional=data[1]})}()}function ScriptsDeleteController($scope,codefileResource,treeService,navigationService){$scope.performDelete=function(){$scope.currentNode.loading=!0,codefileResource.deleteByPath("scripts",$scope.currentNode.id).then(function(){$scope.currentNode.loading=!1;treeService.getTreeRoot($scope.currentNode);treeService.removeNode($scope.currentNode),navigationService.hideMenu()})},$scope.cancel=function(){navigationService.hideDialog()}}function StyleSheetsDeleteController($scope,codefileResource,treeService,navigationService){$scope.performDelete=function(){$scope.currentNode.loading=!0,codefileResource.deleteByPath("stylesheets",$scope.currentNode.id).then(function(){$scope.currentNode.loading=!1,treeService.removeNode($scope.currentNode),navigationService.hideMenu()})},$scope.cancel=function(){navigationService.hideDialog()}}function TemplatesDeleteController($scope,templateResource,treeService,navigationService){$scope.performDelete=function(){$scope.currentNode.loading=!0,$scope.error=null,templateResource.deleteById($scope.currentNode.id).then(function(){$scope.currentNode.loading=!1;treeService.getTreeRoot($scope.currentNode);treeService.removeNode($scope.currentNode),navigationService.hideMenu()},function(err){$scope.currentNode.loading=!1,$scope.error=err})},$scope.cancel=function(){navigationService.hideDialog()}}angular.module("umbraco").controller("Umbraco.MainController",MainController).config(function(tmhDynamicLocaleProvider){tmhDynamicLocaleProvider.localeLocationPattern("lib/angular-i18n/angular-locale_{{locale | lowercase}}.js")}),angular.module("umbraco").controller("Umbraco.NavigationController",NavigationController),angular.module("umbraco").controller("Umbraco.AuthorizeUpgradeController",AuthorizeUpgradeController),angular.module("umbraco").controller("Umbraco.DashboardController",DashboardController),function(){angular.module("umbraco").controller("Umbraco.Drawers.Help",function HelpDrawerController($scope,$routeParams,$timeout,dashboardResource,localizationService,userService,eventsService,helpService,appState,tourService,$filter,editorState){var vm=this,evts=[];function closeDrawer(){appState.setDrawerState("showDrawer",!1)}function findHelp(section,tree,usertype,userLang){vm.hasAccessToSettings&&helpService.getContextHelpForPage(section,tree).then(function(topics){vm.topics=topics});var rq={};rq.section=vm.section,rq.usertype=usertype,rq.lang=userLang,$routeParams.url?(rq.path=decodeURIComponent($routeParams.url),0===rq.path.indexOf(Umbraco.Sys.ServerVariables.umbracoSettings.umbracoPath)&&(rq.path=rq.path.substring(Umbraco.Sys.ServerVariables.umbracoSettings.umbracoPath.length)),rq.path.indexOf(".aspx")>0&&(rq.path=rq.path.substring(0,rq.path.indexOf(".aspx")))):rq.path=rq.section+"/"+$routeParams.tree+"/"+$routeParams.method,vm.hasAccessToSettings&&helpService.findVideos(rq).then(function(videos){vm.videos=videos})}function setSectionName(){var languageKey="sections_"+vm.section;localizationService.localize(languageKey).then(function(value){vm.sectionName=value})}function openTourGroup(tourAlias){vm.tours.forEach(function(group){group.tours.forEach(function(tour){tour.alias===tourAlias&&(group.open=!0)})})}function getTourGroupCompletedPercentage(){vm.tours.forEach(function(group){var completedTours=0;group.tours.forEach(function(tour){tour.completed&&completedTours++}),group.completedPercentage=Math.round(completedTours/group.tours.length*100)})}function setDocTypeTour(node){vm.showDocTypeTour=!1,vm.docTypeTours=[],vm.nodeName="","content"===vm.section&&"content"===vm.tree&&node&&tourService.getToursForDoctype(node.contentTypeAlias).then(function(data){if(data&&data.length>0){vm.docTypeTours=data;var currentVariant=_.find(node.variants,function(x){return x.active});vm.nodeName=currentVariant.name,vm.showDocTypeTour=!0}})}vm.title="",vm.subtitle="Umbraco version "+Umbraco.Sys.ServerVariables.application.version,vm.section=$routeParams.section,vm.tree=$routeParams.tree,vm.sectionName="",vm.customDashboard=null,vm.tours=[],vm.closeDrawer=closeDrawer,vm.startTour=function startTour(tour){tourService.startTour(tour),closeDrawer()},vm.getTourGroupCompletedPercentage=getTourGroupCompletedPercentage,vm.showTourButton=function showTourButton(index,tourGroup){if(0===index)return!0;var prevTour=tourGroup.tours[index-1];return!!prevTour.completed||void 0},vm.showDocTypeTour=!1,vm.docTypeTours=[],vm.nodeName="",evts.push(eventsService.on("appState.tour.complete",function(event,tour){tourService.getGroupedTours().then(function(groupedTours){vm.tours=groupedTours,openTourGroup(tour.alias),getTourGroupCompletedPercentage()})})),$scope.$on("$destroy",function(){for(var e in evts)eventsService.unsubscribe(evts[e])}),function oninit(){localizationService.localize("general_help").then(function(data){vm.title=data}),tourService.getGroupedTours().then(function(groupedTours){vm.tours=groupedTours,getTourGroupCompletedPercentage()}),dashboardResource.getDashboard("user-help").then(function(dashboard){vm.customDashboard=dashboard}),vm.section||(vm.section="content"),setSectionName(),userService.getCurrentUser().then(function(user){vm.userType=user.userType,vm.userLang=user.locale,vm.hasAccessToSettings=_.contains(user.allowedSections,"settings"),evts.push(eventsService.on("appState.treeState.changed",function(e,args){!function handleSectionChange(){$timeout(function(){vm.section===$routeParams.section&&vm.tree===$routeParams.tree||(vm.section=$routeParams.section,vm.tree=$routeParams.tree,setSectionName(),findHelp(vm.section,vm.tree,vm.userType,vm.userLang),setDocTypeTour())})}()})),evts.push(eventsService.on("editorState.changed",function(e,args){setDocTypeTour(args.entity)})),findHelp(vm.section,vm.tree,vm.userType,vm.userLang)}),setDocTypeTour(editorState.getCurrent());var currentTour=tourService.getCurrentTour();currentTour&&openTourGroup(currentTour.alias)}()})}(),angular.module("umbraco").controller("Umbraco.Editors.BlockEditorController",function($scope,localizationService,formHelper,overlayService){var vm=this;if(vm.model=$scope.model,vm.tabs=[],localizationService.localizeMany([vm.model.createFlow?"general_cancel":vm.model.liveEditing?"prompt_discardChanges":"general_close",vm.model.createFlow?"general_create":vm.model.liveEditing?"buttons_confirmActionConfirm":"buttons_submitChanges"]).then(function(data){vm.closeLabel=data[0],vm.submitLabel=data[1]}),vm.model.content&&vm.model.content.variants){var apps=vm.model.content.apps,contentApp=apps.find(function(entry){return"umbContent"===entry.alias});if(contentApp&&(vm.model.hideContent&&apps.splice(apps.indexOf(contentApp),1),contentApp.active=!0!==vm.model.openSettings),vm.model.settings&&vm.model.settings.variants){var settingsApp=apps.find(function(entry){return"settings"===entry.alias});settingsApp&&(settingsApp.active=!0===vm.model.openSettings)}vm.tabs=apps}vm.submitAndClose=function(){vm.model&&vm.model.submit&&(formHelper.submitForm({scope:$scope,formCtrl:vm.blockForm,keepServerValidation:!0})?(vm.model.submit(vm.model),vm.saveButtonState="success"):vm.saveButtonState="error")},vm.close=function(){if(vm.model&&vm.model.close)if(!0===vm.model.createFlow||!0===vm.blockForm.$dirty){var labels=!0===vm.model.createFlow?["blockEditor_confirmCancelBlockCreationHeadline","blockEditor_confirmCancelBlockCreationMessage"]:["prompt_discardChanges","blockEditor_blockHasChanges"];localizationService.localizeMany(labels).then(function(localizations){var confirm={title:localizations[0],view:"default",content:localizations[1],submitButtonLabelKey:"general_discard",submitButtonStyle:"danger",closeButtonLabelKey:"prompt_stay",submit:function submit(){overlayService.close(),vm.model.close(vm.model)},close:function close(){overlayService.close()}};overlayService.open(confirm)})}else vm.model.close(vm.model)}}),angular.module("umbraco").controller("Umbraco.Editors.BlockPickerController",function($scope,localizationService){var vm=this;vm.navigation=[],vm.filter={searchTerm:""},localizationService.localizeMany(["blockEditor_tabCreateEmpty","blockEditor_tabClipboard"]).then(function(data){vm.navigation=[{alias:"empty",name:data[0],icon:"icon-add",view:""},{alias:"clipboard",name:data[1],icon:"icon-paste-in",view:"",disabled:0===vm.model.clipboardItems.length}],!0===vm.model.openClipboard?vm.activeTab=vm.navigation[1]:vm.activeTab=vm.navigation[0],vm.activeTab.active=!0}),vm.onNavigationChanged=function(tab){vm.activeTab.active=!1,vm.activeTab=tab,vm.activeTab.active=!0},vm.clickClearClipboard=function(){vm.onNavigationChanged(vm.navigation[0]),vm.navigation[1].disabled=!0,vm.model.clipboardItems=[],vm.model.clickClearClipboard()},vm.model=$scope.model,vm.selectItem=function(item,$event){vm.model.selectedItem=item,vm.model.submit($scope.model,$event)},vm.close=function(){$scope.model&&$scope.model.close&&$scope.model.close($scope.model)}}),function(){angular.module("umbraco").controller("Umbraco.Editors.CompositionsController",function CompositionsController($scope,$location,$filter,$timeout,overlayService,localizationService){var vm=this,oldModel=null;function isSelected(alias){return-1!==$scope.model.contentType.compositeContentTypes.indexOf(alias)}vm.showConfirmSubmit=!1,vm.loadingAlias=null,vm.isSelected=isSelected,vm.openContentType=function openContentType(contentType,section){var url=("documentType"===section?"/settings/documenttypes/edit/":"/settings/mediaTypes/edit/")+contentType.id;$location.path(url)},vm.selectCompositeContentType=function selectCompositeContentType(compositeContentType){vm.loadingAlias=compositeContentType.contentType.alias;var contentType=compositeContentType.contentType;$scope.model.selectCompositeContentType(contentType).then(function(response){vm.loadingAlias=null});var index=$scope.model.contentType.compositeContentTypes.indexOf(contentType.alias);-1===index?$scope.model.contentType.compositeContentTypes.push(contentType.alias):$scope.model.contentType.compositeContentTypes.splice(index,1)},vm.submit=function submit(){if($scope.model&&$scope.model.submit){for(var compositionRemoved=!1,i=0;oldModel.compositeContentTypes.length>i;i++){var oldComposition=oldModel.compositeContentTypes[i];!1===_.contains($scope.model.compositeContentTypes,oldComposition)&&(compositionRemoved=!0)}if(compositionRemoved)return vm.allowSubmit=!1,void localizationService.localize("general_remove").then(function(value){var dialog={view:"views/common/infiniteeditors/compositions/overlays/confirmremove.html",title:value,submitButtonLabelKey:"general_ok",submitButtonStyle:"danger",closeButtonLabelKey:"general_cancel",submit:function submit(model){$scope.model.submit($scope.model),overlayService.close()},close:function close(){overlayService.close()}};overlayService.open(dialog)});$scope.model.submit($scope.model)}},vm.close=function close(){$scope.model&&$scope.model.close&&$scope.model.close(oldModel)},function onInit(){oldModel=Utilities.copy($scope.model),$scope.model.title||($scope.model.title="Compositions"),vm.availableGroups=$filter("orderBy")(_.map(_.groupBy($scope.model.availableCompositeContentTypes,function(compositeContentType){return compositeContentType.selected=isSelected(compositeContentType.contentType.alias),compositeContentType.contentType.metaData.containerPath}),function(group){return{containerPath:group[0].contentType.metaData.containerPath,compositeContentTypes:group}}),function(group){return group.containerPath.replace(/\//g," ")})}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.CopyController",function CopyController($scope,localizationService,eventsService,entityHelper){var vm=this;vm.labels={},vm.hideSearch=function hideSearch(){vm.searchInfo.showSearch=!1,vm.searchInfo.searchFromId=null,vm.searchInfo.searchFromName=null,vm.searchInfo.results=[]},vm.selectResult=function selectResult(evt,result){result.selected=!0!==result.selected,nodeSelectHandler({event:evt,node:result})},vm.onSearchResults=function onSearchResults(results){vm.searchInfo.results=results,vm.searchInfo.showSearch=!0},vm.onToggle=function toggleHandler(type){"relate"===type&&($scope.model.relateToOriginal=!$scope.model.relateToOriginal),"descendants"===type&&($scope.model.includeDescendants=!$scope.model.includeDescendants)},vm.submit=function submit(){$scope.model&&$scope.model.submit&&$scope.model.submit($scope.model)},vm.close=function close(){$scope.model&&$scope.model.close&&$scope.model.close()};var dialogOptions=$scope.model;function nodeSelectHandler(args){args&&args.event&&(args.event.preventDefault(),args.event.stopPropagation()),$scope.model.target&&($scope.model.target.selected=!1),$scope.model.target=args.node,$scope.model.target.selected=!0}function nodeExpandedHandler(args){args.node.metaData.isContainer&&function openMiniListView(node){$scope.miniListView=node}(args.node)}dialogOptions.currentNode,$scope.model.relateToOriginal=!0,$scope.model.includeDescendants=!0,$scope.dialogTreeApi={},vm.searchInfo={searchFromId:null,searchFromName:null,showSearch:!1,results:[],selectedSearchResults:[]},$scope.entityType=entityHelper.getEntityTypeFromSection(dialogOptions.section),$scope.onTreeInit=function(){$scope.dialogTreeApi.callbacks.treeNodeSelect(nodeSelectHandler),$scope.dialogTreeApi.callbacks.treeNodeExpanded(nodeExpandedHandler)},$scope.selectListViewNode=function(node){node.selected=!0!==node.selected,nodeSelectHandler({node:node})},$scope.closeMiniListView=function(){$scope.miniListView=void 0},function onInit(){localizationService.localizeMany(["general_copy"]).then(function(data){vm.labels.title=data[0],function setTitle(value){$scope.model.title||($scope.model.title=value)}(vm.labels.title)})}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.DataTypeConfigurationPickerController",function DataTypeConfigurationPicker($scope,$filter,dataTypeResource,dataTypeHelper,contentTypeResource,localizationService,editorService){var vm=this;vm.configs=[],vm.loading=!0,vm.newDataType=function newDataType(){var dataTypeSettings={propertyEditor:$scope.model.editor,property:$scope.model.property,contentTypeName:$scope.model.contentTypeName,create:!0,view:"views/common/infiniteeditors/datatypesettings/datatypesettings.html",submit:function submit(model){contentTypeResource.getPropertyTypeScaffold(model.dataType.id).then(function(propertyType){$scope.model.submit(model.dataType,propertyType,!0),editorService.close()})},close:function close(){editorService.close()}};editorService.open(dataTypeSettings)},vm.pickDataType=function pickDataType(selectedConfig){selectedConfig.loading=!0,dataTypeResource.getById(selectedConfig.id).then(function(dataType){contentTypeResource.getPropertyTypeScaffold(dataType.id).then(function(propertyType){selectedConfig.loading=!1,$scope.model.submit(dataType,propertyType,!1)})})},vm.close=function close(){$scope.model.close&&$scope.model.close()},function activate(){!function setTitle(){$scope.model.title||localizationService.localize("defaultdialogs_selectEditorConfiguration").then(function(data){$scope.model.title=data})}(),function load(){dataTypeResource.getGroupedDataTypes().then(function(configs){var filteredConfigs=[];Object.values(configs).forEach(function(configGroup){for(var i=0;i<configGroup.length;i++)configGroup[i].alias===$scope.model.editor.alias&&filteredConfigs.push(configGroup[i])}),vm.configs=filteredConfigs,vm.loading=!1})}()}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.DataTypePickerController",function DataTypePicker($scope,$filter,dataTypeResource,contentTypeResource,localizationService,editorService){var vm=this;function performeSearch(){if(vm.searchTerm){if(vm.configs){var regex=new RegExp(vm.searchTerm,"i");vm.searchResult={configs:filterCollection(vm.configs,regex),dataTypes:filterCollection(vm.dataTypes,regex)}}}else vm.searchResult=null}function filterCollection(collection,regex){return _.map(_.keys(collection),function(key){return{group:key,entries:$filter("filter")(collection[key],function(dataType){return regex.test(dataType.name)||regex.test(dataType.alias)})}})}function _submit(dataType,propertyType,isNew){$scope.model.property.config=propertyType.config,$scope.model.property.editor=propertyType.editor,$scope.model.property.view=propertyType.view,$scope.model.property.dataTypeId=dataType.id,$scope.model.property.dataTypeIcon=dataType.icon,$scope.model.property.dataTypeName=dataType.name,$scope.model.updateSameDataTypes=isNew,$scope.model.submit($scope.model)}vm.showDataTypes=!0,vm.dataTypes=[],vm.loading=!0,vm.loadingConfigs=!1,vm.searchTerm="",vm.searchResult=null,vm.viewOptionsForEditor=function viewOptionsForEditor(editor){var dataTypeConfigurationPicker={editor:editor,property:$scope.model.property,contentTypeName:$scope.model.contentTypeName,view:"views/common/infiniteeditors/datatypeconfigurationpicker/datatypeconfigurationpicker.html",size:"small",submit:function submit(dataType,propertyType,isNew){_submit(dataType,propertyType,isNew),editorService.close()},close:function close(){editorService.close()}};editorService.open(dataTypeConfigurationPicker)},vm.pickDataType=function pickDataType(selectedDataType){selectedDataType.loading=!0,dataTypeResource.getById(selectedDataType.id).then(function(dataType){contentTypeResource.getPropertyTypeScaffold(dataType.id).then(function(propertyType){selectedDataType.loading=!1,_submit(dataType,propertyType,!1)})})},vm.pickEditor=function pickEditor(propertyEditor){var dataTypeSettings={propertyEditor:propertyEditor,property:$scope.model.property,contentTypeName:$scope.model.contentTypeName,create:!0,view:"views/common/infiniteeditors/datatypesettings/datatypesettings.html",submit:function submit(model){contentTypeResource.getPropertyTypeScaffold(model.dataType.id).then(function(propertyType){_submit(model.dataType,propertyType,!0),editorService.close()})},close:function close(){editorService.close()}};editorService.open(dataTypeSettings)},vm.close=function close(){$scope.model.close&&$scope.model.close()},vm.searchTermChanged=function searchTermChanged(){vm.showDataTypes=""===vm.searchTerm,!0!==vm.loadingConfigs?function loadConfigurations(){vm.loading=!0,vm.loadingConfigs=!0,dataTypeResource.getGroupedDataTypes().then(function(configs){vm.configs=configs,vm.loading=!1,performeSearch()})}():performeSearch()},function activate(){!function setTitle(){$scope.model.title||localizationService.localize("defaultdialogs_selectEditor").then(function(data){$scope.model.title=data})}(),function loadTypes(){dataTypeResource.getGroupedPropertyEditors().then(function(dataTypes){vm.dataTypes=dataTypes,vm.loading=!1})}()}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.DataTypeSettingsController",function DataTypeSettingsController($scope,dataTypeResource,dataTypeHelper,localizationService,notificationsService,overlayService,formHelper,eventsService){var vm=this;vm.dataType={},vm.loadingDataType=!1,vm.saveButtonState="init",vm.close=function close(){$scope.model&&$scope.model.close&&$scope.model.close()},vm.submit=function submit(){if(formHelper.submitForm({scope:$scope})){vm.saveButtonState="busy";var preValues=dataTypeHelper.createPreValueProps(vm.dataType.preValues);dataTypeResource.save(vm.dataType,preValues,$scope.model.create).then(function(newDataType){$scope.model.dataType=newDataType;var args={dataType:newDataType};eventsService.emit("editors.dataTypeSettings.saved",args),vm.saveButtonState="success",$scope.model&&$scope.model.submit&&$scope.model.submit($scope.model)},function(err){if(vm.saveButtonState="error",400===err.status&&err.data&&err.data.ModelState)for(var e in formHelper.handleServerValidation(err.data.ModelState),err.data.ModelState)notificationsService.error("Validation",err.data.ModelState[e][0])})}},function onInit(){!function setTitle(){$scope.model.title||localizationService.localize("contentTypeEditor_editorSettings").then(function(data){$scope.model.title=data})}(),$scope.model.create?function createNewDataType(){vm.loadingDataType=!0;var newDataType={};dataTypeResource.getScaffold(-1).then(function(dataType){(newDataType=dataType).selectedEditor=$scope.model.propertyEditor.alias;var nameArray=[];$scope.model.contentTypeName&&nameArray.push($scope.model.contentTypeName),$scope.model.property.label&&nameArray.push($scope.model.property.label),$scope.model.propertyEditor.name&&nameArray.push($scope.model.propertyEditor.name),newDataType.name=nameArray.join(" - "),dataTypeResource.getPreValues(newDataType.selectedEditor).then(function(preValues){newDataType.preValues=preValues,vm.dataType=newDataType,vm.loadingDataType=!1})})}():function getDataType(){vm.loadingDataType=!0,dataTypeResource.getById($scope.model.id).then(function(dataType){vm.dataType=dataType,vm.loadingDataType=!1})}()}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.EmbedController",function EmbedController($scope,$http,$sce,umbRequestHelper,localizationService){var vm=this,origWidth=500,origHeight=300;function showPreview(){$scope.model.embed.url?($scope.model.embed.show=!0,$scope.model.embed.info="",$scope.model.embed.a11yInfo="",$scope.model.embed.success=!1,vm.loading=!0,$http({method:"GET",url:umbRequestHelper.getApiUrl("embedApiBaseUrl","GetEmbed"),params:{url:$scope.model.embed.url,width:$scope.model.embed.width,height:$scope.model.embed.height}}).then(function(response){switch($scope.model.embed.preview="",response.data.OEmbedStatus){case 0:case"NotSupported":$scope.model.embed.preview="",$scope.model.embed.info="Not supported",$scope.model.embed.a11yInfo=$scope.model.embed.info,$scope.model.embed.success=!1,$scope.model.embed.supportsDimensions=!1,vm.trustedPreview=null;break;case 1:case"Error":$scope.model.embed.preview="",$scope.model.embed.info="Could not embed media - please ensure the URL is valid",$scope.model.embed.a11yInfo=$scope.model.embed.info,$scope.model.embed.success=!1,$scope.model.embed.supportsDimensions=!1,vm.trustedPreview=null;break;case 2:case"Success":$scope.model.embed.success=!0,$scope.model.embed.supportsDimensions=response.data.SupportsDimensions,$scope.model.embed.preview=response.data.Markup,$scope.model.embed.info="",$scope.model.embed.a11yInfo="Retrieved URL",vm.trustedPreview=$sce.trustAsHtml(response.data.Markup)}vm.loading=!1},function(){$scope.model.embed.success=!1,$scope.model.embed.supportsDimensions=!1,$scope.model.embed.preview="",$scope.model.embed.info="Could not embed media - please ensure the URL is valid",$scope.model.embed.a11yInfo=$scope.model.embed.info,vm.loading=!1})):($scope.model.embed.supportsDimensions=!1,$scope.model.embed.preview="",$scope.model.embed.info="Please enter a URL",$scope.model.embed.a11yInfo=$scope.model.embed.info)}vm.loading=!1,vm.trustedPreview=null,$scope.model.embed={url:"",width:360,height:240,constrain:!0,preview:"",success:!1,info:"",a11yInfo:"",supportsDimensions:!1,originalWidth:360,originalHeight:240},$scope.model.modify&&(Utilities.extend($scope.model.embed,$scope.model.modify),showPreview()),vm.toggleConstrain=function toggleConstrain(){$scope.model.embed.constrain=!$scope.model.embed.constrain},vm.showPreview=showPreview,vm.changeSize=function changeSize(type){var width=parseInt($scope.model.embed.width,10),height=parseInt($scope.model.embed.height,10),originalWidth=parseInt($scope.model.embed.originalWidth,10),originalHeight=parseInt($scope.model.embed.originalHeight,10),resize=originalWidth!==width||originalHeight!==height;$scope.model.embed.constrain&&("width"===type?(origHeight=Math.round(width/origWidth*height),$scope.model.embed.height=origHeight):(origWidth=Math.round(height/origHeight*width),$scope.model.embed.width=origWidth)),$scope.model.embed.originalWidth=$scope.model.embed.width,$scope.model.embed.originalHeight=$scope.model.embed.height,""!==$scope.model.embed.url&&resize&&showPreview()},vm.submit=function submit(){$scope.model&&$scope.model.submit&&$scope.model.submit($scope.model)},vm.close=function close(){$scope.model&&$scope.model.close&&$scope.model.close()},function onInit(){$scope.model.title||localizationService.localize("general_embed").then(function(value){$scope.model.title=value})}()})}(),angular.module("umbraco").controller("Umbraco.Editors.IconPickerController",IconPickerController),function(){angular.module("umbraco").controller("Umbraco.Editors.InsertOverlay",function InsertOverlayController($scope,localizationService,editorService){var vm=this;vm.openMacroPicker=function openMacroPicker(){var macroPicker={dialogData:{},submit:function submit(model){$scope.model.insert={type:"macro",macroParams:model.macroParams,selectedMacro:model.selectedMacro},$scope.model.submit($scope.model),editorService.close()},close:function close(){editorService.close()}};editorService.macroPicker(macroPicker)},vm.openPageFieldOverlay=function openPageFieldOverlay(){var insertFieldEditor={submit:function submit(model){$scope.model.insert={type:"umbracoField",umbracoField:model.umbracoField},$scope.model.submit($scope.model),editorService.close()},close:function close(model){editorService.close()}};editorService.insertField(insertFieldEditor)},vm.openDictionaryItemOverlay=function openDictionaryItemOverlay(){localizationService.localizeMany(["template_insertDictionaryItem","template_insertDictionaryItemDesc","emptyStates_emptyDictionaryTree"]).then(function(values){var title=values[0],subtitle=values[1],emptyStateMessage=values[2],dictionaryItemPicker={section:"translation",treeAlias:"dictionary",entityType:"dictionary",multiPicker:!1,title:title,subtitle:subtitle,emptyStateMessage:emptyStateMessage,select:function select(node){$scope.model.insert={type:"dictionary",node:node},$scope.model.submit($scope.model),editorService.close()},close:function close(){editorService.close()}};editorService.treePicker(dictionaryItemPicker)})},vm.openPartialOverlay=function openPartialOverlay(){localizationService.localize("template_insertPartialView").then(function(value){var title=value,partialItemPicker={section:"settings",treeAlias:"partialViews",entityType:"partialView",multiPicker:!1,title:title,filter:function filter(i){if(-1===i.name.indexOf(".cshtml")&&-1===i.name.indexOf(".vbhtml"))return!0},filterCssClass:"not-allowed",select:function select(node){$scope.model.insert={type:"partial",node:node},$scope.model.submit($scope.model),editorService.close()},close:function close(){editorService.close()}};editorService.treePicker(partialItemPicker)})},vm.close=function close(){$scope.model.close&&$scope.model.close()},function onInit(){$scope.model.title||localizationService.localize("template_insert").then(function(value){$scope.model.title=value}),$scope.model.subtitle||localizationService.localize("template_insertDesc").then(function(value){$scope.model.subtitle=value})}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.InsertFieldController",function InsertFieldController($scope,contentTypeResource,localizationService){var vm=this;vm.field=null,vm.defaultValue=null,vm.recursive=!1,vm.showDefaultValue=!1,vm.generateOutputSample=function generateOutputSample(){var fallback=null;!1!==vm.recursive&&null!==vm.defaultValue?fallback="Fallback.To(Fallback.Ancestors, Fallback.DefaultValue)":!1!==vm.recursive?fallback="Fallback.ToAncestors":null!==vm.defaultValue&&(fallback="Fallback.ToDefaultValue");var pageField=(null!==vm.field?'@Model.Value("'+vm.field+'"':"")+(null!==fallback?", fallback: "+fallback:"")+(null!==vm.defaultValue?', defaultValue: new HtmlString("'+vm.defaultValue+'")':"")+(vm.field?")":"");return $scope.model.umbracoField=pageField,pageField},vm.submit=function submit(model){$scope.model.submit&&$scope.model.submit(model)},vm.close=function close(){$scope.model.close&&$scope.model.close()},function onInit(){$scope.model.title||localizationService.localizeMany(["template_insertPageField"]).then(function(data){$scope.model.title=data[0]}),contentTypeResource.getAllPropertyTypeAliases().then(function(array){vm.properties=array}),contentTypeResource.getAllStandardFields().then(function(array){vm.standardFields=array})}()})}(),angular.module("umbraco").controller("Umbraco.Editors.ItemPicker",ItemPickerController),angular.module("umbraco").controller("Umbraco.Editors.LinkPickerController",function($scope,eventsService,entityResource,mediaResource,mediaHelper,udiParser,userService,localizationService,editorService){var vm=this,dialogOptions=$scope.model;vm.submit=function submit(){$scope.model&&$scope.model.submit&&$scope.model.submit($scope.model)},vm.close=function close(){$scope.model&&$scope.model.close&&$scope.model.close()},vm.toggleOpenInNewWindow=function toggleOpenInNewWindow(model,value){$scope.model.target.target=model?"_blank":""},vm.labels={},localizationService.localizeMany(["defaultdialogs_openInNewWindow"]).then(function(data){vm.labels.openInNewWindow=data[0]}),$scope.model.title||localizationService.localize("defaultdialogs_selectLink").then(function(value){$scope.model.title=value}),$scope.customTreeParams=dialogOptions.dataTypeKey?"dataTypeKey="+dialogOptions.dataTypeKey:"",$scope.dialogTreeApi={},$scope.model.target={},$scope.searchInfo={searchFromId:null,searchFromName:null,showSearch:!1,dataTypeKey:dialogOptions.dataTypeKey,results:[],selectedSearchResults:[]},$scope.showTarget=!0!==$scope.model.hideTarget,$scope.showAnchor=!0!==$scope.model.hideAnchor;var oneTimeTreeSync={executed:!1,treeReady:!1,sync:function sync(){!this.executed&&this.treeReady&&$scope.model.target&&$scope.model.target.path&&(this.executed=!0,$scope.dialogTreeApi.syncTree({path:$scope.model.target.path,tree:"content"}))}};if(dialogOptions.currentTarget){if($scope.model.target=Utilities.copy(dialogOptions.currentTarget),$scope.model.target.id||$scope.model.target.udi){var id=$scope.model.target.udi?$scope.model.target.udi:$scope.model.target.id;if($scope.model.target.udi){var udi=udiParser.parse(id);udi&&"media"===udi.entityType?$scope.model.target.isMedia=!0:delete $scope.model.target.isMedia}$scope.model.target.isMedia?mediaResource.getById(id).then(function(resp){$scope.model.target.url=resp.mediaLink}):(entityResource.getPath(id,"Document").then(function(path){$scope.model.target.path=path,oneTimeTreeSync.sync()}),entityResource.getUrlAndAnchors(id).then(function(resp){$scope.anchorValues=resp.anchorValues,$scope.model.target.url=resp.url}))}else if($scope.model.target.url&&$scope.model.target.url.length){var indexOfAnchor=$scope.model.target.url.search(/(#|\?)/);indexOfAnchor>-1&&($scope.model.target.anchor=$scope.model.target.url.substring(indexOfAnchor),$scope.model.target.url=$scope.model.target.url.substring(0,indexOfAnchor))}vm.openInNewWindow="_blank"===$scope.model.target.target}else dialogOptions.anchors&&($scope.anchorValues=dialogOptions.anchors);function treeLoadedHandler(args){oneTimeTreeSync.treeReady=!0,oneTimeTreeSync.sync()}function nodeSelectHandler(args){args&&args.event&&(args.event.preventDefault(),args.event.stopPropagation()),eventsService.emit("dialogs.linkPicker.select",args),$scope.currentNode&&($scope.currentNode.selected=!1),$scope.currentNode=args.node,$scope.currentNode.selected=!0,$scope.model.target.id=args.node.id,$scope.model.target.udi=args.node.udi,$scope.model.target.name=args.node.name,args.node.id<0?$scope.model.target.url="/":entityResource.getUrlAndAnchors(args.node.id).then(function(resp){$scope.anchorValues=resp.anchorValues,$scope.model.target.url=resp.url}),Utilities.isUndefined($scope.model.target.isMedia)||delete $scope.model.target.isMedia}function nodeExpandedHandler(args){args.node.metaData.isContainer&&function openMiniListView(node){$scope.miniListView=node}(args.node)}$scope.switchToMediaPicker=function(){userService.getCurrentUser().then(function(userData){var startNodeId,startNodeIsVirtual;!0===dialogOptions.ignoreUserStartNodes?(startNodeId=-1,startNodeIsVirtual=!0):(startNodeId=1!==userData.startMediaIds.length?-1:userData.startMediaIds[0],startNodeIsVirtual=1!==userData.startMediaIds.length);var mediaPicker={startNodeId:startNodeId,startNodeIsVirtual:startNodeIsVirtual,dataTypeKey:dialogOptions.dataTypeKey,submit:function submit(model){var media=model.selection[0];$scope.model.target.id=media.id,$scope.model.target.udi=media.udi,$scope.model.target.isMedia=!0,$scope.model.target.name=media.name,$scope.model.target.url=media.image,editorService.close(),$scope.dialogTreeApi.syncTree({path:"-1",tree:"content"})},close:function close(){editorService.close()}};editorService.mediaPicker(mediaPicker)})},$scope.hideSearch=function(){$scope.searchInfo.showSearch=!1,$scope.searchInfo.searchFromId=null,$scope.searchInfo.searchFromName=null,$scope.searchInfo.results=[]},$scope.selectResult=function(evt,result){result.selected=!0!==result.selected,nodeSelectHandler({event:evt,node:result})},$scope.onSearchResults=function(results){$scope.searchInfo.results=results,$scope.searchInfo.showSearch=!0},$scope.onTreeInit=function(){$scope.dialogTreeApi.callbacks.treeLoaded(treeLoadedHandler),$scope.dialogTreeApi.callbacks.treeNodeSelect(nodeSelectHandler),$scope.dialogTreeApi.callbacks.treeNodeExpanded(nodeExpandedHandler)},$scope.selectListViewNode=function(node){node.selected=!0!==node.selected,nodeSelectHandler({node:node})},$scope.closeMiniListView=function(){$scope.miniListView=void 0}}),function(){angular.module("umbraco").controller("Umbraco.Editors.MacroParameterPickerController",function MacroParameterController($scope,$filter,macroResource,localizationService,editorService){var vm=this;vm.searchTerm="",vm.parameterEditors=[],vm.loading=!1,vm.labels={},vm.filterItems=function filterItems(){if($scope.model.itemDetails=null,vm.searchTerm){var regex=new RegExp(vm.searchTerm,"i"),parameterEditors=function filterCollection(collection,regex){return _.map(_.keys(collection),function(key){var filteredEditors=$filter("filter")(collection[key],function(editor){return regex.test(editor.name)||regex.test(editor.alias)});return{group:key,count:filteredEditors.length,parameterEditors:filteredEditors}})}(vm.parameterEditors,regex),totalResults=_.reduce(_.pluck(parameterEditors,"count"),function(m,n){return m+n},0);vm.filterResult={parameterEditors:parameterEditors,totalResults:totalResults}}else vm.filterResult=null},vm.showDetailsOverlay=function showDetailsOverlay(property){var propertyDetails={};propertyDetails.icon=property.icon,propertyDetails.title=property.name,$scope.model.itemDetails=propertyDetails},vm.hideDetailsOverlay=function hideDetailsOverlay(){$scope.model.itemDetails=null},vm.pickParameterEditor=function pickParameterEditor(selectedParameterEditor){$scope.model.parameter.editor=selectedParameterEditor.alias,$scope.model.parameter.dataTypeName=selectedParameterEditor.name,$scope.model.parameter.dataTypeIcon=selectedParameterEditor.icon,$scope.model.submit($scope.model)},vm.close=function close(){$scope.model.close&&$scope.model.close()},function init(){!function setTitle(){$scope.model.title||localizationService.localize("defaultdialogs_selectEditor").then(function(data){$scope.model.title=data})}(),function getGroupedParameterEditors(){vm.loading=!0,macroResource.getGroupedParameterEditors().then(function(data){vm.parameterEditors=data,vm.loading=!1},function(){vm.loading=!1})}()}()})}(),angular.module("umbraco").controller("Umbraco.Overlays.MacroPickerController",MacroPickerController),angular.module("umbraco").controller("Umbraco.Editors.MediaEntryEditorController",function($scope,localizationService,entityResource,editorService,overlayService,eventsService,mediaHelper){var unsubscribe=[],vm=this;function updateMedia(){vm.loading=!0,entityResource.getById(vm.mediaEntry.mediaKey,"Media").then(function(mediaEntity){vm.media=mediaEntity,vm.imageSrc=mediaHelper.resolveFileFromEntity(mediaEntity,!0),vm.loading=!1,vm.hasDimensions=!1,vm.isCroppable=!1,localizationService.localize("mediaPicker_editMediaEntryLabel",[vm.media.name,vm.model.documentName]).then(function(data){vm.title=data})},function(){localizationService.localize("mediaPicker_deletedItem").then(function(localized){vm.media={name:localized,icon:"icon-picture",trashed:!0},vm.loading=!1,vm.hasDimensions=!1,vm.isCroppable=!1})})}function onMediaReplaced(){vm.imageCropperForm.$setDirty(),vm.currentCrop=null,updateMedia()}function setDirty(){vm.imageCropperForm.$setDirty()}vm.loading=!0,vm.model=$scope.model,vm.mediaEntry=vm.model.mediaEntry,vm.currentCrop=null,localizationService.localizeMany([vm.model.createFlow?"general_cancel":"general_close",vm.model.createFlow?"general_create":"buttons_submitChanges"]).then(function(data){vm.closeLabel=data[0],vm.submitLabel=data[1]}),vm.title="",vm.onImageLoaded=function onImageLoaded(isCroppable,hasDimensions){vm.isCroppable=isCroppable,vm.hasDimensions=hasDimensions},vm.repickMedia=function repickMedia(){vm.model.propertyEditor.changeMediaFor(vm.model.mediaEntry,onMediaReplaced)},vm.openMedia=function openMedia(){var mediaEditor={id:vm.mediaEntry.mediaKey,submit:function submit(){editorService.close()},close:function close(){editorService.close()}};editorService.mediaEditor(mediaEditor)},vm.focalPointChanged=function(left,top){vm.mediaEntry.focalPoint={left:left,top:top},setDirty()},vm.selectCrop=function selectCrop(targetCrop){vm.currentCrop=targetCrop,setDirty()},vm.deselectCrop=function deselectCrop(){vm.currentCrop=null},vm.resetCrop=function resetCrop(){vm.currentCrop&&$scope.$evalAsync(function(){vm.model.propertyEditor.resetCrop(vm.currentCrop),vm.forceUpdateCrop=Math.random()})},vm.submitAndClose=function(){vm.model&&vm.model.submit&&vm.model.submit(vm.model)},vm.close=function(){if(vm.model&&vm.model.close)if(!0===vm.model.createFlow||!0===vm.imageCropperForm.$dirty){var labels=!0===vm.model.createFlow?["mediaPicker_confirmCancelMediaEntryCreationHeadline","mediaPicker_confirmCancelMediaEntryCreationMessage"]:["prompt_discardChanges","mediaPicker_confirmCancelMediaEntryHasChanges"];localizationService.localizeMany(labels).then(function(localizations){var confirm={title:localizations[0],view:"default",content:localizations[1],submitButtonLabelKey:"general_discard",submitButtonStyle:"danger",closeButtonLabelKey:"prompt_stay",submit:function submit(){overlayService.close(),vm.model.close(vm.model)},close:function close(){overlayService.close()}};overlayService.open(confirm)})}else vm.model.close(vm.model)},function init(){updateMedia(),unsubscribe.push(eventsService.on("editors.media.saved",function(name,args){args&&args.media&&args.media.key===vm.mediaEntry.mediaKey&&updateMedia()}))}(),$scope.$on("$destroy",function(){unsubscribe.forEach(function(x){return x()})})}),angular.module("umbraco").controller("Umbraco.Editors.MediaPickerController",function($scope,$timeout,mediaResource,entityResource,userService,mediaHelper,mediaTypeHelper,eventsService,treeService,localStorageService,localizationService,editorService,umbSessionStorage,notificationsService,clipboardService){var vm=this;vm.submit=function submit(){$scope.model&&$scope.model.submit&&$scope.model.submit($scope.model)},vm.close=function close(){$scope.model&&$scope.model.close&&$scope.model.close($scope.model)},vm.toggle=function toggle(){umbSessionStorage.set("mediaPickerExcludeSubFolders",$scope.filterOptions.excludeSubFolders),changeSearch()},vm.upload=function upload(v){var fileSelect=$(".umb-file-dropzone .file-select");0===fileSelect.length?localizationService.localize("media_uploadNotAllowed").then(function(message){notificationsService.warning(message)}):fileSelect.trigger("click")},vm.dragLeave=function dragLeave(){$scope.activeDrag=!1},vm.dragEnter=function dragEnter(){$scope.activeDrag=!0},vm.onUploadComplete=function onUploadComplete(files){gotoFolder($scope.currentFolder).then(function(){$timeout(function(){if($scope.multiPicker){var images=_.rest(_.sortBy($scope.images,"id"),$scope.images.length-files.length);images.forEach(function(image){return selectMedia(image)})}else{var image=_.sortBy($scope.images,"id")[$scope.images.length-1];clickHandler(image)}})})},vm.onFilesQueue=function onFilesQueue(){$scope.activeDrag=!1},vm.changeSearch=changeSearch,vm.submitFolder=submitFolder,vm.enterSubmitFolder=function enterSubmitFolder(event){13===event.keyCode&&(submitFolder(),event.stopPropagation())},vm.focalPointChanged=function focalPointChanged(left,top){$scope.target.focalPoint={left:left,top:top}},vm.changePagination=function changePagination(pageNumber){vm.loading=!0,vm.searchOptions.pageNumber=pageNumber,searchMedia()},vm.onNavigationChanged=function onNavigationChanged(tab){vm.activeTab.active=!1,vm.activeTab=tab,vm.activeTab.active=!0},vm.clickClearClipboard=function clickClearClipboard(){vm.onNavigationChanged(vm.navigation[0]),vm.navigation[1].disabled=!0,vm.clipboardItems=[],dialogOptions.clickClearClipboard()},vm.clickHandler=clickHandler,vm.clickItemName=function clickItemName(item,event,index){item.isFolder?gotoFolder(item):clickHandler(item,event,index)},vm.gotoFolder=gotoFolder,vm.toggleListView=function toggleListView(){vm.showMediaList=!vm.showMediaList},vm.selectLayout=function selectLayout(layout){vm.layout.activeLayout=layout,vm.layout.layouts.forEach(function(element){return element.active=!1}),layout.active=!0,vm.showMediaList="List"===layout.name},vm.showMediaList=!1,vm.navigation=[];var dialogOptions=$scope.model;vm.clipboardItems=dialogOptions.clipboardItems,$scope.disableFolderSelect=!(!dialogOptions.disableFolderSelect||"0"===dialogOptions.disableFolderSelect),$scope.disableFocalPoint=!(!dialogOptions.disableFocalPoint||"0"===dialogOptions.disableFocalPoint),$scope.onlyImages=!(!dialogOptions.onlyImages||"0"===dialogOptions.onlyImages),$scope.onlyFolders=!(!dialogOptions.onlyFolders||"0"===dialogOptions.onlyFolders),$scope.showDetails=!(!dialogOptions.showDetails||"0"===dialogOptions.showDetails),$scope.multiPicker=!(!dialogOptions.multiPicker||"0"===dialogOptions.multiPicker),$scope.startNodeId=dialogOptions.startNodeId?dialogOptions.startNodeId:-1,$scope.cropSize=dialogOptions.cropSize,$scope.lastOpenedNode=localStorageService.get("umbLastOpenedMediaNodeId"),$scope.lockedFolder=!0,$scope.allowMediaEdit=!!dialogOptions.allowMediaEdit&&dialogOptions.allowMediaEdit,$scope.filterOptions={excludeSubFolders:umbSessionStorage.get("mediaPickerExcludeSubFolders")||!1};var userStartNodes=[],umbracoSettings=Umbraco.Sys.ServerVariables.umbracoSettings,allowedUploadFiles=mediaHelper.formatFileTypes(umbracoSettings.allowedUploadFiles);$scope.onlyImages?vm.acceptedFileTypes=mediaHelper.formatFileTypes(umbracoSettings.imageFileTypes):vm.acceptedFileTypes=""!==allowedUploadFiles?allowedUploadFiles:!mediaHelper.formatFileTypes(umbracoSettings.disallowedUploadFiles),vm.maxFileSize=umbracoSettings.maxFileSize+"KB",$scope.model.selection=[],vm.acceptedMediatypes=[],mediaTypeHelper.getAllowedImagetypes($scope.startNodeId).then(function(types){vm.acceptedMediatypes=types});var dataTypeKey=null;function run(){if($scope.target){var originalTarget=$scope.target,id=$scope.target.udi?$scope.target.udi:$scope.target.id,altText=$scope.target.altText,caption=$scope.target.caption;id?entityResource.getById(id,"Media").then(function(node){$scope.target=node,gotoFolder({id:node.parentId}).then(function(){selectMedia(node),$scope.target.url=mediaHelper.resolveFileFromEntity(node),$scope.target.thumbnail=mediaHelper.resolveFileFromEntity(node,!0),$scope.target.altText=altText,$scope.target.caption=caption,$scope.target.focalPoint=originalTarget.focalPoint,$scope.target.coordinates=originalTarget.coordinates,openDetailsDialog()})},gotoStartNode):openDetailsDialog()}else $scope.lastOpenedNode&&-1!==$scope.lastOpenedNode?entityResource.getById($scope.lastOpenedNode,"media").then(ensureWithinStartNode,gotoStartNode):gotoStartNode()}function submitFolder(){$scope.model.newFolderName?($scope.model.creatingFolder=!0,mediaResource.addFolder($scope.model.newFolderName,$scope.currentFolder.id).then(function(data){treeService.clearCache({cacheKey:"__media",childrenOf:data.parentId}),$scope.model.creatingFolder=!1,gotoFolder(data),$scope.model.showFolderInput=!1,$scope.model.newFolderName=""})):$scope.model.showFolderInput=!1}function gotoFolder(folder){return $scope.multiPicker||deselectAllMedia($scope.model.selection),folder||(folder={id:-1,name:"Media",icon:"icon-folder"}),folder.id>0?entityResource.getAncestors(folder.id,"media",null,{dataTypeKey:dataTypeKey}).then(function(anc){$scope.path=_.filter(anc,function(f){return-1!==f.path.indexOf($scope.startNodeId)})}):$scope.path=[],mediaTypeHelper.getAllowedImagetypes(folder.id).then(function(types){vm.acceptedMediatypes=types}),$scope.lockedFolder=-1===folder.id&&$scope.model.startNodeIsVirtual||!1===function hasFolderAccess(node){for(var nodePath=node.path?node.path.split(","):[node.id],i=0;i<nodePath.length;i++)if(-1!==userStartNodes.indexOf(parseInt(nodePath[i])))return!0;return!1}(folder),$scope.currentFolder=folder,localStorageService.set("umbLastOpenedMediaNodeId",folder.id),getChildren(folder.id)}function clickHandler(media,event,index){media.isFolder?$scope.disableFolderSelect?gotoFolder(media):selectMedia(media):$scope.showDetails?($scope.target=media,media.image?$scope.target.url=media.image:$scope.target.url=mediaHelper.resolveFile(media),openDetailsDialog()):selectMedia(media)}function selectMedia(media){if(media.selectable)if(media.selected)for(var i=0;$scope.model.selection.length>i;i++){var imageInSelection=$scope.model.selection[i];media.key===imageInSelection.key&&(media.selected=!1,$scope.model.selection.splice(i,1))}else $scope.multiPicker||deselectAllMedia($scope.model.selection),eventsService.emit("dialogs.mediaPicker.select",media),media.selected=!0,$scope.model.selection.push(media)}function deselectAllMedia(medias){for(var i=0;i<medias.length;i++){medias[i].selected=!1}medias.length=0}function ensureWithinStartNode(node){return-1!==node.path.split(",").indexOf($scope.startNodeId.toString())&&!1===node.trashed?(gotoFolder({id:$scope.lastOpenedNode||$scope.startNodeId,name:"Media",icon:"icon-folder",path:node.path}),!0):(gotoFolder({id:$scope.startNodeId,name:"Media",icon:"icon-folder"}),!1)}function gotoStartNode(){gotoFolder({id:$scope.startNodeId,name:"Media",icon:"icon-folder"})}function openDetailsDialog(){var dialog={size:"small",cropSize:$scope.cropSize,target:$scope.target,disableFocalPoint:$scope.disableFocalPoint,submit:function submit(){$scope.model.selection.push($scope.target),$scope.model.submit($scope.model),editorService.close()},close:function close(){editorService.close()}};localizationService.localize("defaultdialogs_editSelectedMedia").then(function(value){dialog.title=value,editorService.mediaCropDetails(dialog)})}$scope.model&&$scope.model.dataTypeKey&&(dataTypeKey=$scope.model.dataTypeKey),vm.searchOptions={pageNumber:1,pageSize:100,totalItems:0,totalPages:0,filter:"",dataTypeKey:dataTypeKey},vm.layout={layouts:[{name:"Grid",icon:"icon-thumbnails-small",path:"gridpath",selected:!0},{name:"List",icon:"icon-list",path:"listpath",selected:!0}],activeLayout:{name:"Grid",icon:"icon-thumbnails-small",path:"gridpath",selected:!0}},$scope.target=null,dialogOptions.currentTarget&&($scope.target=dialogOptions.currentTarget);var debounceSearchMedia=_.debounce(function(){$scope.$apply(function(){vm.searchOptions.filter?searchMedia():(vm.searchOptions={pageNumber:1,pageSize:100,totalItems:0,totalPages:0,filter:"",dataTypeKey:dataTypeKey},getChildren($scope.currentFolder.id))})},500);function changeSearch(){vm.loading=!0,debounceSearchMedia()}function searchMedia(){vm.loading=!0,entityResource.getPagedDescendants($scope.filterOptions.excludeSubFolders?$scope.currentFolder.id:$scope.startNodeId,"Media",vm.searchOptions).then(function(data){if(data.items){var allowedTypes=dialogOptions.filter?dialogOptions.filter.split(","):null;data.items.forEach(function(mediaItem){!function setMediaMetaData(mediaItem){mediaItem.thumbnail=mediaHelper.resolveFileFromEntity(mediaItem,!0),mediaItem.image=mediaHelper.resolveFileFromEntity(mediaItem,!1),mediaItem.metaData&&(mediaItem.properties=[],mediaItem.metaData.umbracoWidth&&mediaItem.metaData.umbracoHeight&&mediaItem.properties.push({alias:"umbracoWidth",editor:mediaItem.metaData.umbracoWidth.PropertyEditorAlias,value:mediaItem.metaData.umbracoWidth.Value},{alias:"umbracoHeight",editor:mediaItem.metaData.umbracoHeight.PropertyEditorAlias,value:mediaItem.metaData.umbracoHeight.Value}),mediaItem.metaData.umbracoFile&&mediaItem.properties.push({alias:"umbracoFile",editor:mediaItem.metaData.umbracoFile.PropertyEditorAlias,value:mediaItem.metaData.umbracoFile.Value}),null!==mediaItem.metaData.UpdateDate&&(mediaItem.updateDate=mediaItem.metaData.UpdateDate))}(mediaItem),mediaItem.filtered=allowedTypes&&allowedTypes.indexOf(mediaItem.metaData.ContentTypeAlias)<0})}$scope.images=data.items?data.items:[],data.pageNumber>0&&(vm.searchOptions.pageNumber=data.pageNumber),data.pageSize>0&&(vm.searchOptions.pageSize=data.pageSize),vm.searchOptions.totalItems=data.totalItems,vm.searchOptions.totalPages=data.totalPages,preSelectMedia(),vm.loading=!1})}function getChildren(id){return vm.loading=!0,entityResource.getChildren(id,"Media",vm.searchOptions).then(function(data){for(var allowedTypes=dialogOptions.filter?dialogOptions.filter.split(","):null,i=0;i<data.length;i++)setDefaultData(data[i]),data[i].filtered=allowedTypes&&allowedTypes.indexOf(data[i].metaData.ContentTypeAlias)<0;vm.searchOptions.filter="",$scope.images=data||[],preSelectMedia(),vm.loading=!1})}function setDefaultData(item){null!==item.metaData.MediaPath&&(item.thumbnail=mediaHelper.resolveFileFromEntity(item,!0),item.image=mediaHelper.resolveFileFromEntity(item,!1)),null!==item.metaData.UpdateDate&&(item.updateDate=item.metaData.UpdateDate)}function preSelectMedia(){for(var folderIndex=0;folderIndex<$scope.images.length;folderIndex++){var folderImage=$scope.images[folderIndex],imageIsSelected=!1;if($scope.model&&Utilities.isArray($scope.model.selection))for(var selectedIndex=0;selectedIndex<$scope.model.selection.length;selectedIndex++){var selectedImage=$scope.model.selection[selectedIndex];folderImage.key===selectedImage.key&&(imageIsSelected=!0)}imageIsSelected&&(folderImage.selected=!0)}}!function onInit(){!function setTitle(){$scope.model.title||localizationService.localizeMany(["defaultdialogs_selectMedia","mediaPicker_tabClipboard"]).then(function(data){$scope.model.title=data[0],vm.navigation=[{alias:"empty",name:data[0],icon:"icon-umb-media",active:!0,view:""}],vm.clipboardItems&&vm.navigation.push({alias:"clipboard",name:data[1],icon:"icon-paste-in",view:"",disabled:0===vm.clipboardItems.length}),vm.activeTab=vm.navigation[0]})}(),userService.getCurrentUser().then(function(userData){userStartNodes=userData.startMediaIds,-1!==$scope.startNodeId?entityResource.getById($scope.startNodeId,"media").then(function(ent){$scope.startNodeId=ent.id,run()}):run()})}()}),angular.module("umbraco").controller("Umbraco.Editors.MediaCropDetailsController",function($scope){var vm=this;vm.submit=function submit(){$scope.model&&$scope.model.submit&&$scope.model.submit($scope.model)},vm.close=function close(){$scope.model&&$scope.model.close&&$scope.model.close($scope.model)},vm.hasCrops=!0===function cropSet(){var model=$scope.model;return void 0!==(model.cropSize||{}).width&&void 0!==(model.cropSize||{}).height}(),vm.focalPointChanged=function focalPointChanged(left,top){$scope.model.target.focalPoint={left:left,top:top}},vm.disableFocalPoint=!1,"boolean"==typeof $scope.model.disableFocalPoint?vm.disableFocalPoint=$scope.model.disableFocalPoint:vm.disableFocalPoint=void 0!==$scope.model.disableFocalPoint&&"0"!==$scope.model.disableFocalPoint,$scope.model.target.coordinates||$scope.model.target.focalPoint||($scope.model.target.focalPoint={left:.5,top:.5}),$scope.model.target.image||($scope.model.target.image=$scope.model.target.url),!$scope.model.target||$scope.model.target.id||$scope.model.target.url&&$scope.model.target.url.toLowerCase().startsWith("blob:")?vm.shouldShowUrl=!1:vm.shouldShowUrl=!0}),angular.module("umbraco").controller("Umbraco.Editors.MemberGroupPickerController",function($scope,eventsService,localizationService){function select(text,id){$scope.model.multiPicker?function selectMemberGroups(id){var index=$scope.model.selectedMemberGroups.indexOf(id);-1===index?$scope.model.selectedMemberGroups.push(id):$scope.model.selectedMemberGroups.splice(index,1)}(id):(!function selectMemberGroup(id){$scope.model.selectedMemberGroup=id}(id),$scope.model.submit($scope.model))}function nodeSelectHandler(args){args.event.preventDefault(),args.event.stopPropagation(),eventsService.emit("dialogs.memberGroupPicker.select",args),select(args.node.name,args.node.id),args.node.selected=!0!==args.node.selected}$scope.dialogTreeApi={},$scope.multiPicker=$scope.model.multiPicker,this.submit=function submit(){$scope.model&&$scope.model.submit&&$scope.model.submit($scope.model)},this.close=function close(){$scope.model&&$scope.model.close&&$scope.model.close()},$scope.onTreeInit=function(){$scope.dialogTreeApi.callbacks.treeNodeSelect(nodeSelectHandler)},function activate(){$scope.model.title||localizationService.localize("defaultdialogs_selectMemberGroup").then(function(value){$scope.model.title=value}),$scope.multiPicker?$scope.model.selectedMemberGroups=[]:$scope.model.selectedMemberGroup=""}()}),function(){angular.module("umbraco").controller("Umbraco.Editors.MoveController",function MoveController($scope,localizationService,entityHelper){var vm=this;vm.hideSearch=function hideSearch(){vm.searchInfo.showSearch=!1,vm.searchInfo.searchFromId=null,vm.searchInfo.searchFromName=null,vm.searchInfo.results=[]},vm.selectResult=function selectResult(evt,result){result.selected=!0!==result.selected,nodeSelectHandler({event:evt,node:result})},vm.onSearchResults=function onSearchResults(results){vm.searchInfo.results=results,vm.searchInfo.showSearch=!0},vm.submit=function submit(){$scope.model&&$scope.model.submit&&$scope.model.submit($scope.model)},vm.close=function close(){$scope.model&&$scope.model.close&&$scope.model.close()};var dialogOptions=$scope.model;function nodeSelectHandler(args){args&&args.event&&(args.event.preventDefault(),args.event.stopPropagation()),$scope.model.target&&($scope.model.target.selected=!1),$scope.model.target=args.node,$scope.model.target.selected=!0}function nodeExpandedHandler(args){args.node.metaData.isContainer&&function openMiniListView(node){$scope.miniListView=node}(args.node)}dialogOptions.currentNode,$scope.model.relateToOriginal=!0,$scope.dialogTreeApi={},vm.searchInfo={searchFromId:null,searchFromName:null,showSearch:!1,results:[],selectedSearchResults:[]},$scope.entityType=entityHelper.getEntityTypeFromSection(dialogOptions.section),$scope.onTreeInit=function(){$scope.dialogTreeApi.callbacks.treeNodeSelect(nodeSelectHandler),$scope.dialogTreeApi.callbacks.treeNodeExpanded(nodeExpandedHandler)},$scope.selectListViewNode=function(node){node.selected=!0!==node.selected,nodeSelectHandler({node:node})},$scope.closeMiniListView=function(){$scope.miniListView=void 0},function onInit(){$scope.model.title||localizationService.localize("actions_move").then(function(value){$scope.model.title=value}),localizationService.localize("general_search").then(function(value){})}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.NodePermissionsController",function NodePermissionsController($scope,localizationService){this.submit=function submit(){$scope.model.submit&&$scope.model.submit($scope.model)},this.close=function close(){$scope.model.close&&$scope.model.close()},function onInit(){$scope.model.title||localizationService.localize("defaultdialogs_permissionsEdit").then(function(value){$scope.model.title=value+" "+$scope.model.node.name})}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.PropertySettingsController",function PropertySettingsEditor($scope,contentTypeResource,dataTypeResource,dataTypeHelper,formHelper,localizationService,userService,editorService){var vm=this;function submit(){$scope.model.submit&&formHelper.submitForm({scope:$scope})&&$scope.model.submit($scope.model)}function matchValidationType(){if(null!==$scope.model.property.validation.pattern&&""!==$scope.model.property.validation.pattern&&void 0!==$scope.model.property.validation.pattern){var match=!1;vm.validationTypes.forEach(function(validationType,index){$scope.model.property.validation.pattern===validationType.pattern&&(vm.selectedValidationType=vm.validationTypes[index],vm.showValidationPattern=!0,match=!0)}),match||vm.validationTypes.forEach(function(validationType){"custom"===validationType.key&&(vm.selectedValidationType=validationType,vm.showValidationPattern=!0)})}}function toggleValue(settingValue){return!settingValue}vm.showValidationPattern=!1,vm.focusOnPatternField=!1,vm.focusOnMandatoryField=!1,vm.selectedValidationType=null,vm.validationTypes=[],vm.labels={},vm.changeValidationType=function changeValidationType(selectedValidationType){selectedValidationType?($scope.model.property.validation.pattern=selectedValidationType.pattern,vm.showValidationPattern=!0,"custom"===selectedValidationType.key&&(vm.focusOnPatternField=!0)):($scope.model.property.validation.pattern="",vm.showValidationPattern=!1)},vm.changeValidationPattern=function changeValidationPattern(){matchValidationType()},vm.openDataTypePicker=function openDataTypePicker(property){vm.focusOnMandatoryField=!1;var dataTypePicker={property:$scope.model.property,contentTypeName:$scope.model.contentTypeName,view:"views/common/infiniteeditors/datatypepicker/datatypepicker.html",size:"medium",submit:function submit(model){$scope.model.updateSameDataTypes=model.updateSameDataTypes,vm.focusOnMandatoryField=!0,property.config=model.property.config,property.editor=model.property.editor,property.view=model.property.view,property.dataTypeId=model.property.dataTypeId,property.dataTypeIcon=model.property.dataTypeIcon,property.dataTypeName=model.property.dataTypeName,editorService.close()},close:function close(model){editorService.close()}};editorService.open(dataTypePicker)},vm.openDataTypeSettings=function openDataTypeSettings(property){vm.focusOnMandatoryField=!1;var dataTypeSettings={view:"views/common/infiniteeditors/datatypesettings/datatypesettings.html",id:property.dataTypeId,submit:function submit(model){contentTypeResource.getPropertyTypeScaffold(model.dataType.id).then(function(propertyType){property.config=propertyType.config,property.editor=propertyType.editor,property.view=propertyType.view,property.dataTypeId=model.dataType.id,property.dataTypeIcon=model.dataType.icon,property.dataTypeName=model.dataType.name,$scope.model.updateSameDataTypes=!0,vm.focusOnMandatoryField=!0,editorService.close()})},close:function close(){editorService.close()}};editorService.open(dataTypeSettings)},vm.submitOnEnter=function submitOnEnter(event){event&&13===event.keyCode&&submit()},vm.submit=submit,vm.close=function close(){$scope.model.close&&$scope.model.close()},vm.toggleAllowCultureVariants=function toggleAllowCultureVariants(){$scope.model.property.allowCultureVariant=toggleValue($scope.model.property.allowCultureVariant)},vm.toggleAllowSegmentVariants=function toggleAllowSegmentVariants(){$scope.model.property.allowSegmentVariant=toggleValue($scope.model.property.allowSegmentVariant)},vm.toggleValidation=function toggleValidation(){$scope.model.property.validation.mandatory=toggleValue($scope.model.property.validation.mandatory)},vm.toggleShowOnMemberProfile=function toggleShowOnMemberProfile(){$scope.model.property.showOnMemberProfile=toggleValue($scope.model.property.showOnMemberProfile)},vm.toggleMemberCanEdit=function toggleMemberCanEdit(){$scope.model.property.memberCanEdit=toggleValue($scope.model.property.memberCanEdit)},vm.toggleIsSensitiveData=function toggleIsSensitiveData(){$scope.model.property.isSensitiveData=toggleValue($scope.model.property.isSensitiveData)},vm.toggleLabelOnTop=function toggleLabelOnTop(){$scope.model.property.labelOnTop=toggleValue($scope.model.property.labelOnTop)},function onInit(){userService.getCurrentUser().then(function(user){vm.showSensitiveData=-1!=user.userGroups.indexOf("sensitiveData")}),$scope.model.property.dataTypeId||($scope.model.property.allowCultureVariant=$scope.model.contentTypeAllowCultureVariant),function loadValidationTypes(){localizationService.localizeMany(["validation_validateAsEmail","validation_validateAsNumber","validation_validateAsUrl","validation_enterCustomValidation","validation_fieldIsMandatory","contentTypeEditor_displaySettingsLabelOnTop"]).then(function(data){vm.labels.validateAsEmail=data[0],vm.labels.validateAsNumber=data[1],vm.labels.validateAsUrl=data[2],vm.labels.customValidation=data[3],vm.labels.fieldIsMandatory=data[4],vm.labels.displaySettingsLabelOnTop=data[5],vm.validationTypes=[{name:vm.labels.validateAsEmail,key:"email",pattern:"[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+",enableEditing:!0},{name:vm.labels.validateAsNumber,key:"number",pattern:"^[0-9]*$",enableEditing:!0},{name:vm.labels.validateAsUrl,key:"url",pattern:"https?://[a-zA-Z0-9-.]+.[a-zA-Z]{2,}",enableEditing:!0},{name:vm.labels.customValidation,key:"custom",pattern:"",enableEditing:!0}],matchValidationType()})}()}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.QueryBuilderController",function QueryBuilderOverlayController($scope,templateQueryResource,localizationService,editorService){var everything="",myWebsite="",ascendingTranslation="",descendingTranslation="",vm=this;vm.properties=[],vm.contentTypes=[],vm.conditions=[],vm.datePickerConfig={dateFormat:"Y-m-d"},vm.chooseSource=function chooseSource(query){var contentPicker={submit:function submit(model){var selectedNodeId=model.selection[0].id,selectedNodeName=model.selection[0].name;selectedNodeId>0?query.source={id:selectedNodeId,name:selectedNodeName}:(query.source.name=myWebsite,delete query.source.id),throttledFunc(),editorService.close()},close:function close(){editorService.close()}};editorService.contentPicker(contentPicker)},vm.getPropertyOperators=function getPropertyOperators(property){return _.filter(vm.conditions,function(condition){var index=condition.appliesTo.indexOf(property.type);return index>=0})},vm.addFilter=function addFilter(query){query.filters.push({})},vm.trashFilter=function trashFilter(query,filter){for(var i=0;i<query.filters.length;i++)query.filters[i]==filter&&query.filters.splice(i,1);0==query.filters.length&&query.filters.push({})},vm.changeSortOrder=function changeSortOrder(query){"ascending"===query.sort.direction?(query.sort.direction="descending",query.sort.translation.currentLabel=query.sort.translation.descending):(query.sort.direction="ascending",query.sort.translation.currentLabel=query.sort.translation.ascending),throttledFunc()},vm.setSortProperty=function setSortProperty(query,property){query.sort.property=property,"datetime"===property.type?(query.sort.direction="descending",query.sort.translation.currentLabel=query.sort.translation.descending):(query.sort.direction="ascending",query.sort.translation.currentLabel=query.sort.translation.ascending),throttledFunc()},vm.setContentType=function setContentType(contentType){vm.query.contentType=contentType,throttledFunc()},vm.setFilterProperty=function setFilterProperty(filter,property){filter.property=property,filter.term={},filter.constraintValue=""},vm.setFilterTerm=function setFilterTerm(filter,term){filter.term=term,filter.constraintValue&&throttledFunc()},vm.changeConstraintValue=function changeConstraintValue(){throttledFunc()},vm.datePickerChange=function datePickerChange(date,filter){var momentDate=moment(date);momentDate&&momentDate.isValid()&&(filter.constraintValue=momentDate.format(vm.datePickerConfig.format),throttledFunc())},vm.submit=function submit(model){$scope.model.submit&&$scope.model.submit(model)},vm.close=function close(){$scope.model.close&&$scope.model.close()};var throttledFunc=_.throttle(function(){templateQueryResource.postTemplateQuery(vm.query).then(function(response){$scope.model.result=response})},200);localizationService.localizeMany(["template_allContent","template_websiteRoot","template_ascending","template_descending"]).then(function(res){everything=res[0],myWebsite=res[1],ascendingTranslation=res[2],descendingTranslation=res[3],function onInit(){$scope.model.title||localizationService.localize("template_queryBuilder").then(function(value){$scope.model.title=value}),vm.query={contentType:{name:everything},source:{name:myWebsite},filters:[{property:void 0,operator:void 0}],sort:{property:{alias:"",name:""},direction:"ascending",translation:{currentLabel:ascendingTranslation,ascending:ascendingTranslation,descending:descendingTranslation}}},templateQueryResource.getAllowedProperties().then(function(properties){vm.properties=properties}),templateQueryResource.getContentTypes().then(function(contentTypes){vm.contentTypes=contentTypes}),templateQueryResource.getFilterConditions().then(function(conditions){vm.conditions=conditions}),throttledFunc()}()})})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.RollbackController",function RollbackController($scope,contentResource,localizationService,assetsService,dateHelper,userService){var vm=this;function getVersions(){var nodeId=$scope.model.node.id,culture=$scope.model.node.variants.length>1?vm.currentVersion.language.culture:null;return contentResource.getRollbackVersions(nodeId,culture).then(function(data){userService.getCurrentUser().then(function(currentUser){vm.previousVersions=data.map(function(version){var timestampFormatted=dateHelper.getLocalDate(version.versionDate,currentUser.locale,"LLL");return version.displayValue=timestampFormatted+" - "+version.versionAuthorName,version})})})}function submit(){$scope.model.submit&&$scope.model.submit($scope.model.submit)}vm.rollback=function rollback(){vm.rollbackButtonState="busy";var nodeId=$scope.model.node.id,versionId=vm.previousVersion.versionId,culture=$scope.model.node.variants.length>1?vm.currentVersion.language.culture:null;return contentResource.rollback(nodeId,versionId,culture).then(function(data){vm.rollbackButtonState="success",submit()},function(error){vm.rollbackButtonState="error"})},vm.changeLanguage=function changeLanguage(language){vm.currentVersion=language,getVersions()},vm.changeVersion=function changeVersion(version){if(version&&version.versionId){vm.loading=!0;var culture=$scope.model.node.variants.length>1?vm.currentVersion.language.culture:null;contentResource.getRollbackVersion(version.versionId,culture).then(function(data){vm.previousVersion=data,vm.previousVersion.versionId=version.versionId,function createDiff(currentVersion,previousVersion){vm.diff={},vm.diff.properties=[],vm.diff.name=JsDiff.diffWords(currentVersion.name,previousVersion.name),currentVersion.tabs.forEach(function(tab){tab.properties.forEach(function(property){for(var oldTabIndex=-1,oldTabPropertyIndex=-1,previousVersionTabs=previousVersion.tabs,oti=0,length=previousVersionTabs.length;oti<length;oti++){var opi=previousVersionTabs[oti].properties.findIndex(function(p){return p.alias===property.alias});if(-1!==opi){oldTabIndex=oti,oldTabPropertyIndex=opi;break}}if(-1!==oldTabIndex&&-1!==oldTabPropertyIndex){var oldProperty=previousVersion.tabs[oldTabIndex].properties[oldTabPropertyIndex];oldProperty=Utilities.copy(oldProperty),(property=Utilities.copy(property)).value instanceof Object&&(property.value=JSON.stringify(property.value,null,1),property.isObject=!0),oldProperty.value instanceof Object&&(oldProperty.value=JSON.stringify(oldProperty.value,null,1),oldProperty.isObject=!0),property.value=property.value?property.value+"":"",oldProperty.value=oldProperty.value?oldProperty.value+"":"";var diffProperty={alias:property.alias,label:property.label,diff:property.isObject?JsDiff.diffJson(property.value,oldProperty.value):JsDiff.diffWords(property.value,oldProperty.value),isObject:property.isObject||oldProperty.isObject};vm.diff.properties.push(diffProperty)}})})}(vm.currentVersion,vm.previousVersion),vm.loading=!1,vm.rollbackButtonDisabled=!1},function(){vm.loading=!1})}else vm.diff=null,vm.rollbackButtonDisabled=!0},vm.submit=submit,vm.close=function close(){$scope.model.close&&$scope.model.close()},function onInit(){if(vm.loading=!0,vm.variantVersions=[],vm.diff=null,vm.currentVersion=null,vm.rollbackButtonDisabled=!0,vm.labels={},1===$scope.model.node.variants.length&&(vm.currentVersion=$scope.model.node.variants[0]),$scope.model.node.variants.length>1){var active=_.find($scope.model.node.variants,function(v){return v.active});active&&(vm.selectedLanguage=active,vm.currentVersion=active)}localizationService.localizeMany(["actions_rollback","general_choose"]).then(function(data){$scope.model.title||($scope.model.title=data[0]),vm.labels.choose=data[1]}),assetsService.loadJs("lib/jsdiff/diff.min.js",$scope).then(function(){getVersions().then(function(){vm.loading=!1})})}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.SectionPickerController",function SectionPickerController($scope,sectionResource,localizationService){var vm=this;vm.sections=[],vm.loading=!1,vm.selectSection=function selectSection(section){section.selected?$scope.model.selection.forEach(function(selectedSection,index){selectedSection.alias===section.alias&&(section.selected=!1,$scope.model.selection.splice(index,1))}):(section.selected=!0,$scope.model.selection.push(section))},vm.submit=function submit(model){$scope.model.submit&&$scope.model.submit(model)},vm.close=function close(){$scope.model.close&&$scope.model.close()},function onInit(){vm.loading=!0,$scope.model.title||localizationService.localize("defaultdialogs_selectSections").then(function(value){$scope.model.title=value}),$scope.model.selection||($scope.model.selection=[]),sectionResource.getAllSections().then(function(sections){vm.sections=sections,function setSectionIcon(sections){sections.forEach(function(section){section.icon="icon-section"})}(vm.sections),$scope.model.selection&&$scope.model.selection.length>0&&function preSelect(selection){selection.forEach(function(selected){vm.sections.forEach(function(section){selected.alias===section.alias&&(section.selected=!0)})})}($scope.model.selection),vm.loading=!1})}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.TemplateSectionsController",function TemplateSectionsController($scope,formHelper,localizationService){var vm=this;vm.labels={},vm.select=function select(type){$scope.model.insertType=type},vm.submit=function submit(model){formHelper.submitForm({scope:$scope})&&$scope.model.submit($scope.model)},vm.close=function close(){$scope.model.close&&$scope.model.close()},$scope.model.mandatoryRenderSection=!1,function onInit(){$scope.model.hasMaster?$scope.model.insertType="addSection":$scope.model.insertType="renderBody",localizationService.localizeMany(["template_insertSections","template_sectionMandatory"]).then(function(data){vm.labels.title=data[0],vm.labels.sectionMandatory=data[1],function setTitle(value){$scope.model.title||($scope.model.title=value)}(vm.labels.title)})}()})}(),angular.module("umbraco").controller("Umbraco.Editors.TreePickerController",function($scope,entityResource,eventsService,angularHelper,$timeout,localizationService,treeService,languageResource){$scope.model.selection=[];var tree=null,expandedPaths=[],vm=this;vm.treeReady=!1,vm.dialogTreeApi={},vm.initDialogTree=function initDialogTree(){vm.dialogTreeApi.callbacks.treeLoaded(treeLoadedHandler),vm.dialogTreeApi.callbacks.treeNodeExpanded(nodeExpandedHandler),vm.dialogTreeApi.callbacks.treeNodeSelect(nodeSelectHandler)},vm.section=$scope.model.section,vm.treeAlias=$scope.model.treeAlias,vm.multiPicker=$scope.model.multiPicker,vm.hideHeader="boolean"!=typeof $scope.model.hideHeader||$scope.model.hideHeader,vm.dataTypeKey=$scope.model.dataTypeKey,vm.searchInfo={searchFromId:$scope.model.startNodeId,searchFromName:null,showSearch:!1,dataTypeKey:vm.dataTypeKey,results:[],selectedSearchResults:[]},vm.startNodeId=$scope.model.startNodeId,vm.hasItems=!0,vm.emptyStateMessage=$scope.model.emptyStateMessage,vm.languages=[],vm.selectedLanguage={},vm.languageSelectorIsOpen=!1,vm.showLanguageSelector=$scope.model.showLanguageSelector,vm.entityType=$scope.model.entityType?$scope.model.entityType:"Document",vm.enableSearh=-1!==["content","media","member"].indexOf(vm.section),vm.toggleLanguageSelector=function toggleLanguageSelector(){vm.languageSelectorIsOpen=!vm.languageSelectorIsOpen},vm.selectLanguage=function selectLanguage(language){vm.selectedLanguage=language,vm.languageSelectorIsOpen=!1,initTree(),$timeout(function(){vm.dialogTreeApi.load(vm.section).then(function(){for(var promises=[],i=0;i<expandedPaths.length;i++)promises.push(vm.dialogTreeApi.syncTree({path:expandedPaths[i],activate:!1}));angularHelper.executeSequentialPromises(promises)})})},vm.onSearchResults=function onSearchResults(results){performFiltering(results),results=results.filter(function(item){return!item.filtered}),vm.searchInfo.results=results,vm.searchInfo.results.forEach(function(result){var exists=$scope.model.selection.find(function(item){return result.id===item.id});exists&&(result.selected=!0)}),vm.searchInfo.showSearch=!0},vm.selectResult=function selectResult(evt,result){if(result.filtered)return;result.selected=!0!==result.selected,select(result.name,result.id,result),result.selected?vm.searchInfo.selectedSearchResults.push(result):vm.searchInfo.selectedSearchResults=_.reject(vm.searchInfo.selectedSearchResults,function(i){return i.id==result.id});if(tree){var found=treeService.getDescendantNode(tree.root,result.id);found&&(found.selected=result.selected)}},vm.hideSearch=hideSearch,vm.closeMiniListView=function closeMiniListView(){vm.miniListView=void 0,previouslyFocusedElement&&$timeout(function(){previouslyFocusedElement.focus(),previouslyFocusedElement=null})},vm.selectListViewNode=function selectListViewNode(node){select(node.name,node.id),node.selected=!0!==node.selected},vm.listViewItemsLoaded=function listViewItemsLoaded(items){var selectedIds=$scope.model.selection.map(function(x){return x.id});items.forEach(function(item){return item.selected=selectedIds.includes(item.id)})},vm.submit=function submit(model){$scope.model.submit&&$scope.model.submit(model)},vm.close=function close(){$scope.model.close&&$scope.model.close()};var currentNode=$scope.model.currentNode,previouslyFocusedElement=null;function initTree(){var queryParams={};vm.startNodeId&&(queryParams.startNodeId=$scope.model.startNodeId),vm.selectedLanguage&&vm.selectedLanguage.id&&(queryParams.culture=vm.selectedLanguage.culture),vm.dataTypeKey&&(queryParams.dataTypeKey=vm.dataTypeKey);var queryString=$.param(queryParams);queryString?(vm.customTreeParams=queryString,$scope.model.customTreeParams&&(vm.customTreeParams+="&"+$scope.model.customTreeParams)):vm.customTreeParams=$scope.model.customTreeParams,vm.treeReady=!0}function nodeExpandedHandler(args){args.node&&treeService._trackExpandedPaths(args.node,expandedPaths),args.node.metaData.isContainer&&openMiniListView(args.node),Utilities.isArray(args.children)&&(args.children.forEach(function(child){vm.searchInfo.selectedSearchResults.find(function(selected){return child.id===selected.id})&&(child.selected=!0)}),performFiltering(args.children))}function treeLoadedHandler(args){vm.hasItems=args.tree.root.children.length>0,tree=args.tree;var nodeHasPath=currentNode&&currentNode.path;!vm.startNodeId&&nodeHasPath&&vm.dialogTreeApi.syncTree({path:currentNode.path,activate:!0})}function nodeSelectHandler(args){if(args.event.preventDefault(),args.event.stopPropagation(),args.node.metaData.isSearchResult){select(args.node.name,args.node.id);var listView=args.node.parent();listView.children=_.reject(listView.children,function(child){return child.id==args.node.id}),vm.searchInfo.selectedSearchResults=_.reject(vm.searchInfo.selectedSearchResults,function(i){return i.id==args.node.id})}else{if(eventsService.emit("dialogs.treePickerController.select",args),args.node.filtered)return;$scope.model.select?$scope.model.select(args.node):(select(args.node.name,args.node.id),args.node.selected=!0!==args.node.selected)}}function select(text,id,entity){if(id<0){var rootNode={alias:null,icon:"icon-folder",id:id,name:text};vm.multiPicker?multiSelectItem(entity||rootNode):($scope.model.selection.push(rootNode),$scope.model.submit($scope.model))}else vm.multiPicker?entity?multiSelectItem(entity):entityResource.getById(id,vm.entityType).then(function(ent){multiSelectItem(ent)}):(hideSearch(),entity?($scope.model.selection.push(entity),$scope.model.submit($scope.model)):entityResource.getById(id,vm.entityType).then(function(ent){$scope.model.selection.push(ent),$scope.model.submit($scope.model)}))}function multiSelectItem(item){var found=!1,foundIndex=0;if($scope.model.selection.length>0)for(var i=0;$scope.model.selection.length>i;i++){$scope.model.selection[i].id===parseInt(item.id)&&(found=!0,foundIndex=i)}found?$scope.model.selection.splice(foundIndex,1):$scope.model.selection.push(item)}function performFiltering(nodes){if($scope.model.filter)if(nodes=_.filter(nodes,function(n){return!Utilities.isObject(n.metaData.listViewNode)}),$scope.model.filterAdvanced){(Utilities.isFunction($scope.model.filter)?_.filter(nodes,$scope.model.filter):_.where(nodes,$scope.model.filter)).forEach(function(value){value.filtered=!0,$scope.model.filterCssClass&&(value.cssClasses||(value.cssClasses=[]),value.cssClasses.push($scope.model.filterCssClass),value.title=$scope.model.filterTitle)})}else{var a=$scope.model.filter.toLowerCase().replace(/\s/g,"").split(",");nodes.forEach(function(value){var found=a.indexOf(value.metaData.contentType.toLowerCase())>=0;(!$scope.model.filterExclude&&!found||$scope.model.filterExclude&&found)&&(value.filtered=!0,$scope.model.filterCssClass&&(value.cssClasses||(value.cssClasses=[]),value.cssClasses.push($scope.model.filterCssClass),value.title=$scope.model.filterTitle))})}}function openMiniListView(node){previouslyFocusedElement=document.activeElement,vm.miniListView=node}function hideSearch(){if(tree){!function checkChildren(children){children.forEach(function(child){if(vm.searchInfo.selectedSearchResults.find(function(selected){return child.id===selected.id}))child.selected=!0;else if(child.metaData.isSearchResult){var listView=child.parent();listView.children=_.reject(listView.children,function(c){return c.id==child.id})}child.metaData.isContainer&&(child.cssClasses=_.reject(child.cssClasses,function(c){return"tree-node-slide-up-hide-active"===c}),vm.searchInfo.selectedSearchResults.filter(function(i){return i.parentId===child.id}).forEach(function(item){if(child.children&&!child.children.find(function(c){return c.id===item.id})){var _parent=child;child.children.unshift({id:item.id,name:item.name,cssClass:"icon umb-tree-icon sprTree "+item.icon,level:child.level+1,metaData:{isSearchResult:!0},hasChildren:!1,parent:function parent(){return _parent}})}})),child.children&&child.children.length>0&&checkChildren(child.children)})}(tree.root.children)}vm.searchInfo.showSearch=!1,vm.searchInfo.searchFromId=vm.startNodeId,vm.searchInfo.searchFromName=null,vm.searchInfo.results=[]}!function onInit(){if(vm.showLanguageSelector&&languageResource.getAll().then(function(languages){vm.languages=languages,vm.languages.forEach(function(language){language.isDefault&&(vm.selectedLanguage=language,vm.languageSelectorIsOpen=!1)})}),"content"===vm.treeAlias?(vm.entityType="Document",$scope.model.title||localizationService.localize("defaultdialogs_selectContent").then(function(value){$scope.model.title=value})):"documentTypes"===vm.treeAlias?(vm.entityType="DocumentType",$scope.model.title||localizationService.localize("defaultdialogs_selectContentType").then(function(value){$scope.model.title=value})):"member"===vm.treeAlias||"member"===vm.section?(vm.entityType="Member",$scope.model.title||localizationService.localize("defaultdialogs_selectMember").then(function(value){$scope.model.title=value})):"memberTypes"===vm.treeAlias?(vm.entityType="MemberType",$scope.model.title||localizationService.localize("defaultdialogs_selectMemberType").then(function(value){$scope.model.title=value})):"media"===vm.treeAlias||"media"===vm.section?(vm.entityType="Media",$scope.model.title||localizationService.localize("defaultdialogs_selectMedia").then(function(value){$scope.model.title=value})):"mediaTypes"===vm.treeAlias&&(vm.entityType="MediaType",$scope.model.title||localizationService.localize("defaultdialogs_selectMediaType").then(function(value){$scope.model.title=value})),$scope.model.minNumber&&($scope.model.minNumber=parseInt($scope.model.minNumber,10)),$scope.model.maxNumber&&($scope.model.maxNumber=parseInt($scope.model.maxNumber,10)),vm.enableSearh&&vm.startNodeId&&-1!==vm.startNodeId&&"-1"!==vm.startNodeId?entityResource.getById(vm.startNodeId,vm.entityType).then(function(node){node.metaData.IsContainer&&openMiniListView(node),initTree()}):initTree(),$scope.model.filter)if($scope.model.filterExclude=!1,$scope.model.filterAdvanced=!1,Utilities.isFunction($scope.model.filter))$scope.model.filterAdvanced=!0;else if(Utilities.isObject($scope.model.filter))$scope.model.filterAdvanced=!0;else if($scope.model.filter.startsWith("!")&&($scope.model.filterExclude=!0,$scope.model.filter=$scope.model.filter.substring(1)),$scope.model.filter.startsWith("{"))if($scope.model.filterAdvanced=!0,$scope.model.filterByMetadata&&!Utilities.isFunction($scope.model.filter)){var filter=Utilities.fromJson($scope.model.filter);$scope.model.filter=function(node){return _.isMatch(node.metaData,filter)}}else $scope.model.filter=Utilities.fromJson($scope.model.filter);vm.filter={filterAdvanced:$scope.model.filterAdvanced,filterExclude:$scope.model.filterExclude,filter:$scope.model.filter}}()}),function(){angular.module("umbraco").controller("Umbraco.Editors.UserGroupPickerController",function UserGroupPickerController($scope,userGroupsResource,localizationService){var vm=this;vm.userGroups=[],vm.loading=!1,vm.selectUserGroup=function selectUserGroup(userGroup){userGroup.selected?$scope.model.selection.forEach(function(selectedUserGroup,index){selectedUserGroup.id===userGroup.id&&(userGroup.selected=!1,$scope.model.selection.splice(index,1))}):(userGroup.selected=!0,$scope.model.selection.push(userGroup))},vm.submit=function submit(model){$scope.model.submit&&$scope.model.submit(model)},vm.close=function close(){$scope.model.close&&$scope.model.close()},function onInit(){vm.loading=!0,$scope.model.title||localizationService.localize("user_selectUserGroups").then(function(value){$scope.model.title=value}),$scope.model.selection||($scope.model.selection=[]),userGroupsResource.getUserGroups().then(function(userGroups){vm.userGroups=userGroups,$scope.model.selection&&$scope.model.selection.length>0&&function preSelect(selection){selection.forEach(function(selected){vm.userGroups.forEach(function(userGroup){selected.id===userGroup.id&&(userGroup.selected=!0)})})}($scope.model.selection),vm.loading=!1})}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.UserPickerController",function UserPickerController($scope,entityResource,localizationService,eventsService){var vm=this;vm.users=[],vm.loading=!1,vm.usersOptions={},vm.selectUser=function selectUser(user){user.selected?user.selected?Utilities.forEach($scope.model.selection,function(selectedUser,index){selectedUser.id===user.id&&(user.selected=!1,$scope.model.selection.splice(index,1))}):(vm.multiPicker||function deselectAllUsers(users){for(var i=0;i<users.length;i++){var user=users[i];user.selected=!1}users.length=0}($scope.model.selection),eventsService.emit("dialogs.userPicker.select",user),user.selected=!0,$scope.model.selection.push(user)):(user.selected=!0,$scope.model.selection.push(user)),vm.multiPicker||submit($scope.model)},vm.searchUsers=function searchUsers(){search()},vm.changePageNumber=function changePageNumber(pageNumber){vm.usersOptions.pageNumber=pageNumber,getUsers()},vm.submit=submit,vm.close=function close(){$scope.model.close&&$scope.model.close()},vm.multiPicker=!1!==$scope.model.multiPicker;var search=_.debounce(function(){$scope.$apply(function(){getUsers()})},500);function getUsers(){vm.loading=!0,entityResource.getAll("User").then(function(data){vm.users=data,function preSelect(selection,users){Utilities.forEach(selection,function(selected){Utilities.forEach(users,function(user){selected.id===user.id&&(user.selected=!0)})})}($scope.model.selection,vm.users),vm.loading=!1})}function submit(model){$scope.model.submit&&$scope.model.submit(model)}!function onInit(){if(vm.loading=!0,!$scope.model.title){var labelKey=vm.multiPicker?"defaultdialogs_selectUsers":"defaultdialogs_selectUser";localizationService.localize(labelKey).then(function(value){$scope.model.title=value})}$scope.model.selection||($scope.model.selection=[]),getUsers()}()})}(),angular.module("umbraco").controller("Umbraco.LegacyController",LegacyController),angular.module("umbraco").controller("Umbraco.LoginController",function(eventsService,$scope,userService,$location,$rootScope){userService._showLoginDialog();var evtOn=eventsService.on("app.ready",function(evt,data){$scope.avatar="assets/img/application/logo.png";var path="/",locationObj=$location.search();locationObj.returnPath&&(path=decodeURIComponent(locationObj.returnPath)),$location.url(path)});$scope.$on("$destroy",function(){eventsService.unsubscribe(evtOn)})}),angular.module("umbraco").controller("Umbraco.Notifications.ConfirmRouteChangeController",function($scope,$location,$log,notificationsService,navigationService){$scope.discard=function(not){if(not.args.onDiscard)not.args.onDiscard();else{not.args.listener(),navigationService.clearSearch();var parts=not.args.path.split("?"),query={};parts.length>1&&_.each(parts[1].split("&"),function(q){var keyVal=q.split("=");query[keyVal[0]]=keyVal[1]}),$location.path(parts[0]).search(query),notificationsService.remove(not)}},$scope.stay=function(not){notificationsService.remove(not)}}),angular.module("umbraco").controller("Umbraco.Notifications.ConfirmUnpublishController",function($scope,notificationsService,eventsService){$scope.confirm=function(not,action){eventsService.emit("content.confirmUnpublish",action),notificationsService.remove(not)}}),angular.module("umbraco").controller("Umbraco.Overlays.ItemPickerOverlay",ItemPickerOverlay),angular.module("umbraco").controller("Umbraco.Overlays.UserController",function($scope,$location,$timeout,dashboardResource,userService,historyService,eventsService,externalLoginInfo,externalLoginInfoService,authResource,currentUserResource,formHelper,localizationService){$scope.history=historyService.getCurrent(),$scope.showPasswordFields=!1,$scope.changePasswordButtonState="init",$scope.model.title="user.name",$scope.denyLocalLogin=externalLoginInfoService.hasDenyLocalLogin(),$scope.externalLoginProviders=externalLoginInfoService.getLoginProvidersWithOptions(),$scope.externalLinkLoginFormAction=Umbraco.Sys.ServerVariables.umbracoUrls.externalLinkLoginsUrl;var evts=[];function updateUserInfo(){userService.getCurrentUser().then(function(user){$scope.user=user,$scope.user&&($scope.model.title=user.name,$scope.remainingAuthSeconds=$scope.user.remainingAuthSeconds,$scope.canEditProfile=_.indexOf($scope.user.allowedSections,"users")>-1,currentUserResource.getCurrentUserLinkedLogins().then(function(logins){for(var login in $scope.externalLoginProviders.forEach(function(provider){return provider.linkedProviderKey=void 0}),logins){var found=_.find($scope.externalLoginProviders,function(i){return i.authType==login});found&&(found.linkedProviderKey=logins[login])}}),authResource.getPasswordConfig(user.id).then(function(data){$scope.changePasswordModel.config=data,$scope.changePasswordModel.config.hasPassword=!0,$scope.changePasswordModel.config.disableToggle=!0}))})}function clearPasswordFields(){$scope.changePasswordModel.value.oldPassword="",$scope.changePasswordModel.value.newPassword="",$scope.changePasswordModel.value.confirm=""}evts.push(eventsService.on("historyService.add",function(e,args){$scope.history=args.all})),evts.push(eventsService.on("historyService.remove",function(e,args){$scope.history=args.all})),evts.push(eventsService.on("historyService.removeAll",function(e,args){$scope.history=[]})),$scope.logout=function(){var pendingChangeEvent=eventsService.on("valFormManager.pendingChanges",function(e,args){pendingChangeEvent(),$scope.model.close()});$scope.model.close(),$location.path("/logout").search("")},$scope.gotoHistory=function(link){$location.path(link),$scope.model.close()},$scope.linkProvider=function(e){e.target.submit()},$scope.unlink=function(e,loginProvider,providerKey){confirm("Are you sure you want to unlink this account?")?authResource.unlinkLogin(loginProvider,providerKey).then(function(a,b,c){updateUserInfo()}):e.preventDefault()},$scope.changePasswordModel={config:{},value:{}},updateUserInfo(),$scope.$on("$destroy",function(){for(var e=0;e<evts.length;e++)evts[e]()}),$scope.changePassword=function(){formHelper.submitForm({scope:$scope})&&($scope.changePasswordButtonState="busy",currentUserResource.changePassword($scope.changePasswordModel.value).then(function(data){clearPasswordFields(),formHelper.resetForm({scope:$scope}),$scope.changePasswordButtonState="success",$timeout(function(){$scope.togglePasswordFields()},2e3)},function(err){formHelper.resetForm({scope:$scope,hasErrors:!0}),formHelper.handleError(err),$scope.changePasswordButtonState="error"}))},$scope.togglePasswordFields=function(){clearPasswordFields(),$scope.showPasswordFields=!$scope.showPasswordFields},dashboardResource.getDashboard("user-dialog").then(function(dashboard){$scope.dashboard=dashboard})}),angular.module("umbraco").controller("Umbraco.Overlays.YsodController",function($scope,localizationService){!function onInit(){if($scope.model.title||localizationService.localize("errors_receivedErrorFromServer").then(function(value){$scope.model.title=value}),$scope.model.error&&$scope.model.error.data&&$scope.model.error.data.StackTrace&&($scope.model.error.data.StackTrace=$scope.model.error.data.StackTrace.trim()),$scope.model.error&&$scope.model.error.data){$scope.model.error.data.InnerExceptions=[];for(var ex=$scope.model.error.data.InnerException;ex;)ex.StackTrace&&(ex.StackTrace=ex.StackTrace.trim()),$scope.model.error.data.InnerExceptions.push(ex),ex=ex.InnerException}}()}),function(){angular.module("umbraco").controller("Umbraco.Tours.UmbEmailMarketing.ConfirmController",function ConfirmController($scope,userService){var vm=this;vm.userEmailAddress="",userService.getCurrentUser().then(function(user){vm.userEmailAddress=user.email})})}(),function(){angular.module("umbraco").controller("Umbraco.Tours.UmbEmailMarketing.EmailsController",function EmailsController($scope,userService){this.optIn=function(){userService.getCurrentUser().then(function(user){userService.addUserToEmailMarketing(user)}),$scope.model.nextStep()}})}(),function(){angular.module("umbraco").controller("Umbraco.Tours.UmbIntroCreateContent.NodeNameController",function NodeNameController($scope){var vm=this,element=$($scope.model.currentStep.element);vm.error=!1,vm.initNextStep=function initNextStep(){"home"===element.val().toLowerCase()?$scope.model.nextStep():vm.error=!0}})}(),function(){angular.module("umbraco").controller("Umbraco.Tours.UmbIntroCreateDocType.DocTypeNameController",function DocTypeNameController($scope){var vm=this,element=$($scope.model.currentStep.element);vm.error=!1,vm.initNextStep=function initNextStep(){"home page"===element.val().toLowerCase()?$scope.model.nextStep():vm.error=!0}})}(),function(){angular.module("umbraco").controller("Umbraco.Tours.UmbIntroCreateDocType.PropertyNameController",function PropertyNameController($scope){var vm=this,element=$($scope.model.currentStep.element);vm.error=!1,vm.initNextStep=function initNextStep(){"welcome text"===element.val().toLowerCase()?$scope.model.nextStep():vm.error=!0}})}(),function(){angular.module("umbraco").controller("Umbraco.Tours.UmbIntroCreateDocType.TabNameController",function TabNameController($scope){var vm=this,element=$($scope.model.currentStep.element);vm.error=!1,vm.initNextStep=function initNextStep(){"home"===element.val().toLowerCase()?$scope.model.nextStep():vm.error=!0}})}(),function(){angular.module("umbraco").controller("Umbraco.Tours.UmbIntroMediaSection.FolderNameController",function FolderNameController($scope){var vm=this,element=$($scope.model.currentStep.element);vm.error=!1,vm.initNextStep=function initNextStep(){"my images"===element.val().toLowerCase()?$scope.model.nextStep():vm.error=!0}})}(),function(){angular.module("umbraco").controller("Umbraco.Tours.UmbIntroMediaSection.UploadImagesController",function UploadImagesController($scope,editorState,mediaResource){var vm=this;vm.error=!1,vm.initNextStep=function initNextStep(){vm.error=!1,vm.buttonState="busy";var currentNode=editorState.getCurrent();mediaResource.getChildren(currentNode.id).then(function(data){var children=data;children.items&&children.items.length>0?$scope.model.nextStep():vm.error=!0,vm.buttonState="init"})}})}(),function(){angular.module("umbraco").controller("Umbraco.Tours.UmbIntroRenderInTemplate.TemplatesTreeController",function TemplatesTreeController($scope){var eventElement=$($scope.model.currentStep.eventElement);!function onInit(){eventElement.hasClass("icon-navigation-down")&&$scope.model.nextStep()}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.Content.Apps.ContentController",function ContentAppContentController($scope,$timeout,serverValidationManager){var unbindLanguageWatcher=function unbindLanguageWatcher(){},unbindSegmentWatcher=function unbindSegmentWatcher(){},timeout=null,vm=this;function onInit(){serverValidationManager.notify(),vm.loading=!1,timeout=null,$scope.variantContent&&($scope.variantContent.language&&(unbindLanguageWatcher=$scope.$watch(function(){return $scope.variantContent.language.culture},function(newVal,oldVal){newVal!==oldVal&&requestUpdate()})),unbindSegmentWatcher=$scope.$watch(function(){return $scope.variantContent.segment},function(newVal,oldVal){newVal!==oldVal&&requestUpdate()}))}function requestUpdate(){null===timeout&&(vm.loading=!0,timeout=$timeout(function(){onInit()},100))}vm.loading=!0,onInit(),$scope.$on("$destroy",function(){unbindLanguageWatcher(),unbindSegmentWatcher(),$timeout.cancel(timeout)})})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.Content.AssignDomainController",function AssignDomainController($scope,localizationService,languageResource,contentResource,navigationService,notificationsService){var vm=this;function matchLanguageById(language,id){return parseInt(language.id)===parseInt(id)}function closeDialog(){navigationService.hideDialog()}vm.closeDialog=closeDialog,vm.addDomain=function addDomain(){vm.domains.push({name:"",lang:vm.defaultLanguage})},vm.removeDomain=function removeDomain(index){vm.domains.splice(index,1)},vm.save=function save(){if(vm.error=null,vm.submitButtonState="busy",vm.domainForm.$valid){vm.domains.forEach(function(domain){domain.duplicate=null,domain.other=null});var data={nodeId:$scope.currentNode.id,domains:vm.domains.map(function(d){return{name:d.name,lang:d.lang.id}}),language:null!=vm.language?vm.language.id:0};contentResource.saveLanguageAndDomains(data).then(function(response){response.valid?(vm.submitButtonState="success",localizationService.localize("speechBubbles_editCulturesAndHostnamesSaved").then(function(value){notificationsService.success(value)}),closeDialog()):(response.domains.forEach(function(validation){vm.domains.forEach(function(domain){validation.name===domain.name&&(domain.duplicate=validation.duplicate,domain.other=validation.other)})}),vm.submitButtonState="error",localizationService.localize("speechBubbles_editCulturesAndHostnamesError").then(function(value){notificationsService.error(value)}))},function(e){vm.error=e,vm.submitButtonState="error"})}else vm.submitButtonState="error"},vm.languages=[],vm.domains=[],vm.language=null,function activate(){vm.loading=!0,languageResource.getAll().then(function(langs){vm.languages=langs;var defLang=langs.filter(function(l){return l.isDefault});defLang.length>0?vm.defaultLanguage=defLang[0]:vm.defaultLanguage=langs[0],function getCultureAndDomains(){return contentResource.getCultureAndDomains($scope.currentNode.id).then(function(data){if("undefined"!==data.language){var lang=vm.languages.filter(function(l){return matchLanguageById(l,data.language)});lang.length>0&&(vm.language=lang[0])}vm.domains=data.domains.map(function(d){var matchedLangs=vm.languages.filter(function(lng){return matchLanguageById(lng,d.lang)});return{name:d.name,lang:matchedLangs.length>0?matchedLangs[0]:vm.defaultLanguage}})})}().then(function(){vm.loading=!1})}),localizationService.localize("assignDomain_inherit").then(function(value){vm.inherit=value})}()})}(),angular.module("umbraco").controller("Umbraco.Editors.Content.CopyController",function($scope,userService,eventsService,contentResource,navigationService,appState,treeService,localizationService,notificationsService){function treeLoadedHandler(args){$scope.source&&$scope.source.path&&$scope.dialogTreeApi.syncTree({path:$scope.source.path,activate:!1})}function nodeSelectHandler(args){args&&args.event&&(args.event.preventDefault(),args.event.stopPropagation()),eventsService.emit("editors.content.copyController.select",args),$scope.target&&($scope.target.selected=!1),$scope.target=args.node,$scope.target.selected=!0}function nodeExpandedHandler(args){args.node.metaData.isContainer&&function openMiniListView(node){$scope.miniListView=node}(args.node)}localizationService.localize("general_search").then(function(value){value+"..."}),$scope.relateToOriginal=!0,$scope.recursive=!0,$scope.dialogTreeApi={},$scope.busy=!1,$scope.searchInfo={searchFromId:null,searchFromName:null,showSearch:!1,results:[],selectedSearchResults:[]},$scope.treeModel={hideHeader:!1},$scope.toggle=function toggleHandler(type){if("relate"===type){if($scope.relateToOriginal)return void($scope.relateToOriginal=!1);$scope.relateToOriginal=!0}if("recursive"===type){if($scope.recursive)return void($scope.recursive=!1);$scope.recursive=!0}},userService.getCurrentUser().then(function(userData){$scope.treeModel.hideHeader=userData.startContentIds.length>0&&-1==userData.startContentIds.indexOf(-1)}),$scope.source=_.clone($scope.currentNode),$scope.closeDialog=function(){navigationService.hideDialog()},$scope.hideSearch=function(){$scope.searchInfo.showSearch=!1,$scope.searchInfo.searchFromId=null,$scope.searchInfo.searchFromName=null,$scope.searchInfo.results=[]},$scope.selectResult=function(evt,result){result.selected=!0!==result.selected,nodeSelectHandler({event:evt,node:result})},$scope.onSearchResults=function(results){$scope.searchInfo.results=results,$scope.searchInfo.showSearch=!0},$scope.copy=function(){$scope.busy=!0,$scope.error=!1,contentResource.copy({parentId:$scope.target.id,id:$scope.source.id,relateToOriginal:$scope.relateToOriginal,recursive:$scope.recursive}).then(function(path){$scope.error=!1,$scope.success=!0,$scope.busy=!1;var activeNode=appState.getTreeState("selectedNode");navigationService.syncTree({tree:"content",path:path,forceReload:!0,activate:!1}).then(function(args){if(activeNode){var activeNodePath=treeService.getPath(activeNode).join();navigationService.syncTree({tree:"content",path:activeNodePath,forceReload:!1,activate:!0})}})},function(err){$scope.success=!1,$scope.error=err,$scope.busy=!1})},$scope.onTreeInit=function(){$scope.dialogTreeApi.callbacks.treeLoaded(treeLoadedHandler),$scope.dialogTreeApi.callbacks.treeNodeSelect(nodeSelectHandler),$scope.dialogTreeApi.callbacks.treeNodeExpanded(nodeExpandedHandler)},$scope.selectListViewNode=function(node){node.selected=!0!==node.selected,nodeSelectHandler({node:node})},$scope.closeMiniListView=function(){$scope.miniListView=void 0}}),angular.module("umbraco").controller("Umbraco.Editors.Content.CreateController",contentCreateController),angular.module("umbraco").value("blueprintConfig",{skipSelect:!1,allowBlank:!0}),function(){angular.module("umbraco").controller("Umbraco.Editors.Content.CreateBlueprintController",function CreateBlueprintController($scope,contentResource,navigationService,localizationService,formHelper,contentEditingHelper){$scope.message={name:$scope.currentNode.name},localizationService.localize("blueprints_createBlueprintFrom",["<em>"+$scope.message.name+"</em>"]).then(function(localizedVal){$scope.title=localizedVal}),$scope.cancel=function(){navigationService.hideMenu()},$scope.create=function(){formHelper.submitForm({scope:$scope,formCtrl:this.blueprintForm})&&contentResource.createBlueprintFromContent($scope.currentNode.id,$scope.message.name).then(function(data){formHelper.resetForm({scope:$scope}),navigationService.hideMenu()},function(err){formHelper.resetForm({scope:$scope,hasErrors:!0}),contentEditingHelper.handleSaveError({err:err})})}})}(),angular.module("umbraco").controller("Umbraco.Editors.Content.DeleteController",ContentDeleteController),angular.module("umbraco").controller("Umbraco.Editors.Content.EditController",ContentEditController),angular.module("umbraco").controller("Umbraco.Editors.Content.EmptyRecycleBinController",ContentEmptyRecycleBinController),angular.module("umbraco").controller("Umbraco.Editors.Content.MoveController",function($scope,userService,eventsService,contentResource,navigationService,appState,treeService,localizationService,notificationsService){function treeLoadedHandler(args){$scope.source&&$scope.source.path&&$scope.dialogTreeApi.syncTree({path:$scope.source.path,activate:!1})}function nodeSelectHandler(args){args&&args.event&&(args.event.preventDefault(),args.event.stopPropagation()),eventsService.emit("editors.content.moveController.select",args),$scope.target&&($scope.target.selected=!1),$scope.target=args.node,$scope.target.selected=!0}function nodeExpandedHandler(args){args.node.metaData.isContainer&&function openMiniListView(node){$scope.miniListView=node}(args.node)}localizationService.localize("general_search").then(function(value){value+"..."}),$scope.dialogTreeApi={},$scope.busy=!1,$scope.searchInfo={searchFromId:null,searchFromName:null,showSearch:!1,results:[],selectedSearchResults:[]},$scope.treeModel={hideHeader:!1},userService.getCurrentUser().then(function(userData){$scope.treeModel.hideHeader=userData.startContentIds.length>0&&-1==userData.startContentIds.indexOf(-1)}),$scope.source=_.clone($scope.currentNode),$scope.hideSearch=function(){$scope.searchInfo.showSearch=!1,$scope.searchInfo.searchFromId=null,$scope.searchInfo.searchFromName=null,$scope.searchInfo.results=[]},$scope.selectResult=function(evt,result){result.selected=!0!==result.selected,nodeSelectHandler({event:evt,node:result})},$scope.onSearchResults=function(results){$scope.searchInfo.results=results,$scope.searchInfo.showSearch=!0},$scope.close=function(){navigationService.hideDialog()},$scope.move=function(){$scope.busy=!0,$scope.error=!1,contentResource.move({parentId:$scope.target.id,id:$scope.source.id}).then(function(path){$scope.error=!1,$scope.success=!0,$scope.busy=!1,treeService.removeNode($scope.currentNode);var activeNode=appState.getTreeState("selectedNode");navigationService.syncTree({tree:"content",path:path,forceReload:!0,activate:!1}).then(function(args){if(activeNode){var activeNodePath=treeService.getPath(activeNode).join();navigationService.syncTree({tree:"content",path:activeNodePath,forceReload:!1,activate:!0})}})},function(err){$scope.success=!1,$scope.error=err,$scope.busy=!1})},$scope.onTreeInit=function(){$scope.dialogTreeApi.callbacks.treeLoaded(treeLoadedHandler),$scope.dialogTreeApi.callbacks.treeNodeSelect(nodeSelectHandler),$scope.dialogTreeApi.callbacks.treeNodeExpanded(nodeExpandedHandler)},$scope.selectListViewNode=function(node){node.selected=!0!==node.selected,nodeSelectHandler({node:node})},$scope.closeMiniListView=function(){$scope.miniListView=void 0}}),function(){angular.module("umbraco").controller("Umbraco.Editors.Content.CreateNotifyController",function CreateNotifyController($scope,contentResource,navigationService,localizationService){var vm=this;vm.notifyOptions=[],vm.save=function save(notifyOptions){vm.saveState="busy",vm.saveError=!1,vm.saveSuccces=!1;var selectedString=[];notifyOptions.forEach(function(option){!0===option.checked&&option.notifyCode&&selectedString.push(option.notifyCode)}),contentResource.setNotifySettingsById($scope.currentNode.id,selectedString).then(function(){vm.saveState="success",vm.saveSuccces=!0},function(error){vm.saveState="error",vm.saveError=error})},vm.cancel=function cancel(){navigationService.hideMenu()},vm.notificationChanged=function notificationChanged(item){vm.canSave=!0},vm.message={name:$scope.currentNode.name},vm.labels={},function onInit(){vm.loading=!0,contentResource.getNotifySettingsById($scope.currentNode.id).then(function(options){vm.loading=!1,vm.notifyOptions=options}),localizationService.localize("notifications_editNotifications",[$scope.currentNode.name]).then(function(value){vm.labels.headline=value})}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.Content.ProtectController",function ContentProtectController($scope,$q,publicAccessResource,memberResource,memberGroupResource,navigationService,localizationService,editorService){var vm=this,id=$scope.currentNode.id;function next(){"group"===vm.type?(vm.loading=!0,memberGroupResource.getGroups().then(function(groups){vm.step=vm.type,vm.allGroups=groups,vm.hasGroups=groups.length>0,vm.loading=!1})):vm.step=vm.type}function pickPage(page){navigationService.allowHideDialog(!1),editorService.contentPicker({submit:function submit(model){page===vm.loginPage?vm.loginPage=model.selection[0]:vm.errorPage=model.selection[0],editorService.close(),navigationService.allowHideDialog(!0),$scope.dialog.confirmDiscardChanges=!0},close:function close(){editorService.close(),navigationService.allowHideDialog(!0)}})}vm.loading=!1,vm.buttonState="init",vm.isValid=function isValid(){return!!vm.type&&(!!vm.protectForm.$valid&&(!(!vm.loginPage||!vm.errorPage)&&("group"===vm.type?vm.groups&&vm.groups.length>0:"member"!==vm.type||vm.members&&vm.members.length>0)))},vm.next=next,vm.save=function save(){vm.buttonState="busy";var groups=_.map(vm.groups,function(group){return group.name}),usernames=_.map(vm.members,function(member){return member.username});publicAccessResource.updatePublicAccess(id,groups,usernames,vm.loginPage.id,vm.errorPage.id).then(function(){localizationService.localize("publicAccess_paIsProtected",[$scope.currentNode.name]).then(function(value){vm.success={message:value}}),navigationService.syncTree({tree:"content",path:$scope.currentNode.path,forceReload:!0}),$scope.dialog.confirmDiscardChanges=!0},function(error){vm.error=error,vm.buttonState="error"})},vm.close=function close(){navigationService.allowHideDialog(!0),navigationService.hideDialog()},vm.toggle=function toggle(group){group.selected=!group.selected,$scope.dialog.confirmDiscardChanges=!0},vm.pickLoginPage=function pickLoginPage(){pickPage(vm.loginPage)},vm.pickErrorPage=function pickErrorPage(){pickPage(vm.errorPage)},vm.pickGroup=function pickGroup(){navigationService.allowHideDialog(!1),editorService.memberGroupPicker({multiPicker:!0,submit:function submit(model){var selectedGroupIds=model.selectedMemberGroups?model.selectedMemberGroups:[model.selectedMemberGroup];_.each(selectedGroupIds,function(groupId){var group=_.find(vm.allGroups,function(g){return g.id===parseInt(groupId)});group&&!_.find(vm.groups,function(g){return g.id===group.id})&&vm.groups.push(group)}),editorService.close(),navigationService.allowHideDialog(!0),$scope.dialog.confirmDiscardChanges=!0},close:function close(){editorService.close(),navigationService.allowHideDialog(!0)}})},vm.removeGroup=function removeGroup(group){vm.groups=_.reject(vm.groups,function(g){return g.id===group.id}),$scope.dialog.confirmDiscardChanges=!0},vm.pickMember=function pickMember(){navigationService.allowHideDialog(!1),editorService.treePicker({multiPicker:!0,entityType:"Member",section:"member",treeAlias:"member",filter:function filter(i){return i.metaData.isContainer},filterCssClass:"not-allowed",submit:function submit(model){if(model.selection&&model.selection.length){var promises=[];_.each(model.selection,function(member){promises.push(memberResource.getByKey(member.key).then(function(newMember){_.find(vm.members,function(currentMember){return currentMember.username===newMember.username})||vm.members.push(newMember)}))}),editorService.close(),navigationService.allowHideDialog(!0),vm.loading=!0,$q.all(promises).then(function(){vm.loading=!1}),$scope.dialog.confirmDiscardChanges=!0}},close:function close(){editorService.close(),navigationService.allowHideDialog(!0)}})},vm.removeMember=function removeMember(member){vm.members=_.without(vm.members,member)},vm.removeProtection=function removeProtection(){vm.removing=!0},vm.removeProtectionConfirm=function removeProtectionConfirm(){vm.buttonState="busy",publicAccessResource.removePublicAccess(id).then(function(){localizationService.localize("publicAccess_paIsRemoved",[$scope.currentNode.name]).then(function(value){vm.success={message:value}}),navigationService.syncTree({tree:"content",path:$scope.currentNode.path,forceReload:!0})},function(error){vm.error=error,vm.buttonState="error"})},vm.type=null,vm.step=null,function onInit(){vm.loading=!0,publicAccessResource.getPublicAccess(id).then(function(publicAccess){vm.loading=!1,vm.loginPage=publicAccess.loginPage,vm.errorPage=publicAccess.errorPage,vm.groups=publicAccess.groups||[],vm.members=publicAccess.members||[],vm.canRemove=!0,vm.members.length?(vm.type="member",next()):vm.groups.length?(vm.type="group",next()):vm.canRemove=!1})}()})}(),angular.module("umbraco").controller("Umbraco.Editors.Content.RecycleBinController",ContentRecycleBinController),angular.module("umbraco").controller("Umbraco.Editors.Content.RestoreController",function($scope,relationResource,contentResource,entityResource,navigationService,appState,treeService,userService,localizationService){function nodeSelectHandler(args){args&&args.event&&(args.event.preventDefault(),args.event.stopPropagation()),$scope.target&&($scope.target.selected=!1),$scope.target=args.node,$scope.target.selected=!0}function nodeExpandedHandler(args){args.node.metaData.isContainer&&function openMiniListView(node){$scope.miniListView=node}(args.node)}$scope.source=_.clone($scope.currentNode),$scope.error=null,$scope.loading=!0,$scope.moving=!1,$scope.success=!1,$scope.dialogTreeApi={},$scope.searchInfo={showSearch:!1,results:[],selectedSearchResults:[]},$scope.treeModel={hideHeader:!1},userService.getCurrentUser().then(function(userData){$scope.treeModel.hideHeader=userData.startContentIds.length>0&&-1==userData.startContentIds.indexOf(-1)}),$scope.labels={},localizationService.localizeMany(["treeHeaders_content"]).then(function(data){$scope.labels.treeRoot=data[0]}),$scope.hideSearch=function(){$scope.searchInfo.showSearch=!1,$scope.searchInfo.results=[]},$scope.selectResult=function(evt,result){result.selected=!0!==result.selected,nodeSelectHandler({event:evt,node:result})},$scope.onSearchResults=function(results){$scope.searchInfo.results=results,$scope.searchInfo.showSearch=!0},$scope.onTreeInit=function(){$scope.dialogTreeApi.callbacks.treeNodeSelect(nodeSelectHandler),$scope.dialogTreeApi.callbacks.treeNodeExpanded(nodeExpandedHandler)},$scope.selectListViewNode=function(node){node.selected=!0!==node.selected,nodeSelectHandler({node:node})},$scope.closeMiniListView=function(){$scope.miniListView=void 0},relationResource.getByChildId($scope.source.id,"relateParentDocumentOnDelete").then(function(data){$scope.loading=!1,data.length?($scope.relation=data[0],-1===$scope.relation.parentId?$scope.target={id:-1,name:$scope.labels.treeRoot}:($scope.loading=!0,entityResource.getById($scope.relation.parentId,"Document").then(function(data){$scope.loading=!1,$scope.target=data,-1!==$scope.target.path.indexOf("-20")&&($scope.moving=!0,$scope.target=null)},function(err){$scope.loading=!1,$scope.error=err}))):$scope.moving=!0},function(err){$scope.loading=!1,$scope.error=err}),$scope.restore=function(){$scope.loading=!0,contentResource.move({parentId:$scope.target.id,id:$scope.source.id}).then(function(path){$scope.loading=!1,$scope.success=!0,treeService.removeNode($scope.currentNode);var activeNode=appState.getTreeState("selectedNode");navigationService.syncTree({tree:"content",path:path,forceReload:!0,activate:!1}).then(function(args){if(activeNode){var activeNodePath=treeService.getPath(activeNode).join();navigationService.syncTree({tree:"content",path:activeNodePath,forceReload:!1,activate:!0})}})},function(err){$scope.loading=!1,$scope.error=err})},$scope.close=function(){navigationService.hideDialog()}}),function(){angular.module("umbraco").controller("Umbraco.Editors.Content.RightsController",function ContentRightsController($scope,$timeout,contentResource,localizationService,angularHelper,navigationService,overlayService){var currentForm,vm=this;function initData(userGroups){vm.selectedUserGroups=[],vm.availableUserGroups=userGroups,vm.availableUserGroups.forEach(function(group){group.permissions&&assignGroupPermissions(group)})}function setViewSate(state){vm.viewState=state}function assignGroupPermissions(group){group.allowedPermissions=[],Object.values(group.permissions).forEach(function(permissionGroup){permissionGroup.forEach(function(permission){permission.checked&&group.allowedPermissions.push(permission)})}),group.selected||(group.selected=!0,vm.selectedUserGroups.push(group),vm.removedUserGroups=_.reject(vm.removedUserGroups,function(g){return g.id==group.id}))}function formatSaveModel(permissionsSave,groupCollection){groupCollection.forEach(function(g){permissionsSave[g.id]=[],g.allowedPermissions.forEach(function(p){permissionsSave[g.id].push(p.permissionCode)})})}vm.availableUserGroups=[],vm.selectedUserGroups=[],vm.removedUserGroups=[],vm.viewState="manageGroups",vm.labels={},vm.setViewSate=setViewSate,vm.editPermissions=function editPermissions(group){vm.selectedUserGroup=group,vm.selectedUserGroup.permissions||(vm.selectedUserGroup.permissions=vm.selectedUserGroup.defaultPermissions),localizationService.localize("defaultdialogs_permissionsSetForGroup",[$scope.currentNode.name,vm.selectedUserGroup.name]).then(function(value){vm.labels.permissionsSetForGroup=value}),setViewSate("managePermissions"),vm.groupsDropdownOpen=!1},vm.setPermissions=function setPermissions(group){assignGroupPermissions(group),setViewSate("manageGroups"),$scope.dialog.confirmDiscardChanges=!0},vm.save=function save(){vm.saveState="busy",vm.saveError=!1,vm.saveSuccces=!1;var permissionsSave={};formatSaveModel(permissionsSave,vm.selectedUserGroups),formatSaveModel(permissionsSave,vm.removedUserGroups);var saveModel={contentId:$scope.currentNode.id,permissions:permissionsSave};contentResource.savePermissions(saveModel).then(function(userGroups){initData(userGroups),$timeout(function(){currentForm&&(currentForm.$dirty=!1)}),$scope.dialog.confirmDiscardChanges=!1,vm.saveState="success",vm.saveSuccces=!0},function(error){vm.saveState="error",vm.saveError=error})},vm.removePermissions=function removePermissions(index){var group=vm.selectedUserGroups[index];group.selected=!1,group.permissions=[],group.allowedPermissions=[],vm.selectedUserGroups.splice(index,1),vm.removedUserGroups.push(group)},vm.cancelManagePermissions=function cancelManagePermissions(){setViewSate("manageGroups")},vm.closeDialog=function closeDialog(){currentForm&&currentForm.$dirty?localizationService.localizeMany(["prompt_unsavedChanges","prompt_unsavedChangesWarning","prompt_discardChanges","prompt_stay"]).then(function(values){var overlay={view:"default",title:values[0],content:values[1],disableBackdropClick:!0,disableEscKey:!0,submitButtonLabel:values[2],closeButtonLabel:values[3],submit:function submit(){overlayService.close(),navigationService.hideDialog()},close:function close(){overlayService.close()}};overlayService.open(overlay)}):navigationService.hideDialog()},vm.discardChanges=function discardChanges(){navigationService.hideDialog()},function onInit(){vm.loading=!0,contentResource.getDetailedPermissions($scope.currentNode.id).then(function(userGroups){initData(userGroups),vm.loading=!1,currentForm=angularHelper.getCurrentForm($scope)})}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.Content.SortController",function ContentSortController($scope,$filter,$routeParams,contentResource,navigationService,eventsService){var vm=this,id=$scope.currentNode.id;vm.loading=!1,vm.children=[],vm.saveButtonState="init",vm.sortOrder={},vm.sortableOptions={axis:"y",containment:"parent",distance:10,tolerance:"pointer",opacity:.7,scroll:!0,cursor:"move",helper:function fixSortableHelper(e,ui){return ui.children().each(function(){$(this).width($(this).width())}),ui},update:function update(){vm.sortOrder.column="",vm.sortOrder.reverse=!1}},vm.save=function save(){vm.saveButtonState="busy";var args={parentId:id,sortedIds:_.map(vm.children,function(child){return child.id})};contentResource.sort(args).then(function(){navigationService.syncTree({tree:"content",path:$scope.currentNode.path,forceReload:!0}).then(function(){return navigationService.reloadNode($scope.currentNode)}),eventsService.emit("sortCompleted",{id:id}),vm.saveButtonState="success"},function(error){vm.error=error,vm.saveButtonState="error"})},vm.sort=function sort(column){vm.sortOrder.column===column?vm.sortOrder.reverse=!vm.sortOrder.reverse:(vm.sortOrder.column=column,vm.sortOrder.reverse=!1),vm.children=$filter("orderBy")(vm.children,vm.sortOrder.column,vm.sortOrder.reverse)},vm.close=function close(){navigationService.hideDialog()},function onInit(){vm.loading=!0,contentResource.getChildren(id,{cultureName:$routeParams.cculture?$routeParams.cculture:$routeParams.mculture}).then(function(data){vm.children=data.items,vm.loading=!1})}()})}(),function(){angular.module("umbraco").controller("Umbraco.Overlays.PublishController",function PublishController($scope,localizationService,contentEditingHelper){var vm=this;function canPublish(){var hasSomethingToPublish=!1;return vm.variants.forEach(function(variant){if(!1===variant.publish&&function notPublishedMandatoryFilter(variant){return"Published"!==variant.state&&"PublishedPendingChanges"!==variant.state&&!0===variant.isMandatory}(variant))return!1;!0===variant.publish&&(hasSomethingToPublish=!0)}),hasSomethingToPublish}function publishableVariantFilter(variant){return variant.active||variant.isDirty||"Draft"===variant.state||"PublishedPendingChanges"===variant.state}function notPublishableButMandatoryFilter(variant){return!publishableVariantFilter(variant)&&"Published"!==variant.state&&!0===variant.isMandatory}vm.loading=!0,vm.isNew=!0,vm.changeSelection=function changeSelection(variant){$scope.model.disableSubmitButton=!canPublish(),variant.save=variant.publish},function onInit(){vm.variants=$scope.model.variants,vm.isNew=vm.variants.some(function(variant){return"NotCreated"===variant.state}),vm.variants.forEach(function(variant){variant.publish=variant.save=!1,variant.isMandatory=function isMandatoryFilter(variant){return variant.language&&!0===variant.language.isMandatory&&null==variant.segment}(variant),!0===vm.isNew&&function hasAnyDataFilter(variant){return null!=variant.name&&variant.name.length>0||!0===variant.isDirty||(variant.tabs.forEach(function(tab){tab.properties.forEach(function(property){if(null!=property.value&&property.value.length>0)return!0})}),!1)}(variant)&&(variant.save=!0)}),vm.availableVariants=vm.variants.filter(publishableVariantFilter),vm.missingMandatoryVariants=vm.variants.filter(notPublishableButMandatoryFilter),vm.availableVariants.forEach(function(v){v.active&&(v.save=v.publish=!0)}),0!==vm.availableVariants.length&&(vm.availableVariants=contentEditingHelper.getSortedVariantsAndSegments(vm.availableVariants)),$scope.model.disableSubmitButton=!canPublish();var localizeKey=vm.missingMandatoryVariants.length>0?"content_notReadyToPublish":$scope.model.title?"":"content_readyToPublish";localizeKey?localizationService.localize(localizeKey).then(function(value){$scope.model.title=value,vm.loading=!1}):vm.loading=!1}(),$scope.$on("$destroy",function(){vm.variants.forEach(function(variant){variant.publish=variant.save=!1})})})}(),function(){angular.module("umbraco").controller("Umbraco.Overlays.PublishDescendantsController",function PublishDescendantsController($scope,localizationService,contentEditingHelper){var vm=this;function canPublish(){var selected=[];return vm.variants.forEach(function(variant){var published=!("NotCreated"===variant.state||"Draft"===variant.state);if(null==variant.segment&&variant.language&&variant.language.isMandatory&&!published&&!variant.publish)return!1;variant.publish&&selected.push(variant.publish)}),selected.length>0}vm.includeUnpublished=$scope.model.includeUnpublished||!1,vm.changeSelection=function changeSelection(variant){$scope.model.disableSubmitButton=!canPublish(),variant.save=variant.publish},vm.toggleIncludeUnpublished=function toggleIncludeUnpublished(){vm.includeUnpublished=!vm.includeUnpublished,$scope.model.includeUnpublished=vm.includeUnpublished},$scope.$on("$destroy",function(){vm.variants.forEach(function(variant){variant.publish=variant.save=!1})}),function onInit(){if(vm.variants=$scope.model.variants,vm.displayVariants=vm.variants.slice(0),vm.labels={},$scope.model.title||localizationService.localize("buttons_publishDescendants").then(function(value){$scope.model.title=value}),vm.labels.includeUnpublished||localizationService.localize("content_includeUnpublished").then(function(value){vm.labels.includeUnpublished=value}),vm.labels.includeUnpublished||localizationService.localize("content_includeUnpublished").then(function(value){vm.labels.includeUnpublished=value}),vm.variants.forEach(function(variant){variant.isMandatory=function isMandatoryFilter(variant){return variant.language&&!0===variant.language.isMandatory&&null==variant.segment}(variant)}),vm.variants.length>1){vm.displayVariants=contentEditingHelper.getSortedVariantsAndSegments(vm.displayVariants);var active=vm.variants.find(function(v){return v.active});active&&(active.publish=active.save=!0),$scope.model.disableSubmitButton=!canPublish()}else vm.labels.help={key:"content_publishDescendantsHelp",tokens:[vm.variants[0].name]}}()})}(),function(){angular.module("umbraco").controller("Umbraco.Overlays.SaveContentController",function SaveContentController($scope,localizationService,contentEditingHelper){var vm=this;function saveableVariantFilter(variant){return variant.active||variant.isDirty}vm.loading=!0,vm.hasPristineVariants=!1,vm.isNew=!0,vm.changeSelection=function changeSelection(variant){var firstSelected=_.find(vm.variants,function(v){return v.save});$scope.model.disableSubmitButton=!firstSelected},function onInit(){if(vm.variants=$scope.model.variants,vm.availableVariants=vm.variants.filter(saveableVariantFilter),vm.isNew=vm.variants.some(function(variant){return"NotCreated"===variant.state}),$scope.model.title||localizationService.localize("content_readyToSave").then(function(value){$scope.model.title=value}),vm.variants.forEach(function(variant){variant.save=variant.publish=!1,variant.isMandatory=function isMandatoryFilter(variant){return variant.language&&!0===variant.language.isMandatory&&null==variant.segment}(variant),vm.isNew&&function hasAnyData(variant){if(null==variant.name||0===variant.name.length)return!1;var result=null!=variant.isDirty;if(result)return!0;for(var t=0;t<variant.tabs.length;t++)for(var p=0;p<variant.tabs[t].properties.length;p++){var property=variant.tabs[t].properties[p];if(null!=property.culture&&(result=result||null!=property.value&&property.value.length>0))return!0}return result}(variant)&&(variant.save=!0)}),0!==vm.variants.length){var active=vm.variants.find(function(v){return v.active});active&&(active.save=!0),vm.availableVariants=contentEditingHelper.getSortedVariantsAndSegments(vm.availableVariants)}else $scope.model.disableSubmitButton=!0;vm.loading=!1}(),$scope.$on("$destroy",function(){vm.variants.forEach(function(variant){variant.save=!1})})})}(),function(){angular.module("umbraco").controller("Umbraco.Overlays.ScheduleContentController",function ScheduleContentController($scope,$timeout,localizationService,dateHelper,userService,contentEditingHelper){var vm=this;vm.datePickerSetup=function datePickerSetup(variant,type,datePickerInstance){"publish"===type?variant.releaseDatePickerInstance=datePickerInstance:"unpublish"===type&&(variant.expireDatePickerInstance=datePickerInstance),$scope.model.disableSubmitButton=!canSchedule()},vm.datePickerChange=function datePickerChange(variant,dateStr,type){"publish"===type?function setPublishDate(variant,date){if(date){var serverTime=dateHelper.convertToServerStringTime(moment(date),Umbraco.Sys.ServerVariables.application.serverTimeOffset);variant.releaseDate=serverTime,formatDatesToLocal(variant),variant.expireDatePickerInstance.set("minDate",moment(variant.releaseDate).format("YYYY-MM-DD HH:mm"))}}(variant,dateStr):"unpublish"===type&&function setUnpublishDate(variant,date){if(date){var serverTime=dateHelper.convertToServerStringTime(moment(date),Umbraco.Sys.ServerVariables.application.serverTimeOffset);variant.expireDate=serverTime,formatDatesToLocal(variant),variant.releaseDatePickerInstance.set("maxDate",moment(variant.expireDate).format("YYYY-MM-DD HH:mm"))}}(variant,dateStr),$scope.model.disableSubmitButton=!canSchedule()},vm.datePickerShow=function datePickerShow(variant,type){var activeDatePickerInstance;"publish"===type?(variant.releaseDatePickerOpen=!0,activeDatePickerInstance=variant.releaseDatePickerInstance):"unpublish"===type&&(variant.expireDatePickerOpen=!0,activeDatePickerInstance=variant.expireDatePickerInstance),activeDatePickerInstance&&!activeDatePickerInstance.hourElement.hasAttribute("overlay-submit-on-enter")&&activeDatePickerInstance.hourElement.setAttribute("overlay-submit-on-enter","false"),activeDatePickerInstance&&!activeDatePickerInstance.minuteElement.hasAttribute("overlay-submit-on-enter")&&activeDatePickerInstance.minuteElement.setAttribute("overlay-submit-on-enter","false"),checkForBackdropClick(),$scope.model.disableSubmitButton=!canSchedule()},vm.datePickerClose=function datePickerClose(variant,type){$timeout(function(){"publish"===type?variant.releaseDatePickerOpen=!1:"unpublish"===type&&(variant.expireDatePickerOpen=!1),checkForBackdropClick(),$scope.model.disableSubmitButton=!canSchedule()},200)},vm.clearPublishDate=function clearPublishDate(variant){if(variant&&variant.releaseDate){variant.releaseDate=null;var now=new Date,nowFormatted=moment(now).format("YYYY-MM-DD HH:mm");variant.expireDatePickerInstance.set("minDate",nowFormatted)}$scope.model.disableSubmitButton=!canSchedule()},vm.clearUnpublishDate=function clearUnpublishDate(variant){variant&&variant.expireDate&&(variant.expireDate=null,variant.releaseDatePickerInstance.set("maxDate",null)),$scope.model.disableSubmitButton=!canSchedule()},vm.dirtyVariantFilter=dirtyVariantFilter,vm.changeSelection=function changeSelection(variant){$scope.model.disableSubmitButton=!canSchedule(),variant.save=variant.save},vm.firstSelectedDates={},vm.currentUser=null;var origDates=[];function checkForBackdropClick(){var open=vm.variants.find(function(variant){return variant.releaseDatePickerOpen||variant.expireDatePickerOpen});$scope.model.disableBackdropClick=!!open}function formatDatesToLocal(variant){variant&&variant.releaseDate&&(variant.releaseDateFormatted=dateHelper.getLocalDate(variant.releaseDate,vm.currentUser.locale,"MMM Do YYYY, HH:mm")),variant&&variant.expireDate&&(variant.expireDateFormatted=dateHelper.getLocalDate(variant.expireDate,vm.currentUser.locale,"MMM Do YYYY, HH:mm"))}function dirtyVariantFilter(variant){return variant.active||variant.isDirty||"Draft"===variant.state||"PublishedPendingChanges"===variant.state||"NotCreated"===variant.state}function canSchedule(){for(var selectedWithDates=[],i=0;i<vm.variants.length;i++){var variant=vm.variants[i];if(origDates[i].releaseDate&&origDates[i].releaseDate!==variant.releaseDate||origDates[i].expireDate&&origDates[i].expireDate!==variant.expireDate)return!0;var isMandatory=null==variant.segment&&variant.language&&variant.language.isMandatory,publishable=dirtyVariantFilter(variant),published=!("NotCreated"===variant.state||"Draft"===variant.state),isScheduledPublished=variant.releaseDate;if(isMandatory&&!published&&!isScheduledPublished&&(!publishable||!variant.save))return!1;variant.save&&(variant.releaseDate||variant.expireDate)&&selectedWithDates.push(variant.save)}return selectedWithDates.length>0}!function onInit(){vm.variants=$scope.model.variants,vm.displayVariants=vm.variants.slice(0),$scope.model.title||localizationService.localize("general_scheduledPublishing").then(function(value){$scope.model.title=value}),vm.variants.forEach(function(variant){origDates.push({releaseDate:variant.releaseDate,expireDate:variant.expireDate}),variant.isMandatory=function isMandatoryFilter(variant){return variant.language&&!0===variant.language.isMandatory&&null==variant.segment}(variant)}),vm.variants.length>1&&(vm.displayVariants=contentEditingHelper.getSortedVariantsAndSegments(vm.displayVariants),vm.variants.forEach(function(v){v.active&&(v.save=!0)}),$scope.model.disableSubmitButton=!canSchedule()),userService.getCurrentUser().then(function(currentUser){vm.currentUser=currentUser,vm.variants.forEach(function(variant){var now=new Date,nowFormatted=moment(now).format("YYYY-MM-DD HH:mm"),datePickerConfig={enableTime:!0,dateFormat:"Y-m-d H:i",time_24hr:!0,minDate:nowFormatted,defaultDate:nowFormatted};variant.datePickerConfig=datePickerConfig,(variant.releaseDate||variant.expireDate)&&formatDatesToLocal(variant)})})}(),$scope.$on("$destroy",function(){vm.variants.forEach(function(variant){variant.save=!1,delete variant.releaseDateFormatted,delete variant.expireDateFormatted,delete variant.datePickerConfig,delete variant.releaseDatePickerInstance,delete variant.expireDatePickerInstance,delete variant.releaseDatePickerOpen,delete variant.expireDatePickerOpen})})})}(),function(){angular.module("umbraco").controller("Umbraco.Overlays.SendToPublishController",function SendToPublishController($scope,localizationService,contentEditingHelper){var vm=this;function publishableVariantFilter(variant){return variant.active||variant.isDirty||"Draft"===variant.state||"PublishedPendingChanges"===variant.state}vm.loading=!0,vm.changeSelection=function changeSelection(){var firstSelected=vm.variants.find(function(v){return v.save});$scope.model.disableSubmitButton=!firstSelected},$scope.$on("$destroy",function(){vm.variants.forEach(function(variant){variant.save=!1})}),function onInit(){vm.variants=$scope.model.variants,$scope.model.title||localizationService.localize("content_sendForApproval").then(function(value){$scope.model.title=value}),vm.variants.forEach(function(variant){variant.isMandatory=function isMandatoryFilter(variant){return variant.language&&!0===variant.language.isMandatory&&null==variant.segment}(variant)}),vm.availableVariants=vm.variants.filter(publishableVariantFilter),0!==vm.availableVariants.length?(vm.availableVariants=contentEditingHelper.getSortedVariantsAndSegments(vm.availableVariants),vm.availableVariants.forEach(function(v){v.active&&(v.save=!0)})):$scope.model.disableSubmitButton=!0,vm.loading=!1}()})}(),function(){angular.module("umbraco").controller("Umbraco.Overlays.UnpublishController",function UnpublishController($scope,localizationService,contentEditingHelper){var vm=this,autoSelectedVariants=[];function changeSelection(selectedVariant){selectedVariant.save&&null==selectedVariant.segment&&selectedVariant.language&&selectedVariant.language.isMandatory&&(vm.variants.forEach(function(variant){variant.save||(autoSelectedVariants.push(variant),variant.save=!0),variant.disabled=!0}),selectedVariant.disabled=!1),!selectedVariant.save&&null==selectedVariant.segment&&selectedVariant.language&&selectedVariant.language.isMandatory&&(vm.variants.forEach(function(variant){autoSelectedVariants.find(function(x){return x.culture===variant.culture})&&(variant.save=!1),variant.disabled=!1}),autoSelectedVariants=[]);var firstSelected=vm.variants.find(function(v){return v.save});$scope.model.disableSubmitButton=!firstSelected}function publishedVariantFilter(variant){return"Published"===variant.state||"PublishedPendingChanges"===variant.state}vm.changeSelection=changeSelection,$scope.$on("$destroy",function(){vm.variants.forEach(function(variant){variant.save=variant.disabled=!1})}),function onInit(){if(vm.variants=$scope.model.variants,vm.unpublishableVariants=vm.variants.filter(publishedVariantFilter),$scope.model.title||localizationService.localize("content_unpublish").then(function(value){$scope.model.title=value}),vm.variants.forEach(function(variant){variant.isMandatory=function isMandatoryFilter(variant){return variant.language&&!0===variant.language.isMandatory&&null==variant.segment}(variant)}),1!==vm.variants.length){vm.unpublishableVariants=contentEditingHelper.getSortedVariantsAndSegments(vm.unpublishableVariants);var active=vm.variants.find(function(v){return v.active});active&&publishedVariantFilter(active)&&(active.save=!0),changeSelection(active)}}()})}(),angular.module("umbraco").controller("Umbraco.Editors.ContentBlueprint.CreateController",ContentBlueprintCreateController),angular.module("umbraco").controller("Umbraco.Editors.ContentBlueprint.DeleteController",ContentBlueprintDeleteController),angular.module("umbraco").controller("Umbraco.Editors.ContentBlueprint.EditController",ContentBlueprintEditController),function(){angular.module("umbraco").controller("Umbraco.Dashboard.RedirectUrlsController",function RedirectUrlsController($scope,$q,redirectUrlsResource,notificationsService,localizationService,eventsService,overlayService){var vm=this,canceler=null;function activate(){vm.checkEnabled().then(function(){vm.search()})}function search(){vm.dashboard.loading=!0;var searchTerm=vm.dashboard.searchTerm;void 0===searchTerm&&(searchTerm=""),redirectUrlsResource.searchRedirectUrls(searchTerm,vm.pagination.pageIndex,vm.pagination.pageSize).then(function(response){vm.redirectUrls=response.searchResults,vm.pagination.pageIndex=response.currentPage,vm.pagination.pageNumber=response.currentPage+1,vm.pagination.totalPages=response.pageCount,vm.dashboard.loading=!1})}vm.dashboard={searchTerm:"",loading:!1,urlTrackerDisabled:!1,userIsAdmin:!1},vm.pagination={pageIndex:0,pageNumber:1,totalPages:1,pageSize:20},vm.goToPage=function goToPage(pageNumber){vm.pagination.pageIndex=pageNumber-1,vm.pagination.pageNumber=pageNumber,vm.search()},vm.search=search,vm.removeRedirect=function removeRedirect(redirect,event){var dialog={view:"views/dashboard/content/overlays/delete.html",redirect:redirect,submitButtonLabelKey:"contentTypeEditor_yesDelete",submitButtonStyle:"danger",submit:function submit(model){!function performDelete(redirect){redirect.deleteButtonState="busy",redirectUrlsResource.deleteRedirectUrl(redirect.redirectId).then(function(){var args={redirect:redirect};eventsService.emit("editors.redirects.redirectDeleted",args);var index=vm.redirectUrls.indexOf(redirect);vm.redirectUrls.splice(index,1),localizationService.localize("redirectUrls_redirectRemoved").then(function(value){notificationsService.success(value)}),0===vm.redirectUrls.length&&vm.pagination.totalPages>1&&(vm.pagination.pageIndex>0&&(vm.pagination.pageIndex=vm.pagination.pageIndex-1,vm.pagination.pageNumber=vm.pagination.pageNumber-1),search())},function(error){redirect.deleteButtonState="error",localizationService.localize("redirectUrls_redirectRemoveError").then(function(value){notificationsService.error(value)})})}(model.redirect),overlayService.close()},close:function close(){overlayService.close()}};localizationService.localize("general_delete").then(function(value){dialog.title=value,overlayService.open(dialog)}),event.preventDefault(),event.stopPropagation()},vm.disableUrlTracker=function disableUrlTracker(event){var dialog={view:"views/dashboard/content/overlays/disable.html",submitButtonLabel:"Disable",submitButtonLabelKey:"actions_disable",submitButtonStyle:"danger",submit:function submit(model){!function performDisable(){redirectUrlsResource.toggleUrlTracker(!0).then(function(){activate(),localizationService.localize("redirectUrls_disabledConfirm").then(function(value){notificationsService.success(value)})},function(error){localizationService.localize("redirectUrls_disableError").then(function(value){notificationsService.warning(value)})})}(),overlayService.close()},close:function close(){overlayService.close()}};localizationService.localize("redirectUrls_disableUrlTracker").then(function(value){dialog.title=value,overlayService.open(dialog)}),event.preventDefault(),event.stopPropagation()},vm.enableUrlTracker=function enableUrlTracker(){redirectUrlsResource.toggleUrlTracker(!1).then(function(){activate(),localizationService.localize("redirectUrls_enabledConfirm").then(function(value){notificationsService.success(value)})},function(error){localizationService.localize("redirectUrls_enableError").then(function(value){notificationsService.warning(value)})})},vm.filter=function filter(){vm.dashboard.loading=!0,filterDebounced()},vm.checkEnabled=function checkEnabled(){return vm.dashboard.loading=!0,redirectUrlsResource.getEnableState().then(function(response){vm.dashboard.urlTrackerDisabled=!0!==response.enabled,vm.dashboard.userIsAdmin=response.userIsAdmin,vm.dashboard.loading=!1})};var filterDebounced=_.debounce(function(e){$scope.$apply(function(){canceler?(canceler.resolve(),canceler=$q.defer()):canceler=$q.defer(),vm.search()})},200);activate()})}(),angular.module("umbraco").controller("Umbraco.Dashboard.StartupVideosController",startUpVideosDashboardController),angular.module("umbraco").controller("Umbraco.Dashboard.StartUpDynamicContentController",startUpDynamicContentController),angular.module("umbraco").controller("Umbraco.Dashboard.StartupLatestEditsController",startupLatestEditsController),angular.module("umbraco").controller("Umbraco.Dashboard.MediaFolderBrowserDashboardController",MediaFolderBrowserDashboardController),angular.module("umbraco").controller("Umbraco.Dashboard.ExamineManagementController",ExamineManagementController),function(){angular.module("umbraco").controller("Umbraco.Dashboard.HealthCheckController",function HealthCheckController(healthCheckResource){var SUCCESS=0,WARNING=1,ERROR=2,INFO=3,vm=this;function setGroupGlobalResultType(group){var totalSuccess=0,totalError=0,totalWarning=0,totalInfo=0;Utilities.forEach(group.checks,function(check){check.status&&check.status.forEach(function(status){switch(status.resultType){case SUCCESS:case"Success":totalSuccess+=1;break;case WARNING:case"Warning":totalWarning+=1;break;case ERROR:case"Error":totalError+=1;break;case INFO:case"Info":totalInfo+=1}})}),group.totalSuccess=totalSuccess,group.totalError=totalError,group.totalWarning=totalWarning,group.totalInfo=totalInfo}function checkAllInGroup(group,checks){group.checkCounter=0,group.loading=!0,checks&&checks.forEach(function(check){check.loading=!0,healthCheckResource.getStatus(check.id).then(function(response){check.status=response,group.checkCounter=group.checkCounter+1,check.loading=!1,group.checkCounter===checks.length&&(setGroupGlobalResultType(group),group.loading=!1)})})}vm.viewState="list",vm.groups=[],vm.selectedGroup={},vm.getStatus=function getStatus(check){check.loading=!0,check.status=null,healthCheckResource.getStatus(check.id).then(function(response){check.loading=!1,check.status=response})},vm.executeAction=function executeAction(check,index,action){check.loading=!0,healthCheckResource.executeAction(action).then(function(response){check.status[index]=response,check.loading=!1})},vm.checkAllGroups=function checkAllGroups(groups){for(var i=0;i<groups.length;i++){var group=groups[i];checkAllInGroup(group,group.checks)}vm.groups=groups},vm.checkAllInGroup=checkAllInGroup,vm.openGroup=function openGroup(group){vm.selectedGroup=group,vm.viewState="details"},vm.setViewState=function setViewState(state){if(vm.viewState=state,"list"===state)for(var i=0;i<vm.groups.length;i++){var group=vm.groups[i];setGroupGlobalResultType(group)}},vm.parseRegex=function parseRegex(regexAsString){return new RegExp(regexAsString)},healthCheckResource.getAllChecks().then(function(response){vm.groups=response})})}(),angular.module("umbraco").controller("Umbraco.Dashboard.ModelsBuilderManagementController",modelsBuilderManagementController),angular.module("umbraco").controller("Umbraco.Dashboard.ProfilerController",ProfilerController),angular.module("umbraco").controller("Umbraco.Dashboard.PublishedSnapshotCacheController",publishedSnapshotCacheController),angular.module("umbraco").controller("Umbraco.Dashboard.PublishedStatusController",publishedStatusController),angular.module("umbraco").controller("Umbraco.Editors.DataType.CreateController",DataTypeCreateController),angular.module("umbraco").controller("Umbraco.Editors.DataType.DeleteController",DataTypeDeleteController),angular.module("umbraco").controller("Umbraco.Editors.DataType.EditController",DataTypeEditController),angular.module("umbraco").controller("Umbraco.Editors.DataType.MoveController",function($scope,dataTypeResource,treeService,navigationService,notificationsService,appState,eventsService){function nodeSelectHandler(args){args.event.preventDefault(),args.event.stopPropagation(),$scope.target&&($scope.target.selected=!1),$scope.target=args.node,$scope.target.selected=!0}$scope.dialogTreeApi={},$scope.source=_.clone($scope.currentNode),$scope.move=function(){$scope.busy=!0,$scope.error=!1,dataTypeResource.move({parentId:$scope.target.id,id:$scope.source.id}).then(function(path){$scope.error=!1,$scope.success=!0,$scope.busy=!1,treeService.removeNode($scope.currentNode);var activeNode=appState.getTreeState("selectedNode");navigationService.syncTree({tree:"dataTypes",path:path,forceReload:!0,activate:!1}).then(function(args){if(activeNode){var activeNodePath=treeService.getPath(activeNode).join();navigationService.syncTree({tree:"dataTypes",path:activeNodePath,forceReload:!1,activate:!0})}}),eventsService.emit("app.refreshEditor")},function(err){$scope.success=!1,$scope.error=err,$scope.busy=!1})},$scope.onTreeInit=function(){$scope.dialogTreeApi.callbacks.treeNodeSelect(nodeSelectHandler)},$scope.close=function(){navigationService.hideDialog()}}),angular.module("umbraco").controller("Umbraco.Editors.DataType.InfoController",DataTypeInfoController),angular.module("umbraco").controller("Umbraco.Editors.Dictionary.CreateController",DictionaryCreateController),angular.module("umbraco").controller("Umbraco.Editors.Dictionary.DeleteController",DictionaryDeleteController),angular.module("umbraco").controller("Umbraco.Editors.Dictionary.EditController",DictionaryEditController),angular.module("umbraco").controller("Umbraco.Editors.Dictionary.ListController",DictionaryListController),angular.module("umbraco").controller("Umbraco.Editors.DocumentTypes.CopyController",function($scope,contentTypeResource,treeService,navigationService,notificationsService,appState,eventsService){function nodeSelectHandler(args){args.event.preventDefault(),args.event.stopPropagation(),$scope.target&&($scope.target.selected=!1),$scope.target=args.node,$scope.target.selected=!0}$scope.dialogTreeApi={},$scope.source=_.clone($scope.currentNode),$scope.copy=function(){$scope.busy=!0,$scope.error=!1,contentTypeResource.copy({parentId:$scope.target.id,id:$scope.source.id}).then(function(path){$scope.error=!1,$scope.success=!0,$scope.busy=!1;var activeNode=appState.getTreeState("selectedNode");navigationService.syncTree({tree:"documentTypes",path:path,forceReload:!0,activate:!1}).then(function(args){if(activeNode){var activeNodePath=treeService.getPath(activeNode).join();navigationService.syncTree({tree:"documentTypes",path:activeNodePath,forceReload:!1,activate:!0})}})},function(err){$scope.success=!1,$scope.error=err,$scope.busy=!1})},$scope.onTreeInit=function(){$scope.dialogTreeApi.callbacks.treeNodeSelect(nodeSelectHandler)},$scope.close=function(){navigationService.hideDialog()}}),angular.module("umbraco").controller("Umbraco.Editors.DocumentTypes.CreateController",DocumentTypesCreateController),angular.module("umbraco").controller("Umbraco.Editors.DocumentTypes.DeleteController",DocumentTypesDeleteController),function(){angular.module("umbraco").controller("Umbraco.Editors.DocumentTypes.EditController",function DocumentTypesEditController($scope,$routeParams,$q,contentTypeResource,editorState,contentEditingHelper,navigationService,iconHelper,contentTypeHelper,notificationsService,localizationService,overlayHelper,eventsService,angularHelper,editorService){var vm=this,evts=[],disableTemplates=Umbraco.Sys.ServerVariables.features.disabledFeatures.disableTemplates,documentTypeId=$routeParams.id,create=$routeParams.create,noTemplate=$routeParams.notemplate,isElement=$routeParams.iselement,allowVaryByCulture=$routeParams.culturevary,infiniteMode=$scope.model&&$scope.model.infiniteMode,documentTypeIcon="";function loadDocumentType(){vm.page.loading=!0,contentTypeResource.getById(documentTypeId).then(function(dt){init(dt),infiniteMode||syncTreeNode(vm.contentType,dt.path,!0),vm.page.loading=!1})}function loadButtons(){vm.page.navigation=vm.contentType.apps,!0===disableTemplates&&Utilities.forEach(vm.contentType.apps,function(app,index){"templates"===app.alias&&vm.page.navigation.splice(index,1)}),function initializeActiveNavigationPanel(){var initialViewSetFromRouteParams=!1,view=$routeParams.view;if(view)for(var i=0;i<vm.page.navigation.length;i++)if(0===vm.page.navigation[i].alias.localeCompare(view,void 0,{sensitivity:"accent"})){vm.page.navigation[i].active=!0,initialViewSetFromRouteParams=!0;break}!1===initialViewSetFromRouteParams&&(vm.page.navigation[0].active=!0)}()}function saveInternal(){return 0!==overlayHelper.getNumberOfOverlays()||0!==editorService.getNumberOfEditors()&&!infiniteMode?$q.reject():(vm.page.saveButtonState="busy",vm.contentType.allowedContentTypes=contentTypeHelper.createIdArray(vm.contentType.allowedContentTypes),function syncTemplateAlias(contentType){noTemplate||0!==contentType.id||(null!==contentType.defaultTemplate&&contentType.defaultTemplate.placeholder&&(contentType.defaultTemplate.name=contentType.name,contentType.defaultTemplate.alias=contentType.alias),contentType.allowedTemplates.forEach(function(allowedTemplate){allowedTemplate.placeholder&&(allowedTemplate.name=contentType.name,allowedTemplate.alias=contentType.alias)}))}(vm.contentType),contentEditingHelper.contentEditorPerformSave({saveMethod:contentTypeResource.save,scope:$scope,content:vm.contentType,infiniteMode:infiniteMode,rebindCallback:function rebindCallback(origContentType,savedContentType){vm.contentType.ModelState=savedContentType.ModelState,vm.contentType.id=savedContentType.id,vm.contentType.groups.forEach(function(group){if(group.name){for(var k=0;k<savedContentType.groups.length&&savedContentType.groups[k].name!=group.name;)k++;if(k!=savedContentType.groups.length){var savedGroup=savedContentType.groups[k];group.id||(group.id=savedGroup.id),group.properties.forEach(function(property){if(!property.id&&property.alias){for(k=0;k<savedGroup.properties.length&&savedGroup.properties[k].alias!=property.alias;)k++;if(k!=savedGroup.properties.length){var savedProperty=savedGroup.properties[k];property.id=savedProperty.id}else property.id=0}})}else group.id=0}})}}).then(function(data){vm.contentType.ModelState=data.ModelState,infiniteMode||syncTreeNode(vm.contentType,data.path);var args={documentType:vm.contentType};return eventsService.emit("editors.documentType.saved",args),documentTypeIcon!==vm.contentType.icon&&eventsService.emit("editors.tree.icon.changed",args),vm.page.saveButtonState="success",infiniteMode&&$scope.model.submit&&($scope.model.documentTypeAlias=vm.contentType.alias,$scope.model.documentTypeKey=vm.contentType.key,$scope.model.submit($scope.model)),$q.resolve(data)},function(err){return err?(vm.contentType.ModelState=err.data.ModelState,editorState.set($scope.content)):localizationService.localize("speechBubbles_validationFailedHeader").then(function(headerValue){localizationService.localize("speechBubbles_validationFailedMessage").then(function(msgValue){notificationsService.error(headerValue,msgValue)})}),vm.page.saveButtonState="error",$q.reject(err)}))}function init(contentType){noTemplate||0!==contentType.id||(contentType.defaultTemplate=contentTypeHelper.insertDefaultTemplatePlaceholder(contentType.defaultTemplate),contentType.allowedTemplates=contentTypeHelper.insertTemplatePlaceholder(contentType.allowedTemplates)),isElement&&(contentType.isElement=!0),allowVaryByCulture&&(contentType.allowCultureVariant=!0),function convertLegacyIcons(contentType){var contentTypeArray=[];contentTypeArray.push({icon:contentType.icon}),iconHelper.formatContentTypeIcons(contentTypeArray),contentType.icon=contentTypeArray[0].icon}(contentType),editorState.set(contentType),vm.contentType=contentType,documentTypeIcon=contentType.icon,loadButtons()}function syncTreeNode(dt,path,initialLoad){var args={tree:"documenttypes",path:path.split(","),forceReload:!0!==initialLoad};navigationService.syncTree(args).then(function(syncArgs){vm.currentNode=syncArgs.node})}vm.save=function save(){saveInternal().then(Utilities.noop,Utilities.noop)},vm.close=function close(){$scope.model.close&&$scope.model.close($scope.model)},vm.currentNode=null,vm.contentType={},vm.header={},vm.header.editorfor="content_documentType",vm.header.setPageTitle=!0,vm.labels={},vm.submitButtonKey="buttons_save",vm.generateModelsKey="buttons_saveAndGenerateModels",vm.page={},vm.page.loading=!1,vm.page.saveButtonState="init",vm.page.navigation=[],function onInit(){infiniteMode&&(documentTypeId=$scope.model.id,(create=$scope.model.create)&&!documentTypeId&&(documentTypeId=-1),noTemplate=$scope.model.notemplate||$scope.model.noTemplate,isElement=$scope.model.isElement,allowVaryByCulture=$scope.model.allowVaryByCulture,vm.submitButtonKey="buttons_saveAndClose",vm.generateModelsKey="buttons_generateModelsAndClose")}(),localizationService.localizeMany(["general_design","general_listView","general_rights","treeHeaders_templates","main_sections","shortcuts_navigateSections","shortcuts_addTab","shortcuts_addGroup","shortcuts_addProperty","defaultdialogs_selectEditor","shortcuts_editDataType","shortcuts_toggleListView","shortcuts_toggleAllowAsRoot","shortcuts_addChildNode","shortcuts_addTemplate","shortcuts_toggleAllowCultureVariants"]).then(function(values){vm.labels.design=values[0],vm.labels.listview=values[1],vm.labels.permissions=values[2],vm.labels.templates=values[3],vm.labels.sections=values[4],vm.labels.navigateSections=values[5],vm.labels.addTab=values[6],vm.labels.addGroup=values[7],vm.labels.addProperty=values[8],vm.labels.addEditor=values[9],vm.labels.editDataType=values[10],vm.labels.toggleListView=values[11],vm.labels.allowAsRoot=values[12],vm.labels.addChildNode=values[13],vm.labels.addTemplate=values[14],vm.labels.allowCultureVariants=values[15],vm.page.keyboardShortcutsOverview=[{name:vm.labels.sections,shortcuts:[{description:vm.labels.navigateSections,keys:[{key:"1"},{key:"4"}],keyRange:!0}]},{name:vm.labels.design,shortcuts:[{description:vm.labels.addTab,keys:[{key:"alt"},{key:"shift"},{key:"a"}]},{description:vm.labels.addGroup,keys:[{key:"alt"},{key:"shift"},{key:"g"}]},{description:vm.labels.addProperty,keys:[{key:"alt"},{key:"shift"},{key:"p"}]},{description:vm.labels.addEditor,keys:[{key:"alt"},{key:"shift"},{key:"e"}]},{description:vm.labels.editDataType,keys:[{key:"alt"},{key:"shift"},{key:"d"}]}]},{name:vm.labels.listview,shortcuts:[{description:vm.labels.toggleListView,keys:[{key:"alt"},{key:"shift"},{key:"l"}]}]},{name:vm.labels.permissions,shortcuts:[{description:vm.labels.allowAsRoot,keys:[{key:"alt"},{key:"shift"},{key:"r"}]},{description:vm.labels.addChildNode,keys:[{key:"alt"},{key:"shift"},{key:"c"}]},{description:vm.labels.allowCultureVariants,keys:[{key:"alt"},{key:"shift"},{key:"v"}]}]},{name:vm.labels.templates,shortcuts:[{description:vm.labels.addTemplate,keys:[{key:"alt"},{key:"shift"},{key:"t"}]}]}]}),contentTypeHelper.checkModelsBuilderStatus().then(function(result){vm.page.modelsBuilder=result,result&&(vm.page.defaultButton={alias:"save",hotKey:"ctrl+s",hotKeyWhenHidden:!0,labelKey:vm.submitButtonKey,letter:"S",handler:function handler(){vm.save()}},vm.page.subButtons=[{alias:"saveAndGenerateModels",hotKey:"ctrl+g",hotKeyWhenHidden:!0,labelKey:vm.generateModelsKey,letter:"G",handler:function handler(){vm.page.saveButtonState="busy",saveInternal().then(function(result){vm.page.saveButtonState="busy",localizationService.localize("modelsBuilder_buildingModels").then(function(headerValue){localizationService.localize("modelsBuilder_waitingMessage").then(function(msgValue){notificationsService.info(headerValue,msgValue)})}),contentTypeHelper.generateModels().then(function(result){result.lastError?(vm.page.saveButtonState="error",localizationService.localize("modelsBuilder_modelsExceptionInUlog").then(function(value){notificationsService.error(value)})):(contentTypeHelper.checkModelsBuilderStatus().then(function(statusResult){vm.page.modelsBuilder=statusResult}),vm.page.saveButtonState="init",localizationService.localize("modelsBuilder_modelsGenerated").then(function(value){notificationsService.success(value)}))},function(){vm.page.saveButtonState="error",localizationService.localize("modelsBuilder_modelsGeneratedError").then(function(value){notificationsService.error(value)})})})}}])}),create?(vm.page.loading=!0,contentTypeResource.getScaffold(documentTypeId).then(function(dt){init(dt),vm.page.loading=!1})):loadDocumentType(),evts.push(eventsService.on("app.refreshEditor",function(name,error){loadDocumentType()})),evts.push(eventsService.on("editors.documentType.reload",function(name,args){args&&args.node&&vm.contentType.id===args.node.id&&loadDocumentType()})),evts.push(eventsService.on("editors.documentType.saved",function(name,args){args.documentType.allowedTemplates.length>0&&navigationService.hasTree("templates").then(function(treeExists){treeExists&&navigationService.syncTree({tree:"templates",path:[],forceReload:!0}).then(function(syncArgs){navigationService.reloadNode(syncArgs.node)})})})),evts.push(eventsService.on("editors.groupsBuilder.changed",function(name,args){angularHelper.getCurrentForm($scope).$setDirty()})),$scope.$on("$destroy",function(){for(var e in evts)eventsService.unsubscribe(evts[e])}),$scope.$watch("vm.contentType.allowedContentTypes.length + vm.contentType.allowAsRoot + vm.contentType.allowCultureVariant + vm.contentType.isElement + vm.contentType.allowedTemplates.length + vm.contentType.isContainer + vm.contentType.compositeContentTypes.length",function(newVal,oldVal){void 0!==oldVal&&angularHelper.getCurrentForm($scope).$setDirty()})})}(),angular.module("umbraco").controller("Umbraco.Editors.DocumentTypes.ExportController",function($scope,contentTypeResource,navigationService){$scope.export=function(){contentTypeResource.export($scope.currentNode.id),navigationService.hideMenu()},$scope.cancel=function(){navigationService.hideDialog()}}),angular.module("umbraco").controller("Umbraco.Editors.DocumentTypes.ImportController",function($scope,contentTypeResource,navigationService,Upload,umbRequestHelper){var vm=this;vm.serverErrorMessage="",vm.state="upload",vm.model={},vm.uploadStatus="",$scope.handleFiles=function(files,event){files&&files.length>0&&$scope.upload(files[0])},$scope.upload=function(file){Upload.upload({url:umbRequestHelper.getApiUrl("contentTypeApiBaseUrl","Upload"),fields:{},file:file}).success(function(data,status,headers,config){data.notifications&&data.notifications.length>0?(vm.uploadStatus="error",vm.serverErrorMessage=data.notifications[0].message):(vm.uploadStatus="done",vm.model=data,vm.state="confirm")}).error(function(evt,status,headers,config){$scope.uploadStatus="error",404===status?$scope.serverErrorMessage="File not found":400==status?$scope.serverErrorMessage=evt.message:evt.InnerException?($scope.serverErrorMessage=evt.InnerException.ExceptionMessage,evt.InnerException.StackTrace&&evt.InnerException.StackTrace.indexOf("ValidateRequestEntityLength")>0&&($scope.serverErrorMessage="File too large to upload")):evt.Message&&($scope.serverErrorMessage=evt.Message)})},$scope.import=function(){contentTypeResource.import(vm.model.tempFileName),vm.state="done"},$scope.close=function(){navigationService.hideDialog()}}),angular.module("umbraco").controller("Umbraco.Editors.DocumentTypes.MoveController",function($scope,contentTypeResource,treeService,navigationService,notificationsService,appState,eventsService){function nodeSelectHandler(args){args.event.preventDefault(),args.event.stopPropagation(),$scope.target&&($scope.target.selected=!1),$scope.target=args.node,$scope.target.selected=!0}$scope.dialogTreeApi={},$scope.source=_.clone($scope.currentNode),$scope.move=function(){$scope.busy=!0,$scope.error=!1,contentTypeResource.move({parentId:$scope.target.id,id:$scope.source.id}).then(function(path){$scope.error=!1,$scope.success=!0,$scope.busy=!1,treeService.removeNode($scope.currentNode);var activeNode=appState.getTreeState("selectedNode");navigationService.syncTree({tree:"documentTypes",path:path,forceReload:!0,activate:!1}).then(function(args){if(activeNode){var activeNodePath=treeService.getPath(activeNode).join();navigationService.syncTree({tree:"documentTypes",path:activeNodePath,forceReload:!1,activate:!0})}}),eventsService.emit("app.refreshEditor")},function(err){$scope.success=!1,$scope.error=err,$scope.busy=!1})},$scope.onTreeInit=function(){$scope.dialogTreeApi.callbacks.treeNodeSelect(nodeSelectHandler)},$scope.close=function(){navigationService.hideDialog()}}),angular.module("umbraco").controller("Umbraco.Editors.ContentTypeContainers.RenameController",function($scope,$injector,navigationService,notificationsService,localizationService){var notificationHeader;localizationService.localize("renamecontainer_renamed").then(function(s){notificationHeader=s}),$scope.model={folderName:$scope.currentNode.name},$scope.renameContainer=function(resourceKey,treeName){$injector.get(resourceKey).renameContainer($scope.currentNode.id,$scope.model.folderName).then(function(){!function reportSuccessAndClose(treeName){var lastComma=$scope.currentNode.path.lastIndexOf(","),path=-1===lastComma?$scope.currentNode.path:$scope.currentNode.path.substring(0,lastComma-1);navigationService.syncTree({tree:treeName,path:path,forceReload:!0,activate:!0}),localizationService.localize("renamecontainer_folderWasRenamed",[$scope.currentNode.name,$scope.model.folderName]).then(function(msg){notificationsService.showNotification({type:0,header:notificationHeader,message:msg})}),navigationService.hideMenu()}(treeName)},function(err){$scope.error=err})}}),function(){angular.module("umbraco").controller("Umbraco.Editors.DocumentType.PermissionsController",function PermissionsController($scope,$timeout,contentTypeResource,iconHelper,contentTypeHelper,localizationService,overlayService){var vm=this;vm.contentTypes=[],vm.selectedChildren=[],vm.showAllowSegmentationOption=Umbraco.Sys.ServerVariables.umbracoSettings.showAllowSegmentationForDocumentTypes||!1,vm.addChild=function addChild($event){var dialog={view:"itempicker",availableItems:vm.contentTypes,selectedItems:vm.selectedChildren,position:"target",event:$event,submit:function submit(model){model.selectedItem&&(vm.selectedChildren.push(model.selectedItem),$scope.model.allowedContentTypes.push(model.selectedItem.id)),overlayService.close()},close:function close(){overlayService.close()}};localizationService.localize("contentTypeEditor_chooseChildNode").then(function(value){dialog.title=value,overlayService.open(dialog)})},vm.removeChild=function removeChild(selectedChild,index){vm.selectedChildren.splice(index,1);var selectedChildIndex=$scope.model.allowedContentTypes.indexOf(selectedChild.id);$scope.model.allowedContentTypes.splice(selectedChildIndex,1)},vm.sortChildren=function sortChildren(){$timeout(function(){$scope.model.allowedContentTypes=_.pluck(vm.selectedChildren,"id")})},vm.toggleAllowAsRoot=function toggleAllowAsRoot(){$scope.model.allowAsRoot=!$scope.model.allowAsRoot},vm.toggleAllowCultureVariants=function toggleAllowCultureVariants(){$scope.model.allowCultureVariant=!$scope.model.allowCultureVariant},vm.toggleAllowSegmentVariants=function toggleAllowSegmentVariants(){$scope.model.allowSegmentVariant=!$scope.model.allowSegmentVariant},vm.canToggleIsElement=!1,vm.toggleIsElement=function toggleIsElement(){$scope.model.isElement=!$scope.model.isElement},function init(){contentTypeResource.getAll().then(function(contentTypes){vm.contentTypes=_.where(contentTypes,{isElement:!1}),iconHelper.formatContentTypeIcons(vm.contentTypes),vm.selectedChildren=contentTypeHelper.makeObjectArrayFromId($scope.model.allowedContentTypes,contentTypes),0===$scope.model.id&&contentTypeHelper.insertChildNodePlaceholder(vm.contentTypes,$scope.model.name,$scope.model.icon,$scope.model.id)}),$scope.model.id>0&&!$scope.model.isElement?contentTypeResource.hasContentNodes($scope.model.id).then(function(result){vm.canToggleIsElement=!result}):vm.canToggleIsElement=!0}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.DocumentType.TemplatesController",function TemplatesController($scope,entityResource,contentTypeHelper,templateResource,contentTypeResource,$routeParams){var vm=this;vm.availableTemplates=[],vm.canCreateTemplate=!1,vm.updateTemplatePlaceholder=!1,vm.loadingTemplates=!1,vm.isElement=$scope.model.isElement,vm.createTemplate=function createTemplate(){vm.createTemplateButtonState="busy",contentTypeResource.createDefaultTemplate($scope.model.id).then(function(savedTemplate){savedTemplate.icon="icon-layout",vm.availableTemplates.push(savedTemplate),vm.canCreateTemplate=!1,$scope.model.allowedTemplates.push(savedTemplate),null===$scope.model.defaultTemplate&&($scope.model.defaultTemplate=savedTemplate),vm.createTemplateButtonState="success"},function(){vm.createTemplateButtonState="error"})};var unbindWatcher=$scope.$watch("model.isElement",function(newValue,oldValue){vm.isElement=newValue});$scope.$on("$destroy",function(){unbindWatcher()}),function onInit(){vm.loadingTemplates=!0,entityResource.getAll("Template").then(function(templates){vm.availableTemplates=templates,$routeParams.notemplate||0!==$scope.model.id||(vm.updateTemplatePlaceholder=!0,vm.availableTemplates=contentTypeHelper.insertTemplatePlaceholder(vm.availableTemplates)),vm.loadingTemplates=!1,function checkIfTemplateExists(){if(0!==$scope.model.id){var existingTemplate=vm.availableTemplates.find(function(availableTemplate){return availableTemplate.name===$scope.model.name||availableTemplate.placeholder});vm.canCreateTemplate=!existingTemplate}}()})}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.Languages.EditController",function LanguagesEditController($scope,$q,$timeout,$location,$routeParams,overlayService,navigationService,notificationsService,localizationService,languageResource,contentEditingHelper,formHelper,eventsService){var vm=this;vm.page={},vm.showBackButton=!0,vm.language={},vm.availableCultures=null,vm.breadcrumbs=[],vm.labels={},vm.initIsDefault=!1,vm.showDefaultLanguageInfo=!1,vm.save=function save(){if(formHelper.submitForm({scope:$scope}))if(vm.page.saveButtonState="busy",currCulture&&vm.language.culture!==currCulture){var changeCultureAlert={title:vm.labels.areYouSure,view:"views/languages/overlays/change.html",submitButtonLabelKey:"general_continue",submit:function submit(model){saveLanguage(),overlayService.close()},close:function close(){overlayService.close(),vm.page.saveButtonState="init"}};overlayService.open(changeCultureAlert)}else saveLanguage()},vm.back=back,vm.goToPage=function goToPage(ancestor){$location.path(ancestor.path)},vm.toggleMandatory=function toggleMandatory(){vm.language.isMandatory=!vm.language.isMandatory},vm.toggleDefault=function toggleDefault(){vm.initIsDefault||(vm.language.isDefault=!vm.language.isDefault,vm.language.isDefault?vm.showDefaultLanguageInfo=!0:vm.showDefaultLanguageInfo=!1)};var currCulture=null;function saveLanguage(){languageResource.save(vm.language).then(function(lang){formHelper.resetForm({scope:$scope}),vm.language=lang,vm.page.saveButtonState="success",localizationService.localize("speechBubbles_languageSaved").then(function(value){notificationsService.success(value)});var args={language:lang,isNew:!!$routeParams.create};eventsService.emit("editors.languages.languageSaved",args),back()},function(err){vm.page.saveButtonState="error",formHelper.resetForm({scope:$scope,hasErrors:!0}),formHelper.handleError(err)})}function back(){$location.path("settings/languages/overview")}!function init(){localizationService.localizeMany(["treeHeaders_languages","languages_mandatoryLanguage","languages_mandatoryLanguageHelp","languages_defaultLanguage","languages_defaultLanguageHelp","languages_addLanguage","languages_noFallbackLanguageOption","languages_fallbackLanguageDescription","languages_fallbackLanguage","defaultdialogs_confirmSure","defaultdialogs_editlanguage"]).then(function(values){vm.labels.languages=values[0],vm.labels.mandatoryLanguage=values[1],vm.labels.mandatoryLanguageHelp=values[2],vm.labels.defaultLanguage=values[3],vm.labels.defaultLanguageHelp=values[4],vm.labels.addLanguage=values[5],vm.labels.noFallbackLanguageOption=values[6],vm.labels.areYouSure=values[9],vm.labels.editLanguage=values[10],$scope.properties={fallbackLanguage:{alias:"fallbackLanguage",description:values[7],label:values[8]}},$routeParams.create&&(vm.page.name=vm.labels.addLanguage,$scope.$emit("$changeTitle",vm.labels.addLanguage))}),vm.loading=!0;var promises=[];promises.push(languageResource.getCultures().then(function(culturesDictionary){var cultures=[];Object.entries(culturesDictionary).forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),key=_ref2[0],value=_ref2[1];cultures.push({name:key,displayName:value})}),vm.availableCultures=cultures})),promises.push(languageResource.getAll().then(function(languages){vm.availableLanguages=languages.filter(function(l){return $routeParams.id!=l.id}),vm.loading=!1})),$routeParams.create||promises.push(languageResource.getById($routeParams.id).then(function(lang){vm.language=lang,vm.page.name=vm.language.name,$scope.$emit("$changeTitle",vm.labels.editLanguage+": "+vm.page.name),vm.initIsDefault=Utilities.copy(vm.language.isDefault),function makeBreadcrumbs(){vm.breadcrumbs=[{name:vm.labels.languages,path:"/settings/languages/overview"},{name:vm.language.name}]}(),currCulture=vm.language.culture})),$q.all(promises,function(){vm.loading=!1}),$timeout(function(){navigationService.syncTree({tree:"languages",path:"-1"})})}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.Languages.OverviewController",function LanguagesOverviewController($location,$timeout,navigationService,localizationService,languageResource,eventsService,overlayService,$scope){var vm=this;vm.page={},vm.languages=[],vm.labels={},vm.addLanguage=function addLanguage(){$location.search("create",null),$location.path("/settings/languages/edit/-1").search("create","true")},vm.editLanguage=function editLanguage(language){$location.search("create",null),$location.path("/settings/languages/edit/"+language.id)},vm.deleteLanguage=function deleteLanguage(language,event){var dialog={view:"views/languages/overlays/delete.html",language:language,submitButtonLabelKey:"contentTypeEditor_yesDelete",submitButtonStyle:"danger",submit:function submit(model){!function performDelete(language){language.deleteButtonState="busy",languageResource.deleteById(language.id).then(function(){var args={language:language};eventsService.emit("editors.languages.languageDeleted",args);var index=vm.languages.indexOf(language);vm.languages.splice(index,1)},function(err){language.deleteButtonState="error"})}(model.language),overlayService.close()},close:function close(){overlayService.close()}};localizationService.localize("general_delete").then(function(value){dialog.title=value,overlayService.open(dialog)}),event.preventDefault(),event.stopPropagation()},vm.getLanguageById=function(id){for(var i=0;i<vm.languages.length;i++)if(vm.languages[i].id===id)return vm.languages[i];return null},function init(){vm.loading=!0,localizationService.localizeMany(["treeHeaders_languages","general_mandatory","general_default","languages_fallsbackToLabel"]).then(function(values){vm.labels.languages=values[0],vm.labels.mandatory=values[1],vm.labels.general=values[2],vm.labels.fallsbackTo=values[3],vm.page.name=vm.labels.languages,$scope.$emit("$changeTitle",vm.labels.languages)}),languageResource.getAll().then(function(languages){vm.languages=languages,vm.loading=!1}),$timeout(function(){navigationService.syncTree({tree:"languages",path:"-1"})})}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.LogViewer.OverviewController",function LogViewerOverviewController($q,$location,$timeout,logViewerResource,navigationService){var vm=this;vm.loading=!1,vm.canLoadLogs=!1,vm.searches=[],vm.numberOfErrors=0,vm.commonLogMessages=[],vm.commonLogMessagesCount=10,vm.dateRangeLabel="",vm.config={enableTime:!1,dateFormat:"Y-m-d",time_24hr:!1,mode:"range",maxDate:"today",conjunction:" to "},vm.logTypeLabels=["Debug","Info","Warning","Error","Fatal"],vm.logTypeData=[0,0,0,0,0],vm.logTypeColors=["#2e8aea","#2bc37c","#ff9412","#d42054","#343434"],vm.chartOptions={legend:{display:!0,position:"left"}},vm.searchLogQuery=searchLogQuery,vm.findMessageTemplate=function findMessageTemplate(template){searchLogQuery("@MessageTemplate='"+template.MessageTemplate+"'")},vm.searchErrors=function searchErrors(){searchLogQuery("@Level='Fatal' or @Level='Error' or Has(@Exception)")},vm.showMore=function showMore(){vm.commonLogMessagesCount+=10},vm.dateRangeChange=function dateRangeChange(selectedDates,dateStr,instance){if(selectedDates.length>0){var startDate=selectedDates[0].toIsoDateString(),endDate=selectedDates[selectedDates.length-1].toIsoDateString();if(startDate===vm.period[0]&&endDate===vm.period[1])return;$location.path("/settings/logViewer/overview").search({startDate:startDate,endDate:endDate})}};var querystring=$location.search();function searchLogQuery(logQuery){$location.path("/settings/logViewer/search").search({lq:logQuery,startDate:vm.startDate,endDate:vm.endDate})}function getDateRangeLabel(suffix){return"Log Overview for "+suffix}querystring.startDate?(vm.startDate=querystring.startDate,vm.dateRangeLabel=getDateRangeLabel("Selected Time Period")):(vm.startDate=new Date(Date.now()),vm.startDate.setDate(vm.startDate.getDate()-1),vm.startDate=vm.startDate.toIsoDateString(),vm.dateRangeLabel=getDateRangeLabel("Today")),querystring.endDate?(vm.endDate=querystring.endDate,querystring.endDate===querystring.startDate&&(vm.dateRangeLabel=getDateRangeLabel("Selected Date"))):vm.endDate=new Date(Date.now()).toIsoDateString(),vm.period=[vm.startDate,vm.endDate],function preFlightCheck(){vm.loading=!0,logViewerResource.canViewLogs(vm.startDate,vm.endDate).then(function(result){vm.loading=!1,vm.canLoadLogs=result,result&&function init(){vm.loading=!0;var savedSearches=logViewerResource.getSavedSearches().then(function(data){vm.searches=data},function(){vm.searches=[{name:"Find all logs where the Level is NOT Verbose and NOT Debug",query:"Not(@Level='Verbose') and Not(@Level='Debug')"},{name:"Find all logs that has an exception property (Warning, Error & Fatal with Exceptions)",query:"Has(@Exception)"},{name:"Find all logs that have the property 'Duration'",query:"Has(Duration)"},{name:"Find all logs that have the property 'Duration' and the duration is greater than 1000ms",query:"Has(Duration) and Duration > 1000"},{name:"Find all logs that are from the namespace 'Umbraco.Core'",query:"StartsWith(SourceContext, 'Umbraco.Core')"},{name:"Find all logs that use a specific log message template",query:"@MessageTemplate = '[Timing {TimingId}] {EndMessage} ({TimingDuration}ms)'"}]}),numOfErrors=logViewerResource.getNumberOfErrors(vm.startDate,vm.endDate).then(function(data){vm.numberOfErrors=data}),logCounts=logViewerResource.getLogLevelCounts(vm.startDate,vm.endDate).then(function(data){vm.logTypeData=[];for(var _loop=function _loop(){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),key=_Object$entries$_i[0],value=_Object$entries$_i[1],index=vm.logTypeLabels.findIndex(function(x){return key.startsWith(x)});index>-1&&(vm.logTypeData[index]=value)},_i=0,_Object$entries=Object.entries(data);_i<_Object$entries.length;_i++)_loop()}),commonMsgs=logViewerResource.getMessageTemplates(vm.startDate,vm.endDate).then(function(data){vm.commonLogMessages=data}),logLevel=logViewerResource.getLogLevel().then(function(data){vm.logLevel=data;var index=vm.logTypeLabels.findIndex(function(x){return vm.logLevel.startsWith(x)});vm.logLevelColor=index>-1?vm.logTypeColors[index]:"#000"});$q.all([savedSearches,numOfErrors,logCounts,commonMsgs,logLevel]).then(function(){vm.loading=!1}),$timeout(function(){navigationService.syncTree({tree:"logViewer",path:"-1"})})}()})}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.LogViewer.SearchController",function LogViewerSearchController($location,$timeout,logViewerResource,overlayService,localizationService){var vm=this;function enablePolling(interval){vm.polling.enabled=!0,vm.polling.interval=interval,vm.polling.defaultButton.icon="icon-axis-rotation fa-spin",vm.polling.defaultButton.labelKey="logViewer_pollingEvery"+interval,vm.polling.promise&&$timeout.cancel(vm.polling.promise),vm.polling.promise=function poll(interval){vm.polling.promise=$timeout(function(){getLogs(!0,!0),vm.polling.enabled&&vm.polling.interval>0&&poll(vm.polling.interval)},1e3*interval)}(interval)}function search(){$location.search("lq",vm.logOptions.filterExpression),vm.logOptions.pageNumber=1,getLogs()}function getLogs(hideLoadingIndicator,keepOpenItems){vm.logsLoading=!hideLoadingIndicator,logViewerResource.getLogs(vm.logOptions).then(function(data){if(keepOpenItems){var openItemTimestamps=vm.logItems.items.filter(function(item){return item.open}).map(function(item){return item.Timestamp});data.items=data.items.map(function(item){return item.open=openItemTimestamps.indexOf(item.Timestamp)>-1,item})}vm.logItems=data,vm.logsLoading=!1,function setLogTypeColor(logItems){logItems.forEach(function(logItem){return logItem.logTypeColor=vm.logLevels.find(function(x){return x.name===logItem.Level}).logTypeColor})}(vm.logItems.items)},function(err){vm.logsLoading=!1})}function updateAllLogLevelFilterCheckboxes(bool){vm.logLevels.forEach(function(logLevel){return logLevel.selected=bool})}vm.loading=!1,vm.logsLoading=!1,vm.showBackButton=!0,vm.page={},vm.logLevels=[{name:"Verbose",logTypeColor:"gray"},{name:"Debug",logTypeColor:"info"},{name:"Information",logTypeColor:"success"},{name:"Warning",logTypeColor:"warning"},{name:"Error",logTypeColor:"danger"},{name:"Fatal",logTypeColor:"dark"}],vm.polling={enabled:!1,interval:0,promise:null,defaultButton:{labelKey:"logViewer_polling",handler:function handler(){vm.polling.enabled?(vm.polling.enabled=!1,vm.polling.interval=0,vm.polling.defaultButton.icon=null,vm.polling.defaultButton.labelKey="logViewer_polling"):vm.polling.subButtons[0].handler()}},subButtons:[{labelKey:"logViewer_every2",handler:function handler(){enablePolling(2)}},{labelKey:"logViewer_every5",handler:function handler(){enablePolling(5)}},{labelKey:"logViewer_every10",handler:function handler(){enablePolling(10)}},{labelKey:"logViewer_every20",handler:function handler(){enablePolling(20)}},{labelKey:"logViewer_every30",handler:function handler(){enablePolling(30)}}]},vm.searches=[],vm.logItems={},vm.logOptions={},vm.logOptions.orderDirection="Descending",vm.fromDatePickerConfig={pickDate:!0,pickTime:!0,useSeconds:!1,useCurrent:!1,format:"YYYY-MM-DD HH:mm",icons:{time:"icon-time",date:"icon-calendar",up:"icon-chevron-up",down:"icon-chevron-down"}},vm.toDatePickerConfig={pickDate:!0,pickTime:!0,useSeconds:!1,format:"YYYY-MM-DD HH:mm",icons:{time:"icon-time",date:"icon-calendar",up:"icon-chevron-up",down:"icon-chevron-down"}},vm.getLogs=getLogs,vm.changePageNumber=function changePageNumber(pageNumber){vm.logOptions.pageNumber=pageNumber,getLogs()},vm.search=search,vm.getFilterName=function getFilterName(array){var name="All",found=!1;return array.forEach(function(item){item.selected&&(found?name=name+", "+item.name:(name=item.name,found=!0))}),name},vm.setLogLevelFilter=function setLogLevelFilter(logLevel){if(vm.logOptions.logLevels||(vm.logOptions.logLevels=[]),logLevel.selected)vm.logOptions.logLevels.push(logLevel.name);else{var index=vm.logOptions.logLevels.indexOf(logLevel.name);vm.logOptions.logLevels.splice(index,1)}getLogs()},vm.selectAllLogLevelFilters=function selectAllLogLevelFilters(){vm.logOptions.logLevels=vm.logLevels.map(function(logLevel){return logLevel.name}),updateAllLogLevelFilterCheckboxes(!0),getLogs()},vm.deselectAllLogLevelFilters=function deselectAllLogLevelFilters(){vm.logOptions.logLevels=[],updateAllLogLevelFilterCheckboxes(!1),getLogs()},vm.toggleOrderBy=function toggleOrderBy(){vm.logOptions.orderDirection="Descending"===vm.logOptions.orderDirection?"Ascending":"Descending",getLogs()},vm.selectSearch=function selectSearch(searchItem){vm.logOptions.filterExpression=searchItem.query,vm.dropdownOpen=!1,search()},vm.resetSearch=function resetSearch(){vm.logOptions.filterExpression="",search()},vm.findItem=function findItem(key,value){isNaN(value)?vm.logOptions.filterExpression=key+"='"+value+"'":vm.logOptions.filterExpression=key+"="+value,search()},vm.checkForSavedSearch=function checkForSavedSearch(){if(vm.logOptions.filterExpression){var findQuery=_.findWhere(vm.searches,{query:vm.logOptions.filterExpression});return!findQuery}return!1},vm.addToSavedSearches=function addToSavedSearches(){var overlay={title:"Save Search",closeButtonLabel:"Cancel",submitButtonLabel:"Save Search",disableSubmitButton:!0,view:"logviewersearch",query:vm.logOptions.filterExpression,submit:function submit(model){logViewerResource.postSavedSearch(model.queryName,model.query).then(function(data){vm.searches=data,overlayService.close()})},close:function close(){return overlayService.close()}};localizationService.localizeMany(["general_cancel","logViewer_saveSearch","logViewer_saveSearchDescription"]).then(function(values){overlay.title=values[1],overlay.subtitle=values[2],overlay.submitButtonLabel=values[1],overlay.closeButtonLabel=values[0],overlayService.open(overlay)})},vm.deleteSavedSearch=function deleteSavedSearch(searchItem){var overlay={title:"Delete Saved Search",closeButtonLabel:"Cancel",submitButtonLabel:"Delete Saved Search",submitButtonStyle:"danger",submit:function submit(model){logViewerResource.deleteSavedSearch(searchItem.name,searchItem.query).then(function(data){vm.searches=data,overlayService.close()})},close:function close(){return overlayService.close()}};localizationService.localizeMany(["general_cancel","defaultdialogs_confirmdelete","logViewer_deleteSavedSearch"]).then(function(values){overlay.title=values[2],overlay.subtitle=values[1],overlay.submitButtonLabel=values[2],overlay.closeButtonLabel=values[0],overlayService.open(overlay)})},vm.back=function back(){$location.path("settings/logViewer/overview").search("lq",null)},function init(){var querystring=$location.search();querystring.lq&&(vm.logOptions.filterExpression=querystring.lq),querystring.startDate&&(vm.logOptions.startDate=querystring.startDate),querystring.endDate&&(vm.logOptions.endDate=querystring.endDate),vm.loading=!0,logViewerResource.getSavedSearches().then(function(data){vm.searches=data,vm.loading=!1},function(){vm.searches=[{name:"Find all logs where the Level is NOT Verbose and NOT Debug",query:"Not(@Level='Verbose') and Not(@Level='Debug')"},{name:"Find all logs that has an exception property (Warning, Error & Fatal with Exceptions)",query:"Has(@Exception)"},{name:"Find all logs that have the property 'Duration'",query:"Has(Duration)"},{name:"Find all logs that have the property 'Duration' and the duration is greater than 1000ms",query:"Has(Duration) and Duration > 1000"},{name:"Find all logs that are from the namespace 'Umbraco.Core'",query:"StartsWith(SourceContext, 'Umbraco.Core')"},{name:"Find all logs that use a specific log message template",query:"@MessageTemplate = '[Timing {TimingId}] {EndMessage} ({TimingDuration}ms)'"}]}),getLogs()}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.ParameterEditorController",function ParameterEditorController($scope,formHelper,editorService){var vm=this;vm.submit=function submit(){$scope.model&&$scope.model.submit&&formHelper.submitForm({scope:$scope})&&$scope.model.submit($scope.model)},vm.close=function close(){$scope.model&&$scope.model.close&&$scope.model.close()},vm.openMacroParameterPicker=function openMacroParameterPicker(parameter){vm.focusOnMandatoryField=!1;var overlay={parameter:$scope.model.parameter,view:"views/common/infiniteeditors/macroparameterpicker/macroparameterpicker.html",size:"small",submit:function submit(model){vm.focusOnMandatoryField=!0,parameter.editor=model.parameter.editor,editorService.close()},close:function close(model){editorService.close()}};editorService.open(overlay)}})}(),angular.module("umbraco").controller("Umbraco.Editors.Macros.CreateController",MacrosCreateController),angular.module("umbraco").controller("Umbraco.Editors.Macros.DeleteController",MacrosDeleteController),angular.module("umbraco").controller("Umbraco.Editors.Macros.EditController",MacrosEditController),angular.module("umbraco").controller("Umbraco.Editors.Macros.ParametersController",MacrosParametersController),angular.module("umbraco").controller("Umbraco.Editors.Macros.SettingsController",MacrosSettingsController),function(){angular.module("umbraco").controller("Umbraco.Editors.Media.Apps.ContentController",function MediaAppContentController($scope,$filter,contentEditingHelper,contentTypeHelper){var vm=this;function setActiveTab(tab){vm.activeTabAlias=tab.alias,vm.tabs.forEach(function(tab){return tab.active=!1}),tab.active=!0}vm.tabs=[],vm.activeTabAlias=null,vm.setActiveTab=setActiveTab,$scope.$watchCollection("content.tabs",function(newValue){contentTypeHelper.defineParentAliasOnGroups(newValue),contentTypeHelper.relocateDisorientedGroups(newValue),vm.tabs=$filter("filter")(newValue,function(tab){return tab.type===contentTypeHelper.TYPE_TAB}),vm.tabs.length>0&&(contentEditingHelper.registerGenericTab(newValue),setActiveTab(vm.tabs[0]))})})}(),angular.module("umbraco").controller("Umbraco.Editors.Media.CreateController",mediaCreateController),angular.module("umbraco").controller("Umbraco.Editors.Media.DeleteController",MediaDeleteController),angular.module("umbraco").controller("Umbraco.Editors.Media.EditController",mediaEditController),angular.module("umbraco").controller("Umbraco.Editors.Media.EmptyRecycleBinController",MediaEmptyRecycleBinController),angular.module("umbraco").controller("Umbraco.Editors.Media.MoveController",function($scope,userService,eventsService,mediaResource,appState,treeService,navigationService){function treeLoadedHandler(args){$scope.source&&$scope.source.path&&$scope.dialogTreeApi.syncTree({path:$scope.source.path,activate:!1})}function nodeSelectHandler(args){args&&args.event&&(args.event.preventDefault(),args.event.stopPropagation()),eventsService.emit("editors.media.moveController.select",args),$scope.target&&($scope.target.selected=!1),$scope.target=args.node,$scope.target.selected=!0}function nodeExpandedHandler(args){args.node.metaData.isContainer&&function openMiniListView(node){$scope.miniListView=node}(args.node)}$scope.dialogTreeApi={},$scope.source=_.clone($scope.currentNode),$scope.busy=!1,$scope.searchInfo={searchFromId:null,searchFromName:null,showSearch:!1,results:[],selectedSearchResults:[]},$scope.treeModel={hideHeader:!1},userService.getCurrentUser().then(function(userData){$scope.treeModel.hideHeader=userData.startMediaIds.length>0&&-1==userData.startMediaIds.indexOf(-1)}),$scope.onTreeInit=function(){$scope.dialogTreeApi.callbacks.treeLoaded(treeLoadedHandler),$scope.dialogTreeApi.callbacks.treeNodeSelect(nodeSelectHandler),$scope.dialogTreeApi.callbacks.treeNodeExpanded(nodeExpandedHandler)},$scope.close=function(){navigationService.hideDialog()},$scope.hideSearch=function(){$scope.searchInfo.showSearch=!1,$scope.searchInfo.searchFromId=null,$scope.searchInfo.searchFromName=null,$scope.searchInfo.results=[]},$scope.selectResult=function(evt,result){result.selected=!0!==result.selected,nodeSelectHandler({event:evt,node:result})},$scope.onSearchResults=function(results){$scope.searchInfo.results=results,$scope.searchInfo.showSearch=!0},$scope.move=function(){$scope.busy=!0,mediaResource.move({parentId:$scope.target.id,id:$scope.source.id}).then(function(path){$scope.busy=!1,$scope.error=!1,$scope.success=!0,treeService.removeNode($scope.currentNode);var activeNode=appState.getTreeState("selectedNode");navigationService.syncTree({tree:"media",path:path,forceReload:!0,activate:!1}).then(function(args){if(activeNode){var activeNodePath=treeService.getPath(activeNode).join();navigationService.syncTree({tree:"media",path:activeNodePath,forceReload:!1,activate:!0})}})},function(err){$scope.busy=!1,$scope.success=!1,$scope.error=err})},$scope.selectListViewNode=function(node){node.selected=!0!==node.selected,nodeSelectHandler({node:node})},$scope.closeMiniListView=function(){$scope.miniListView=void 0}}),angular.module("umbraco").controller("Umbraco.Editors.Media.RecycleBinController",MediaRecycleBinController),angular.module("umbraco").controller("Umbraco.Editors.Media.RestoreController",function($scope,relationResource,mediaResource,entityResource,navigationService,appState,treeService,userService,localizationService){function nodeSelectHandler(args){args&&args.event&&(args.event.preventDefault(),args.event.stopPropagation()),$scope.target&&($scope.target.selected=!1),$scope.target=args.node,$scope.target.selected=!0}function nodeExpandedHandler(args){args.node.metaData.isContainer&&function openMiniListView(node){$scope.miniListView=node}(args.node)}$scope.source=_.clone($scope.currentNode),$scope.error=null,$scope.loading=!0,$scope.moving=!1,$scope.success=!1,$scope.dialogTreeApi={},$scope.searchInfo={showSearch:!1,results:[],selectedSearchResults:[]},$scope.treeModel={hideHeader:!1},userService.getCurrentUser().then(function(userData){$scope.treeModel.hideHeader=userData.startContentIds.length>0&&-1==userData.startContentIds.indexOf(-1)}),$scope.labels={},localizationService.localizeMany(["treeHeaders_media"]).then(function(data){$scope.labels.treeRoot=data[0]}),$scope.hideSearch=function(){$scope.searchInfo.showSearch=!1,$scope.searchInfo.results=[]},$scope.selectResult=function(evt,result){result.selected=!0!==result.selected,nodeSelectHandler({event:evt,node:result})},$scope.onSearchResults=function(results){$scope.searchInfo.results=results,$scope.searchInfo.showSearch=!0},$scope.onTreeInit=function(){$scope.dialogTreeApi.callbacks.treeNodeSelect(nodeSelectHandler),$scope.dialogTreeApi.callbacks.treeNodeExpanded(nodeExpandedHandler)},$scope.selectListViewNode=function(node){node.selected=!0!==node.selected,nodeSelectHandler({node:node})},$scope.closeMiniListView=function(){$scope.miniListView=void 0},relationResource.getByChildId($scope.source.id,"relateParentMediaFolderOnDelete").then(function(data){$scope.loading=!1,data.length?($scope.relation=data[0],-1===$scope.relation.parentId?$scope.target={id:-1,name:$scope.labels.treeRoot}:($scope.loading=!0,entityResource.getById($scope.relation.parentId,"media").then(function(data){$scope.loading=!1,$scope.target=data,-1!==$scope.target.path.indexOf("-21")&&($scope.moving=!0,$scope.target=null)},function(err){$scope.loading=!1,$scope.error=err}))):$scope.moving=!0},function(err){$scope.loading=!1,$scope.error=err}),$scope.restore=function(){$scope.loading=!0,mediaResource.move({parentId:$scope.target.id,id:$scope.source.id}).then(function(path){$scope.loading=!1,$scope.success=!0,treeService.removeNode($scope.currentNode);var activeNode=appState.getTreeState("selectedNode");navigationService.syncTree({tree:"media",path:path,forceReload:!0,activate:!1}).then(function(args){if(activeNode){var activeNodePath=treeService.getPath(activeNode).join();navigationService.syncTree({tree:"media",path:activeNodePath,forceReload:!1,activate:!0})}})},function(err){$scope.loading=!1,$scope.error=err})},$scope.close=function(){navigationService.hideDialog()}}),function(){angular.module("umbraco").controller("Umbraco.Editors.Media.SortController",function MediaSortController($scope,$filter,mediaResource,navigationService,eventsService){var vm=this,id=$scope.currentNode.id;vm.loading=!1,vm.children=[],vm.saveButtonState="init",vm.sortOrder={},vm.sortableOptions={axis:"y",containment:"parent",distance:10,tolerance:"pointer",opacity:.7,scroll:!0,cursor:"move",helper:function fixSortableHelper(e,ui){return ui.children().each(function(){$(this).width($(this).width())}),ui},update:function update(){vm.sortOrder.column="",vm.sortOrder.reverse=!1}},vm.save=function save(){vm.saveButtonState="busy";var args={parentId:id,sortedIds:_.map(vm.children,function(child){return child.id})};mediaResource.sort(args).then(function(){navigationService.syncTree({tree:"media",path:$scope.currentNode.path,forceReload:!0}).then(function(){return navigationService.reloadNode($scope.currentNode)}),eventsService.emit("sortCompleted",{id:id}),vm.saveButtonState="success"},function(error){vm.error=error,vm.saveButtonState="error"})},vm.sort=function sort(column){vm.sortOrder.column===column?vm.sortOrder.reverse=!vm.sortOrder.reverse:(vm.sortOrder.column=column,vm.sortOrder.reverse=!1),vm.children=$filter("orderBy")(vm.children,vm.sortOrder.column,vm.sortOrder.reverse)},vm.close=function close(){navigationService.hideDialog()},function onInit(){vm.loading=!0,mediaResource.getChildren(id).then(function(data){vm.children=data.items,vm.loading=!1})}()})}(),angular.module("umbraco").controller("Umbraco.Editors.MediaTypes.CopyController",function($scope,mediaTypeResource,treeService,navigationService,notificationsService,appState,eventsService){function nodeSelectHandler(args){args.event.preventDefault(),args.event.stopPropagation(),$scope.target&&($scope.target.selected=!1),$scope.target=args.node,$scope.target.selected=!0}$scope.dialogTreeApi={},$scope.source=_.clone($scope.currentNode),$scope.copy=function(){$scope.busy=!0,$scope.error=!1,mediaTypeResource.copy({parentId:$scope.target.id,id:$scope.source.id}).then(function(path){$scope.error=!1,$scope.success=!0,$scope.busy=!1;var activeNode=appState.getTreeState("selectedNode");navigationService.syncTree({tree:"mediaTypes",path:path,forceReload:!0,activate:!1}).then(function(args){if(activeNode){var activeNodePath=treeService.getPath(activeNode).join();navigationService.syncTree({tree:"mediaTypes",path:activeNodePath,forceReload:!1,activate:!0})}})},function(err){$scope.success=!1,$scope.error=err,$scope.busy=!1})},$scope.onTreeInit=function(){$scope.dialogTreeApi.callbacks.treeNodeSelect(nodeSelectHandler)},$scope.close=function(){navigationService.hideDialog()}}),angular.module("umbraco").controller("Umbraco.Editors.MediaTypes.CreateController",MediaTypesCreateController),angular.module("umbraco").controller("Umbraco.Editors.MediaTypes.DeleteController",MediaTypesDeleteController),function(){angular.module("umbraco").controller("Umbraco.Editors.MediaTypes.EditController",function MediaTypesEditController($scope,$routeParams,$q,mediaTypeResource,editorState,contentEditingHelper,navigationService,iconHelper,contentTypeHelper,notificationsService,localizationService,overlayHelper,eventsService,angularHelper){var vm=this,evts=[],mediaTypeId=$routeParams.id,create=$routeParams.create,infiniteMode=$scope.model&&$scope.model.infiniteMode,mediaTypeIcon="";function loadMediaType(){vm.page.loading=!0,mediaTypeResource.getById(mediaTypeId).then(function(dt){init(dt),infiniteMode||syncTreeNode(vm.contentType,dt.path,!0),vm.page.loading=!1})}function init(contentType){!function convertLegacyIcons(contentType){var contentTypeArray=[];contentTypeArray.push({icon:contentType.icon}),iconHelper.formatContentTypeIcons(contentTypeArray),contentType.icon=contentTypeArray[0].icon}(contentType),editorState.set(contentType),vm.contentType=contentType,mediaTypeIcon=contentType.icon}function syncTreeNode(dt,path,initialLoad){navigationService.syncTree({tree:"mediatypes",path:path.split(","),forceReload:!0!==initialLoad}).then(function(syncArgs){vm.currentNode=syncArgs.node})}vm.save=function save(){if(0===overlayHelper.getNumberOfOverlays()){var deferred=$q.defer();return vm.page.saveButtonState="busy",vm.contentType.allowedContentTypes=contentTypeHelper.createIdArray(vm.contentType.allowedContentTypes),contentEditingHelper.contentEditorPerformSave({saveMethod:mediaTypeResource.save,scope:$scope,content:vm.contentType,rebindCallback:function rebindCallback(origContentType,savedContentType){vm.contentType.id=savedContentType.id,vm.contentType.groups.forEach(function(group){if(group.name){for(var k=0;k<savedContentType.groups.length&&savedContentType.groups[k].name!=group.name;)k++;if(k!=savedContentType.groups.length){var savedGroup=savedContentType.groups[k];group.id||(group.id=savedGroup.id),group.properties.forEach(function(property){if(!property.id&&property.alias){for(k=0;k<savedGroup.properties.length&&savedGroup.properties[k].alias!=property.alias;)k++;if(k!=savedGroup.properties.length){var savedProperty=savedGroup.properties[k];property.id=savedProperty.id}else property.id=0}})}else group.id=0}})}}).then(function(data){infiniteMode||syncTreeNode(vm.contentType,data.path);var args={mediaType:vm.contentType};eventsService.emit("editors.mediaType.saved",args),mediaTypeIcon!==vm.contentType.icon&&eventsService.emit("editors.tree.icon.changed",args),vm.page.saveButtonState="success",infiniteMode&&$scope.model.submit&&$scope.model.submit(),deferred.resolve(data)},function(err){err?editorState.set($scope.content):localizationService.localize("speechBubbles_validationFailedHeader").then(function(headerValue){localizationService.localize("speechBubbles_validationFailedMessage").then(function(msgValue){notificationsService.error(headerValue,msgValue)})}),vm.page.saveButtonState="error",deferred.reject(err)}),deferred.promise}},vm.close=function close(){infiniteMode&&$scope.model.close&&$scope.model.close()},vm.currentNode=null,vm.header={},vm.header.editorfor="content_mediatype",vm.header.setPageTitle=!0,vm.contentType={},vm.page={},vm.page.loading=!1,vm.page.saveButtonState="init",vm.labels={},vm.saveButtonKey="buttons_save",vm.generateModelsKey="buttons_saveAndGenerateModels",function onInit(){infiniteMode&&(mediaTypeId=$scope.model.id,create=$scope.model.create,vm.saveButtonKey="buttons_saveAndClose",vm.generateModelsKey="buttons_generateModelsAndClose")}(),localizationService.localizeMany(["general_design","general_listView","general_rights","main_sections","shortcuts_navigateSections","shortcuts_addGroup","shortcuts_addProperty","shortcuts_addEditor","shortcuts_editDataType","shortcuts_toggleListView","shortcuts_toggleAllowAsRoot","shortcuts_addChildNode"]).then(function(values){vm.labels.design=values[0],vm.labels.listview=values[1],vm.labels.permissions=values[2],vm.labels.sections=values[3],vm.labels.navigateSections=values[4],vm.labels.addGroup=values[5],vm.labels.addProperty=values[6],vm.labels.addEditor=values[7],vm.labels.editDataType=values[8],vm.labels.toggleListView=values[9],vm.labels.allowAsRoot=values[10],vm.labels.addChildNode=values[11],vm.page.navigation=[{name:vm.labels.design,alias:"design",icon:"icon-document-dashed-line",view:"views/mediatypes/views/design/design.html"},{name:vm.labels.listview,alias:"listView",icon:"icon-list",view:"views/mediatypes/views/listview/listview.html"},{name:vm.labels.permissions,alias:"permissions",icon:"icon-keychain",view:"views/mediatypes/views/permissions/permissions.html"}],vm.page.keyboardShortcutsOverview=[{name:vm.labels.sections,shortcuts:[{description:vm.labels.navigateSections,keys:[{key:"1"},{key:"3"}],keyRange:!0}]},{name:vm.labels.design,shortcuts:[{description:vm.labels.addGroup,keys:[{key:"alt"},{key:"shift"},{key:"g"}]},{description:vm.labels.addProperty,keys:[{key:"alt"},{key:"shift"},{key:"p"}]},{description:vm.labels.addEditor,keys:[{key:"alt"},{key:"shift"},{key:"e"}]},{description:vm.labels.editDataType,keys:[{key:"alt"},{key:"shift"},{key:"d"}]}]},{name:vm.labels.listview,shortcuts:[{description:vm.labels.toggleListView,keys:[{key:"alt"},{key:"shift"},{key:"l"}]}]},{name:vm.labels.permissions,shortcuts:[{description:vm.labels.allowAsRoot,keys:[{key:"alt"},{key:"shift"},{key:"r"}]},{description:vm.labels.addChildNode,keys:[{key:"alt"},{key:"shift"},{key:"c"}]}]}],function initializeActiveNavigationPanel(){var initialViewSetFromRouteParams=!1,view=$routeParams.view;if(view)for(var viewPath="views/mediatypes/views/"+view+"/"+view+".html",i=0;i<vm.page.navigation.length;i++)if(vm.page.navigation[i].view===viewPath){vm.page.navigation[i].active=!0,initialViewSetFromRouteParams=!0;break}!1===initialViewSetFromRouteParams&&(vm.page.navigation[0].active=!0)}()}),contentTypeHelper.checkModelsBuilderStatus().then(function(result){vm.page.modelsBuilder=result,result&&(vm.page.defaultButton={hotKey:"ctrl+s",hotKeyWhenHidden:!0,labelKey:vm.saveButtonKey,letter:"S",handler:function handler(){vm.save()}},vm.page.subButtons=[{hotKey:"ctrl+g",hotKeyWhenHidden:!0,labelKey:vm.generateModelsKey,letter:"G",handler:function handler(){vm.page.saveButtonState="busy",vm.save().then(function(result){vm.page.saveButtonState="busy",localizationService.localize("modelsBuilder_buildingModels").then(function(headerValue){localizationService.localize("modelsBuilder_waitingMessage").then(function(msgValue){notificationsService.info(headerValue,msgValue)})}),contentTypeHelper.generateModels().then(function(result){result.lastError?(vm.page.saveButtonState="error",localizationService.localize("modelsBuilder_modelsExceptionInUlog").then(function(value){notificationsService.error(value)})):(contentTypeHelper.checkModelsBuilderStatus().then(function(statusResult){vm.page.modelsBuilder=statusResult}),vm.page.saveButtonState="init",localizationService.localize("modelsBuilder_modelsGenerated").then(function(value){notificationsService.success(value)}))},function(){vm.page.saveButtonState="error",localizationService.localize("modelsBuilder_modelsGeneratedError").then(function(value){notificationsService.error(value)})})})}}])}),create?(vm.page.loading=!0,mediaTypeResource.getScaffold(mediaTypeId).then(function(dt){init(dt),vm.page.loading=!1})):loadMediaType(),evts.push(eventsService.on("app.refreshEditor",function(name,error){loadMediaType()})),evts.push(eventsService.on("editors.groupsBuilder.changed",function(name,args){angularHelper.getCurrentForm($scope).$setDirty()})),$scope.$on("$destroy",function(){for(var e in evts)eventsService.unsubscribe(evts[e])}),$scope.$watch("vm.contentType.allowedContentTypes.length + vm.contentType.allowAsRoot + vm.contentType.isContainer + vm.contentType.compositeContentTypes.length",function(newVal,oldVal){void 0!==oldVal&&angularHelper.getCurrentForm($scope).$setDirty()})})}(),angular.module("umbraco").controller("Umbraco.Editors.MediaTypes.MoveController",function($scope,mediaTypeResource,treeService,navigationService,notificationsService,appState,eventsService){function nodeSelectHandler(args){args.event.preventDefault(),args.event.stopPropagation(),$scope.target&&($scope.target.selected=!1),$scope.target=args.node,$scope.target.selected=!0}$scope.dialogTreeApi={},$scope.source=_.clone($scope.currentNode),$scope.move=function(){$scope.busy=!0,$scope.error=!1,mediaTypeResource.move({parentId:$scope.target.id,id:$scope.source.id}).then(function(path){$scope.error=!1,$scope.success=!0,$scope.busy=!1,treeService.removeNode($scope.currentNode);var activeNode=appState.getTreeState("selectedNode");navigationService.syncTree({tree:"mediaTypes",path:path,forceReload:!0,activate:!1}).then(function(args){if(activeNode){var activeNodePath=treeService.getPath(activeNode).join();navigationService.syncTree({tree:"mediaTypes",path:activeNodePath,forceReload:!1,activate:!0})}}),eventsService.emit("app.refreshEditor")},function(err){$scope.success=!1,$scope.error=err,$scope.busy=!1})},$scope.onTreeInit=function(){$scope.dialogTreeApi.callbacks.treeNodeSelect(nodeSelectHandler)},$scope.close=function(){navigationService.hideDialog()}}),function(){angular.module("umbraco").controller("Umbraco.Editors.MediaType.PermissionsController",function PermissionsController($scope,$timeout,mediaTypeResource,iconHelper,contentTypeHelper,localizationService,overlayService){var vm=this;vm.mediaTypes=[],vm.selectedChildren=[],vm.addChild=function addChild($event){var dialog={view:"itempicker",availableItems:vm.mediaTypes,selectedItems:vm.selectedChildren,position:"target",event:$event,submit:function submit(model){model.selectedItem&&(vm.selectedChildren.push(model.selectedItem),$scope.model.allowedContentTypes.push(model.selectedItem.id)),overlayService.close()},close:function close(){overlayService.close()}};localizationService.localize("contentTypeEditor_chooseChildNode").then(function(value){dialog.title=value,overlayService.open(dialog)})},vm.removeChild=function removeChild(selectedChild,index){vm.selectedChildren.splice(index,1);var selectedChildIndex=$scope.model.allowedContentTypes.indexOf(selectedChild.id);$scope.model.allowedContentTypes.splice(selectedChildIndex,1)},vm.sortChildren=function sortChildren(){$timeout(function(){$scope.model.allowedContentTypes=_.pluck(vm.selectedChildren,"id")})},vm.toggle=function toggle(){$scope.model.allowAsRoot?$scope.model.allowAsRoot=!1:$scope.model.allowAsRoot=!0},function init(){mediaTypeResource.getAll().then(function(mediaTypes){vm.mediaTypes=mediaTypes,iconHelper.formatContentTypeIcons(vm.mediaTypes),vm.selectedChildren=contentTypeHelper.makeObjectArrayFromId($scope.model.allowedContentTypes,vm.mediaTypes),0===$scope.model.id&&contentTypeHelper.insertChildNodePlaceholder(vm.mediaTypes,$scope.model.name,$scope.model.icon,$scope.model.id)})}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.Member.Apps.ContentController",function MemberAppContentController($scope,$filter,contentEditingHelper,contentTypeHelper){var vm=this;function setActiveTab(tab){vm.activeTabAlias=tab.alias,vm.tabs.forEach(function(tab){return tab.active=!1}),tab.active=!0}vm.tabs=[],vm.activeTabAlias=null,vm.setActiveTab=setActiveTab,vm.hideSystemProperties=function hideSystemProperties(property){return"_umb_id"!==property.alias&&"_umb_doctype"!==property.alias&&("readonlyvalue"!==property.view||!1===property.alias.startsWith("umbracoMember"))},$scope.$watchCollection("content.tabs",function(newValue){contentTypeHelper.defineParentAliasOnGroups(newValue),contentTypeHelper.relocateDisorientedGroups(newValue),vm.tabs=$filter("filter")(newValue,function(tab){return tab.type===contentTypeHelper.TYPE_TAB}),vm.tabs.length>0&&(contentEditingHelper.registerGenericTab(newValue),setActiveTab(vm.tabs[0]))})})}(),angular.module("umbraco").controller("Umbraco.Editors.Member.CreateController",memberCreateController),angular.module("umbraco").controller("Umbraco.Editors.Member.DeleteController",MemberDeleteController),angular.module("umbraco").controller("Umbraco.Editors.Member.EditController",MemberEditController),angular.module("umbraco").controller("Umbraco.Editors.Member.ListController",MemberListController),angular.module("umbraco").controller("Umbraco.Editors.MemberGroups.DeleteController",MemberGroupsDeleteController),angular.module("umbraco").controller("Umbraco.Editors.MemberGroups.EditController",MemberGroupsEditController),angular.module("umbraco").controller("Umbraco.Editors.MemberTypes.CopyController",function($scope,memberTypeResource,treeService,navigationService,notificationsService,appState,eventsService){function nodeSelectHandler(args){args.event.preventDefault(),args.event.stopPropagation(),$scope.target&&($scope.target.selected=!1),$scope.target=args.node,$scope.target.selected=!0}$scope.dialogTreeApi={},$scope.source=_.clone($scope.currentNode),$scope.copy=function(){$scope.busy=!0,$scope.error=!1,memberTypeResource.copy({parentId:$scope.target.id,id:$scope.source.id}).then(function(path){$scope.error=!1,$scope.success=!0,$scope.busy=!1;var activeNode=appState.getTreeState("selectedNode");navigationService.syncTree({tree:"memberTypes",path:path,forceReload:!0,activate:!1}).then(function(args){if(activeNode){var activeNodePath=treeService.getPath(activeNode).join();navigationService.syncTree({tree:"memberTypes",path:activeNodePath,forceReload:!1,activate:!0})}})},function(err){$scope.success=!1,$scope.error=err,$scope.busy=!1})},$scope.onTreeInit=function(){$scope.dialogTreeApi.callbacks.treeNodeSelect(nodeSelectHandler)},$scope.close=function(){navigationService.hideDialog()}}),angular.module("umbraco").controller("Umbraco.Editors.MemberTypes.CreateController",MemberTypesCreateController),angular.module("umbraco").controller("Umbraco.Editors.MemberTypes.DeleteController",MemberTypesDeleteController),function(){angular.module("umbraco").controller("Umbraco.Editors.MemberTypes.EditController",function MemberTypesEditController($scope,$routeParams,$q,memberTypeResource,editorState,iconHelper,navigationService,contentEditingHelper,notificationsService,localizationService,overlayHelper,contentTypeHelper,angularHelper,eventsService){var evts=[],vm=this,infiniteMode=$scope.model&&$scope.model.infiniteMode,memberTypeId=$routeParams.id,create=$routeParams.create,memberTypeIcon="";function loadMemberType(){vm.page.loading=!0,memberTypeResource.getById(memberTypeId).then(function(dt){init(dt),infiniteMode||syncTreeNode(vm.contentType,dt.path,!0),vm.page.loading=!1})}function init(contentType){!function convertLegacyIcons(contentType){var contentTypeArray=[];contentTypeArray.push({icon:contentType.icon}),iconHelper.formatContentTypeIcons(contentTypeArray),contentType.icon=contentTypeArray[0].icon}(contentType),editorState.set(contentType),vm.contentType=contentType,memberTypeIcon=contentType.icon}function syncTreeNode(dt,path,initialLoad){navigationService.syncTree({tree:"membertypes",path:path.split(","),forceReload:!0!==initialLoad}).then(function(syncArgs){vm.currentNode=syncArgs.node})}vm.save=function save(){if(0===overlayHelper.getNumberOfOverlays()){var deferred=$q.defer();return vm.page.saveButtonState="busy",contentEditingHelper.contentEditorPerformSave({saveMethod:memberTypeResource.save,scope:$scope,content:vm.contentType,rebindCallback:function rebindCallback(origContentType,savedContentType){vm.contentType.id=savedContentType.id,vm.contentType.groups.forEach(function(group){if(group.name){for(var k=0;k<savedContentType.groups.length&&savedContentType.groups[k].name!=group.name;)k++;if(k!=savedContentType.groups.length){var savedGroup=savedContentType.groups[k];group.id||(group.id=savedGroup.id),group.properties.forEach(function(property){if(!property.id&&property.alias){for(k=0;k<savedGroup.properties.length&&savedGroup.properties[k].alias!=property.alias;)k++;if(k!=savedGroup.properties.length){var savedProperty=savedGroup.properties[k];property.id=savedProperty.id}else property.id=0}})}else group.id=0}})}}).then(function(data){infiniteMode||syncTreeNode(vm.contentType,data.path);var args={memberType:vm.contentType};eventsService.emit("editors.memberType.saved",args),memberTypeIcon!==vm.contentType.icon&&eventsService.emit("editors.tree.icon.changed",args),vm.page.saveButtonState="success",infiniteMode&&$scope.model.submit&&$scope.model.submit(),deferred.resolve(data)},function(err){err?editorState.set($scope.content):localizationService.localize("speechBubbles_validationFailedHeader").then(function(headerValue){localizationService.localize("speechBubbles_validationFailedMessage").then(function(msgValue){notificationsService.error(headerValue,msgValue)})}),vm.page.saveButtonState="error",deferred.reject(err)}),deferred.promise}},vm.close=function close(){infiniteMode&&$scope.model.close&&$scope.model.close()},vm.editorfor="visuallyHiddenTexts_newMember",vm.header={},vm.header.editorfor="content_membergroup",vm.header.setPageTitle=!0,vm.currentNode=null,vm.contentType={},vm.page={},vm.page.loading=!1,vm.page.saveButtonState="init",vm.labels={},vm.saveButtonKey="buttons_save",vm.generateModelsKey="buttons_saveAndGenerateModels",function onInit(){infiniteMode&&(memberTypeId=$scope.model.id,create=$scope.model.create,vm.saveButtonKey="buttons_saveAndClose",vm.generateModelsKey="buttons_generateModelsAndClose")}(),localizationService.localizeMany(["general_design","shortcuts_shortcut","shortcuts_addGroup","shortcuts_addProperty","shortcuts_addEditor","shortcuts_editDataType"]).then(function(values){vm.labels.design=values[0],vm.labels.shortcut=values[1],vm.labels.addGroup=values[2],vm.labels.addProperty=values[3],vm.labels.addEditor=values[4],vm.labels.editDataType=values[5],vm.page.navigation=[{name:vm.labels.design,icon:"icon-document-dashed-line",view:"views/membertypes/views/design/design.html",active:!0}],vm.page.keyboardShortcutsOverview=[{name:vm.labels.shortcut,shortcuts:[{description:vm.labels.addGroup,keys:[{key:"alt"},{key:"shift"},{key:"g"}]},{description:vm.labels.addProperty,keys:[{key:"alt"},{key:"shift"},{key:"p"}]},{description:vm.labels.addEditor,keys:[{key:"alt"},{key:"shift"},{key:"e"}]},{description:vm.labels.editDataType,keys:[{key:"alt"},{key:"shift"},{key:"d"}]}]}]}),contentTypeHelper.checkModelsBuilderStatus().then(function(result){vm.page.modelsBuilder=result,result&&(vm.page.defaultButton={hotKey:"ctrl+s",hotKeyWhenHidden:!0,labelKey:vm.saveButtonKey,letter:"S",handler:function handler(){vm.save()}},vm.page.subButtons=[{hotKey:"ctrl+g",hotKeyWhenHidden:!0,labelKey:infiniteMode?"buttons_generateModelsAndClose":"buttons_saveAndGenerateModels",letter:"G",handler:function handler(){vm.page.saveButtonState="busy",vm.save().then(function(result){vm.page.saveButtonState="busy",localizationService.localize("modelsBuilder_buildingModels").then(function(headerValue){localizationService.localize("modelsBuilder_waitingMessage").then(function(msgValue){notificationsService.info(headerValue,msgValue)})}),contentTypeHelper.generateModels().then(function(result){result.lastError?(vm.page.saveButtonState="error",localizationService.localize("modelsBuilder_modelsExceptionInUlog").then(function(value){notificationsService.error(value)})):(contentTypeHelper.checkModelsBuilderStatus().then(function(statusResult){vm.page.modelsBuilder=statusResult}),vm.page.saveButtonState="init",localizationService.localize("modelsBuilder_modelsGenerated").then(function(value){notificationsService.success(value)}))},function(){vm.page.saveButtonState="error",localizationService.localize("modelsBuilder_modelsGeneratedError").then(function(value){notificationsService.error(value)})})})}}])}),create?(vm.page.loading=!0,memberTypeResource.getScaffold(memberTypeId).then(function(dt){init(dt),vm.page.loading=!1})):loadMemberType(),evts.push(eventsService.on("app.refreshEditor",function(name,error){loadMemberType()})),evts.push(eventsService.on("editors.groupsBuilder.changed",function(name,args){angularHelper.getCurrentForm($scope).$setDirty()})),$scope.$on("$destroy",function(){for(var e in evts)eventsService.unsubscribe(evts[e])})})}(),angular.module("umbraco").controller("Umbraco.Editors.MemberTypes.MoveController",function($scope){}),function(){angular.module("umbraco").controller("Umbraco.Editors.Packages.EditController",function EditController($scope,$location,$routeParams,umbRequestHelper,entityResource,packageResource,editorService,formHelper,localizationService){var vm=this,packageId=$routeParams.id,create=$routeParams.create;function loadResources(){entityResource.getAll("DocumentType").then(function(documentTypes){documentTypes.forEach(function(documentType){documentType.id=documentType.id.toString(),documentType.selected=-1!==vm.package.documentTypes.indexOf(documentType.id)}),vm.documentTypes=documentTypes}),entityResource.getAll("MediaType").then(function(mediaTypes){mediaTypes.forEach(function(mediaType){mediaType.id=mediaType.id.toString(),mediaType.selected=-1!==vm.package.mediaTypes.indexOf(mediaType.id)}),vm.mediaTypes=mediaTypes}),entityResource.getAll("Template").then(function(templates){templates.forEach(function(template){template.id=template.id.toString(),template.selected=vm.package.templates.indexOf(template.id)>=0}),vm.templates=templates}),entityResource.getAll("Stylesheet").then(function(stylesheets){stylesheets.forEach(function(stylesheet){stylesheet.selected=vm.package.stylesheets.indexOf(stylesheet.path)>=0}),vm.stylesheets=stylesheets}),entityResource.getAll("Script").then(function(scripts){scripts.forEach(function(script){script.selected=vm.package.scripts.indexOf(script.path)>=0}),vm.scripts=scripts}),entityResource.getAll("PartialView").then(function(partialViews){partialViews.forEach(function(view){view.selected=vm.package.partialViews.indexOf(view.path)>=0}),vm.partialViews=partialViews}),entityResource.getAll("Macro").then(function(macros){macros.forEach(function(macro){macro.id=macro.id.toString(),macro.selected=-1!==vm.package.macros.indexOf(macro.id)}),vm.macros=macros}),entityResource.getAll("Language").then(function(languages){languages.forEach(function(language){language.id=language.id.toString(),language.selected=-1!==vm.package.languages.indexOf(language.id)}),vm.languages=languages}),entityResource.getAll("DictionaryItem").then(function(dictionaryItems){dictionaryItems.forEach(function(dictionaryItem){dictionaryItem.id=dictionaryItem.id.toString(),dictionaryItem.selected=-1!==vm.package.dictionaryItems.indexOf(dictionaryItem.id)}),vm.dictionaryItems=dictionaryItems}),entityResource.getAll("DataType").then(function(dataTypes){dataTypes.forEach(function(dataType){dataType.id=dataType.id.toString(),dataType.selected=-1!==vm.package.dataTypes.indexOf(dataType.id)}),vm.dataTypes=dataTypes})}vm.showBackButton=!0,vm.loading=!0,vm.mediaNodeDisplayModels=[],vm.back=function back(){$location.path("packages/packages/created").search("create",null).search("packageId",null)},vm.createOrUpdatePackage=function createOrUpdatePackage(editPackageForm){vm.package.mediaUdis=vm.mediaPickerModel.value.split(",").filter(function(i){return i}),formHelper.submitForm({formCtrl:editPackageForm,scope:$scope})&&(vm.buttonState="busy",packageResource.savePackage(vm.package).then(function(updatedPackage){vm.package=updatedPackage,vm.buttonState="success",formHelper.resetForm({scope:$scope,formCtrl:editPackageForm}),create&&($location.path("packages/packages/edit/"+vm.package.id).search("create",null),$location.replace())},function(err){formHelper.resetForm({scope:$scope,formCtrl:editPackageForm,hasErrors:!0}),formHelper.handleError(err),vm.buttonState="error"}))},vm.removeContentItem=function removeContentItem(){vm.package.contentNodeId=null},vm.openContentPicker=function openContentPicker(){var contentPicker={submit:function submit(model){model.selection&&model.selection.length>0&&(vm.package.contentNodeId=model.selection[0].id.toString(),vm.contentNodeDisplayModel=model.selection[0]),editorService.close()},close:function close(){editorService.close()}};editorService.contentPicker(contentPicker)},vm.openViewPicker=function openViewPicker(){var controlPicker={title:"Select view",onlyInitialized:!1,filter:function filter(i){if(-1===i.name.indexOf(".html")&&-1===i.name.indexOf(".htm"))return!0},filterCssClass:"not-allowed",select:function select(node){var id=decodeURIComponent(node.id.replace(/\+/g," "));vm.package.packageView=id,editorService.close()},close:function close(){return editorService.close()}};editorService.filePicker(controlPicker)},vm.removePackageView=function removePackageView(){vm.package.packageView=null},vm.downloadFile=function downloadFile(id){var url=umbRequestHelper.getApiUrl("packageApiBaseUrl","DownloadCreatedPackage",{id:id});umbRequestHelper.downloadFile(url).then(function(){})},vm.selectDocumentType=function selectDocumentType(doctype){var index=vm.package.documentTypes.indexOf(doctype.id);-1===index?vm.package.documentTypes.push(doctype.id):vm.package.documentTypes.splice(index,1)},vm.selectMediaType=function selectMediaType(mediatype){var index=vm.package.mediaTypes.indexOf(mediatype.id);-1===index?vm.package.mediaTypes.push(mediatype.id):vm.package.mediaTypes.splice(index,1)},vm.selectTemplate=function selectTemplate(template){var index=vm.package.templates.indexOf(template.id);-1===index?vm.package.templates.push(template.id):vm.package.templates.splice(index,1)},vm.selectStyleSheet=function selectStyleSheet(stylesheet){var index=vm.package.stylesheets.indexOf(stylesheet.path);-1===index?vm.package.stylesheets.push(stylesheet.path):vm.package.stylesheets.splice(index,1)},vm.selectScript=function selectScript(script){var index=vm.package.scripts.indexOf(script.path);-1===index?vm.package.scripts.push(script.path):vm.package.scripts.splice(index,1)},vm.selectPartialView=function selectPartialView(view){var index=vm.package.partialViews.indexOf(view.path);-1===index?vm.package.partialViews.push(view.path):vm.package.partialViews.splice(index,1)},vm.selectMacro=function selectMacro(macro){var index=vm.package.macros.indexOf(macro.id);-1===index?vm.package.macros.push(macro.id):vm.package.macros.splice(index,1)},vm.selectLanguage=function selectLanguage(language){var index=vm.package.languages.indexOf(language.id);-1===index?vm.package.languages.push(language.id):vm.package.languages.splice(index,1)},vm.selectDictionaryItem=function selectDictionaryItem(dictionaryItem){var index=vm.package.dictionaryItems.indexOf(dictionaryItem.id);-1===index?vm.package.dictionaryItems.push(dictionaryItem.id):vm.package.dictionaryItems.splice(index,1)},vm.selectDataType=function selectDataType(dataType){var index=vm.package.dataTypes.indexOf(dataType.id);-1===index?vm.package.dataTypes.push(dataType.id):vm.package.dataTypes.splice(index,1)},vm.mediaPickerModel={hideLabel:!0,view:"mediapicker",value:"",config:{multiPicker:!0,allowEdit:!1}},vm.labels={},vm.versionRegex=/^(\d+\.)(\d+\.)(\*|\d+)$/,vm.aceOption={mode:"xml",theme:"chrome",showPrintMargin:!1,advanced:{fontSize:"14px",enableSnippets:!0,enableBasicAutocompletion:!0,enableLiveAutocompletion:!1},onLoad:function onLoad(_editor){vm.editor=_editor,vm.editor.setValue(vm.package.actions)}},function onInit(){create?(packageResource.getEmpty().then(function(scaffold){vm.package=scaffold,loadResources(),vm.loading=!1}),localizationService.localizeMany(["general_create","packager_includeAllChildNodes"]).then(function(values){vm.labels.button=values[0],vm.labels.includeAllChildNodes=values[1]})):(packageResource.getCreatedById(packageId).then(function(createdPackage){vm.package=createdPackage,loadResources(),vm.loading=!1,vm.package.contentNodeId&&entityResource.getById(vm.package.contentNodeId,"Document").then(function(entity){vm.contentNodeDisplayModel=entity}),vm.mediaPickerModel.value=vm.package.mediaUdis.join(",")}),localizationService.localizeMany(["buttons_save","packager_includeAllChildNodes"]).then(function(values){vm.labels.button=values[0],vm.labels.includeAllChildNodes=values[1]}))}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.Packages.OptionsController",function OptionsController($scope,$location,$routeParams,packageResource,umbRequestHelper){var vm=this;vm.showBackButton=!0,vm.loading=!0,vm.back=function back(){$location.path("packages/packages/installed").search("packageId",null)};var packageId=$routeParams.id;!function onInit(){packageResource.getInstalledByName(packageId).then(function(pck){vm.package=pck,$scope.package=pck,vm.loading=!1,pck.packageView=pck.packageView.startsWith("~/")?pck.packageView:pck.packageView.startsWith("/")?"~"+pck.packageView:"~/"+pck.packageView,pck.packageView=umbRequestHelper.convertVirtualToAbsolutePath(pck.packageView)})}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.Packages.OverviewController",function PackagesOverviewController($scope,$location,$routeParams,localizationService,localStorageService){var packageInstallData=localStorageService.get("packageInstallData"),packageUri=$routeParams.method;if(packageInstallData){if(localStorageService.remove("packageInstallData"),packageInstallData.postInstallationPath)return void $location.path(packageInstallData.postInstallationPath).search("packageId",packageInstallData.id);"installed"===packageInstallData&&(packageUri="installed")}var vm=this;vm.page={},vm.page.labels={},vm.page.name="",vm.page.navigation=[],function onInit(){(function loadNavigation(){localizationService.localizeMany(["sections_packages","packager_installed","packager_installLocal","packager_created"]).then(function(data){vm.page.labels.packages=data[0],vm.page.labels.installed=data[1],vm.page.labels.install=data[2],vm.page.labels.created=data[3],vm.page.navigation=[{name:vm.page.labels.packages,icon:"icon-cloud",view:"views/packages/views/repo.html",active:!packageUri||"repo"===packageUri,alias:"umbPackages",action:function action(){$location.path("/packages/packages/repo")}},{name:vm.page.labels.installed,icon:"icon-box",view:"views/packages/views/installed.html",active:"installed"===packageUri,alias:"umbInstalled",action:function action(){$location.path("/packages/packages/installed")}},{name:vm.page.labels.created,icon:"icon-files",view:"views/packages/views/created.html",active:"created"===packageUri,alias:"umbCreatedPackages",action:function action(){$location.path("/packages/packages/created")}}]})})(),function setPageName(){localizationService.localize("sections_packages").then(function(data){vm.page.name=data})}()}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.Packages.CreatedController",function CreatedController($timeout,$location,packageResource,localizationService,overlayService){var vm=this;vm.deleteCreatedPackage=function deleteCreatedPackage(event,index,createdPackage){event.stopPropagation(),event.preventDefault();var dialog={view:"views/packages/overlays/delete.html",package:createdPackage,submitButtonLabelKey:"contentTypeEditor_yesDelete",submitButtonStyle:"danger",submit:function submit(model){!function performDelete(index,createdPackage){createdPackage.deleteButtonState="busy",packageResource.deleteCreatedPackage(createdPackage.id).then(function(){vm.createdPackages.splice(index,1)},function(err){createdPackage.deleteButtonState="error"})}(index,createdPackage),overlayService.close()},close:function close(){overlayService.close()}};localizationService.localizeMany(["general_delete","defaultdialogs_confirmdelete"]).then(function(values){dialog.title=values[0],dialog.content=values[1],overlayService.open(dialog)})},vm.goToPackage=function goToPackage(createdPackage){$location.path("packages/packages/edit/"+createdPackage.id)},vm.createPackage=function createPackage(){$location.search("create",null),$location.path("packages/packages/edit/-1").search("create","true")},function onInit(){vm.createdPackages=[],packageResource.getAllCreated().then(function(createdPackages){vm.createdPackages=createdPackages},Utilities.noop)}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.Packages.InstalledController",function PackagesInstalledController($location,packageResource,localizationService){var vm=this;vm.confirmMigrations=function confirmMigrations(pck){vm.state="runMigration",vm.package=pck,vm.installState.state="",vm.installState.status=""},vm.packageOptions=function packageOptions(pck){$location.path("packages/packages/options/"+pck.name).search("packageId",null)},vm.runMigrations=function runMigrations(pck){vm.installState.state="running",packageResource.runMigrations(pck.name).then(function(packs){vm.installState.state="success",vm.installState.status=labels.packageMigrationsComplete,vm.installedPackages=packs},function(err){vm.installState.state="error",vm.installState.status=err.data.message})},vm.state="list",vm.installState={status:"",state:""},vm.package={};var labels={};!function init(){packageResource.getInstalled().then(function(packs){vm.installedPackages=packs}),localizationService.localizeMany(["packager_packageMigrationsComplete"]).then(function(values){labels.packageMigrationsComplete=values[0]})}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.Packages.RepoController",function PackagesRepoController($scope,$timeout,ourPackageRepositoryResource,$q,packageResource,localStorageService,localizationService){var vm=this;vm.packageViewState="packageList",vm.categories=[],vm.loading=!0,vm.pagination={pageNumber:1,totalPages:10,pageSize:24},vm.searchQuery="",vm.selectCategory=function selectCategory(selectedCategory,categories){for(var i=0;i<categories.length;i++){var category=categories[i];category.name===selectedCategory.name?!0===category.active?category.active=!1:category.active=!0:category.active=!1}vm.loading=!0,vm.searchQuery="";var searchCategory=!1===selectedCategory.active?"":selectedCategory.name;currSort=defaultSort,$q.all([ourPackageRepositoryResource.getPopular(8,searchCategory).then(function(pack){vm.popular=pack.packages}),ourPackageRepositoryResource.search(vm.pagination.pageNumber-1,vm.pagination.pageSize,currSort,searchCategory,vm.searchQuery).then(function(pack){vm.packages=pack.packages,vm.pagination.totalPages=Math.ceil(pack.total/vm.pagination.pageSize),vm.pagination.pageNumber=1})]).then(function(){vm.loading=!1})},vm.showPackageDetails=function showPackageDetails(selectedPackage){ourPackageRepositoryResource.getDetails(selectedPackage.id).then(function(pack){vm.package=pack,vm.packageViewState="packageDetails"})},vm.setPackageViewState=function setPackageViewState(state){state&&(vm.packageViewState=state)},vm.nextPage=function nextPage(pageNumber){ourPackageRepositoryResource.search(pageNumber-1,vm.pagination.pageSize,currSort,getActiveCategory(),vm.searchQuery).then(function(pack){vm.packages=pack.packages,vm.pagination.totalPages=Math.ceil(pack.total/vm.pagination.pageSize)})},vm.prevPage=function prevPage(pageNumber){ourPackageRepositoryResource.search(pageNumber-1,vm.pagination.pageSize,currSort,getActiveCategory(),vm.searchQuery).then(function(pack){vm.packages=pack.packages,vm.pagination.totalPages=Math.ceil(pack.total/vm.pagination.pageSize)})},vm.goToPage=function goToPage(pageNumber){ourPackageRepositoryResource.search(pageNumber-1,vm.pagination.pageSize,currSort,getActiveCategory(),vm.searchQuery).then(function(pack){vm.packages=pack.packages,vm.pagination.totalPages=Math.ceil(pack.total/vm.pagination.pageSize)})},vm.openLightbox=function openLightbox(itemIndex,items){vm.lightbox={show:!0,items:items,activeIndex:itemIndex}},vm.closeLightbox=function closeLightbox(){vm.lightbox.show=!1,vm.lightbox=null},vm.search=function search(searchQuery){vm.loading=!0,searchDebounced()},vm.installCompleted=!1;var defaultSort="Latest",currSort=defaultSort,canceler=null;function getActiveCategory(){if(""!==vm.searchQuery)return"";for(var i=0;i<vm.categories.length;i++)if(!0===vm.categories[i].active)return vm.categories[i].name;return""}var searchDebounced=_.debounce(function(e){$scope.$apply(function(){canceler?(canceler.resolve(),canceler=$q.defer()):canceler=$q.defer(),currSort=vm.searchQuery?"Default":"Latest",ourPackageRepositoryResource.search(vm.pagination.pageNumber-1,vm.pagination.pageSize,currSort,"",vm.searchQuery,canceler).then(function(pack){vm.packages=pack.packages,vm.pagination.totalPages=Math.ceil(pack.total/vm.pagination.pageSize),vm.pagination.pageNumber=1,vm.loading=!1,canceler=null})})},200);vm.reloadPage=function(){$timeout(function(){window.location.reload(!0)})},function init(){vm.loading=!0,$q.all([ourPackageRepositoryResource.getCategories().then(function(cats){vm.categories=cats.filter(function(cat){return"Umbraco Pro"!==cat.name})}),ourPackageRepositoryResource.getPopular(8).then(function(pack){vm.popular=pack.packages}),ourPackageRepositoryResource.search(vm.pagination.pageNumber-1,vm.pagination.pageSize,currSort).then(function(pack){vm.packages=pack.packages,vm.pagination.totalPages=Math.ceil(pack.total/vm.pagination.pageSize)})]).then(function(){vm.loading=!1})}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.PartialViewMacros.CreateController",function PartialViewMacrosCreateController($scope,codefileResource,$location,navigationService,formHelper,appState){var vm=this,node=$scope.currentNode;vm.snippets=[],vm.createFolderError="",vm.folderName="",vm.fileName="",vm.showSnippets=!1,vm.creatingFolder=!1,vm.showCreateFolder=function showCreateFolder(){vm.creatingFolder=!0},vm.createFolder=function createFolder(form){formHelper.submitForm({scope:$scope,formCtrl:form})&&codefileResource.createContainer("partialViewMacros",node.id,vm.folderName).then(function(saved){navigationService.hideMenu(),navigationService.syncTree({tree:"partialViewMacros",path:saved.path,forceReload:!0,activate:!0}),formHelper.resetForm({scope:$scope,formCtrl:form}),appState.getSectionState("currentSection")},function(err){formHelper.resetForm({scope:$scope,formCtrl:form,hasErrors:!0}),vm.createFolderError=err})},vm.createFile=function createFile(){$location.path("/settings/partialviewmacros/edit/"+node.id).search("create","true"),navigationService.hideMenu()},vm.createFileWithoutMacro=function createFileWithoutMacro(){$location.path("/settings/partialviewmacros/edit/"+node.id).search("create","true").search("nomacro","true"),navigationService.hideMenu()},vm.showCreateFromSnippet=function showCreateFromSnippet(){vm.showSnippets=!0},vm.createFileFromSnippet=function createFileFromSnippet(snippet){$location.path("/settings/partialviewmacros/edit/"+node.id).search("create","true").search("snippet",snippet.fileName),navigationService.hideMenu()},vm.close=function close(){navigationService.hideDialog(!0)},function onInit(){codefileResource.getSnippets("partialViewMacros").then(function(snippets){vm.snippets=snippets})}()})}(),angular.module("umbraco").controller("Umbraco.Editors.PartialViewMacros.DeleteController",PartialViewMacrosDeleteController),function(){angular.module("umbraco").controller("Umbraco.Editors.PartialViewMacros.EditController",function partialViewMacrosEditController($scope,$routeParams,codefileResource,assetsService,notificationsService,editorState,navigationService,appState,macroService,angularHelper,$timeout,contentEditingHelper,localizationService,templateHelper,macroResource,editorService){var vm=this;function completeSave(saved){localizationService.localize("speechBubbles_partialViewSavedHeader").then(function(headerValue){localizationService.localize("speechBubbles_partialViewSavedText").then(function(msgValue){notificationsService.success(headerValue,msgValue)})}),vm.partialViewMacro.id!==saved.id?contentEditingHelper.redirectToRenamedContent(saved.id):(vm.page.saveButtonState="success",vm.partialViewMacro=saved,editorState.set(vm.partialViewMacro),navigationService.syncTree({tree:"partialViewMacros",path:vm.partialViewMacro.path,forceReload:!0}).then(function(syncArgs){vm.page.menu.currentNode=syncArgs.node}),setFormState("pristine"))}function ready(partialViewMacro,syncTree){vm.page.loading=!1,vm.partialViewMacro=partialViewMacro,editorState.set(vm.partialViewMacro),syncTree&&navigationService.syncTree({tree:"partialViewMacros",path:vm.partialViewMacro.path,forceReload:!0}).then(function(syncArgs){vm.page.menu.currentNode=syncArgs.node}),vm.aceOption={mode:"razor",theme:"chrome",showPrintMargin:!1,advanced:{fontSize:"14px"},onLoad:function onLoad(_editor){vm.editor=_editor,$routeParams.create||$timeout(function(){vm.editor.navigateFileEnd(),vm.editor.focus(),persistCurrentLocation()}),vm.editor.on("blur",persistCurrentLocation),vm.editor.on("focus",persistCurrentLocation),vm.editor.on("change",changeAceEditor)}}}function insert(str){vm.editor.focus(),vm.editor.moveCursorToPosition(vm.currentPosition),vm.editor.insert(str),setFormState("dirty")}function persistCurrentLocation(){vm.currentPosition=vm.editor.getCursorPosition()}function changeAceEditor(){setFormState("dirty")}function setFormState(state){var currentForm=angularHelper.getCurrentForm($scope);"dirty"===state?currentForm.$setDirty():"pristine"===state&&currentForm.$setPristine()}vm.header={},vm.header.editorfor="visuallyHiddenTexts_newPartialViewMacro",vm.header.setPageTitle=!0,vm.page={},vm.page.loading=!0,vm.partialViewMacroFile={},vm.page.menu={},vm.page.menu.currentSection=appState.getSectionState("currentSection"),vm.page.menu.currentNode=null,vm.page.insertDefaultButton={labelKey:"general_insert",addEllipsis:"true",handler:function handler(){vm.openInsertOverlay()}},vm.page.insertSubButtons=[{labelKey:"template_insertPageField",addEllipsis:"true",handler:function handler(){vm.openPageFieldOverlay()}},{labelKey:"template_insertMacro",addEllipsis:"true",handler:function handler(){vm.openMacroOverlay()}},{labelKey:"template_insertDictionaryItem",addEllipsis:"true",handler:function handler(){vm.openDictionaryItemOverlay()}}],vm.save=function save(){vm.page.saveButtonState="busy",vm.partialViewMacro.content=vm.editor.getValue(),contentEditingHelper.contentEditorPerformSave({saveMethod:codefileResource.save,scope:$scope,content:vm.partialViewMacro,rebindCallback:function rebindCallback(orignal,saved){}}).then(function(saved){$routeParams.create&&"true"!==$routeParams.nomacro?macroResource.createPartialViewMacroWithFile(saved.virtualPath,saved.name).then(function(created){navigationService.syncTree({tree:"macros",path:"-1,new",forceReload:!0,activate:!1}),completeSave(saved)},Utilities.noop):completeSave(saved)},function(err){vm.page.saveButtonState="error",localizationService.localize("speechBubbles_validationFailedHeader").then(function(headerValue){localizationService.localize("speechBubbles_validationFailedMessage").then(function(msgValue){notificationsService.error(headerValue,msgValue)})})})},vm.openPageFieldOverlay=function openPageFieldOverlay(){var insertFieldEditor={submit:function submit(model){insert(model.umbracoField),editorService.close()},close:function close(){editorService.close(),vm.editor.focus()}};editorService.insertField(insertFieldEditor)},vm.openDictionaryItemOverlay=function openDictionaryItemOverlay(){localizationService.localizeMany(["template_insertDictionaryItem","emptyStates_emptyDictionaryTree"]).then(function(values){var title=values[0],emptyStateMessage=values[1],dictionaryPicker={section:"translation",treeAlias:"dictionary",entityType:"dictionary",multiPicker:!1,title:title,emptyStateMessage:emptyStateMessage,select:function select(node){var code=templateHelper.getInsertDictionarySnippet(node.name);insert(code),editorService.close()},close:function close(model){editorService.close(),vm.editor.focus()}};editorService.treePicker(dictionaryPicker)})},vm.openQueryBuilderOverlay=function openQueryBuilderOverlay(){var queryBuilder={submit:function submit(model){var code=templateHelper.getQuerySnippet(model.result.queryExpression);insert(code),editorService.close()},close:function close(model){editorService.close(),vm.editor.focus()}};editorService.queryBuilder(queryBuilder)},vm.openMacroOverlay=function openMacroOverlay(){var macroPicker={dialogData:{},submit:function submit(model){var macroObject=macroService.collectValueData(model.selectedMacro,model.macroParams,"Mvc");insert(macroObject.syntax),editorService.close()},close:function close(){editorService.close(),vm.editor.focus()}};editorService.macroPicker(macroPicker)},vm.openInsertOverlay=function openInsertOverlay(){var insertOverlay={allowedTypes:{macro:!0,dictionary:!0,umbracoField:!0},submit:function submit(model){switch(model.insert.type){case"macro":var macroObject=macroService.collectValueData(model.insert.selectedMacro,model.insert.macroParams,"Mvc");insert(macroObject.syntax);break;case"dictionary":var code=templateHelper.getInsertDictionarySnippet(model.insert.node.name);insert(code);break;case"umbracoField":insert(model.insert.umbracoField)}editorService.close()},close:function close(oldModel){editorService.close(),vm.editor.focus()}};editorService.insertCodeSnippet(insertOverlay)},function init(){if(assetsService.loadCss("lib/ace-razor-mode/theme/razor_chrome.css",$scope),$routeParams.create){var snippet="Empty";$routeParams.snippet&&(snippet=$routeParams.snippet),codefileResource.getScaffold("partialViewMacros",$routeParams.id,snippet).then(function(partialViewMacro){$routeParams.name&&(partialViewMacro.name=$routeParams.name),ready(partialViewMacro,!1)})}else codefileResource.getByPath("partialViewMacros",$routeParams.id).then(function(partialViewMacro){ready(partialViewMacro,!0)})}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.PartialViews.CreateController",function PartialViewsCreateController($scope,codefileResource,$location,navigationService,formHelper,appState){var vm=this,node=$scope.currentNode;vm.snippets=[],vm.showSnippets=!1,vm.creatingFolder=!1,vm.createFolderError="",vm.folderName="",vm.createPartialView=function createPartialView(selectedSnippet){var snippet=null;selectedSnippet&&selectedSnippet.fileName&&(snippet=selectedSnippet.fileName),$location.path("/settings/partialviews/edit/"+node.id).search("create","true").search("snippet",snippet),navigationService.hideMenu()},vm.showCreateFolder=function showCreateFolder(){vm.creatingFolder=!0},vm.createFolder=function createFolder(form){formHelper.submitForm({scope:$scope,formCtrl:form})&&codefileResource.createContainer("partialViews",node.id,vm.folderName).then(function(saved){navigationService.hideMenu(),navigationService.syncTree({tree:"partialViews",path:saved.path,forceReload:!0,activate:!0}),formHelper.resetForm({scope:$scope,formCtrl:form}),appState.getSectionState("currentSection")},function(err){formHelper.resetForm({scope:$scope,formCtrl:form,hasErrors:!0}),vm.createFolderError=err})},vm.showCreateFromSnippet=function showCreateFromSnippet(){vm.showSnippets=!0},vm.close=function close(){navigationService.hideDialog(!0)},function onInit(){codefileResource.getSnippets("partialViews").then(function(snippets){vm.snippets=snippets})}()})}(),angular.module("umbraco").controller("Umbraco.Editors.PartialViews.DeleteController",PartialViewsDeleteController),function(){angular.module("umbraco").controller("Umbraco.Editors.PartialViews.EditController",function PartialViewsEditController($scope,$routeParams,codefileResource,assetsService,notificationsService,editorState,navigationService,appState,macroService,angularHelper,$timeout,contentEditingHelper,localizationService,templateHelper,editorService){var vm=this,infiniteMode=$scope.model&&$scope.model.infiniteMode,id=infiniteMode?$scope.model.id:$routeParams.id,create=infiniteMode?$scope.model.create:$routeParams.create,snippet=infiniteMode?$scope.model.snippet:$routeParams.snippet;function openMacroOverlay(){var macroPicker={dialogData:{},submit:function submit(model){insert(macroService.collectValueData(model.selectedMacro,model.macroParams,"Mvc").syntax),editorService.close()},close:function close(){editorService.close(),vm.editor.focus()}};editorService.macroPicker(macroPicker)}function openPageFieldOverlay(){var insertFieldEditor={submit:function submit(model){insert(model.umbracoField),editorService.close()},close:function close(){editorService.close(),vm.editor.focus()}};editorService.insertField(insertFieldEditor)}function openDictionaryItemOverlay(){localizationService.localizeMany(["template_insertDictionaryItem","emptyStates_emptyDictionaryTree"]).then(function(values){var dictionaryItem={section:"translation",treeAlias:"dictionary",entityType:"dictionary",multiPicker:!1,title:values[0],emptyStateMessage:values[1],select:function select(node){insert(templateHelper.getInsertDictionarySnippet(node.name)),editorService.close()},close:function close(model){editorService.close(),vm.editor.focus()}};editorService.treePicker(dictionaryItem)})}function openQueryBuilderOverlay(){var queryBuilder={title:"Query for content",submit:function submit(model){insert(templateHelper.getQuerySnippet(model.result.queryExpression)),editorService.close()},close:function close(){editorService.close(),vm.editor.focus()}};editorService.queryBuilder(queryBuilder)}function ready(partialView,syncTree){vm.page.loading=!1,vm.partialView=partialView,editorState.set(vm.partialView),!infiniteMode&&syncTree&&navigationService.syncTree({tree:"partialViews",path:vm.partialView.path,forceReload:!0}).then(function(syncArgs){vm.page.menu.currentNode=syncArgs.node}),vm.aceOption={mode:"razor",theme:"chrome",showPrintMargin:!1,advanced:{fontSize:"14px"},onLoad:function onLoad(_editor){vm.editor=_editor,_editor.commands.bindKey("ctrl-alt-space","startAutocomplete"),_editor.commands.bindKey("ctrl-space",null),_editor.commands.addCommands([{name:"unSelectOrFindPrevious",bindKey:"Alt-Shift-K",exec:function exec(){$scope.$apply(function(){vm.showKeyboardShortcut=!vm.showKeyboardShortcut})},readOnly:!0},{name:"insertUmbracoValue",bindKey:"Alt-Shift-V",exec:function exec(){$scope.$apply(function(){openPageFieldOverlay()})},readOnly:!0},{name:"insertDictionary",bindKey:"Alt-Shift-D",exec:function exec(){$scope.$apply(function(){openDictionaryItemOverlay()})},readOnly:!0},{name:"insertUmbracoMacro",bindKey:"Alt-Shift-M",exec:function exec(){$scope.$apply(function(){openMacroOverlay()})},readOnly:!0},{name:"insertQuery",bindKey:"Alt-Shift-Q",exec:function exec(){$scope.$apply(function(){openQueryBuilderOverlay()})},readOnly:!0}]),create||$timeout(function(){vm.editor.navigateFileEnd(),vm.editor.focus(),persistCurrentLocation()}),vm.editor.on("blur",persistCurrentLocation),vm.editor.on("focus",persistCurrentLocation),vm.editor.on("change",changeAceEditor)}}}function insert(str){vm.editor.focus(),vm.editor.moveCursorToPosition(vm.currentPosition),vm.editor.insert(str),setFormState("dirty")}function persistCurrentLocation(){vm.currentPosition=vm.editor.getCursorPosition()}function changeAceEditor(){setFormState("dirty")}function setFormState(state){var currentForm=angularHelper.getCurrentForm($scope);"dirty"===state?currentForm.$setDirty():"pristine"===state&&currentForm.$setPristine()}vm.close=function close(){$scope.model.close&&$scope.model.close($scope.model)},vm.header={},vm.header.editorfor="visuallyHiddenTexts_newPartialView",vm.header.setPageTitle=!0,vm.page={},vm.page.loading=!0,vm.partialView={},vm.page.menu={},vm.page.menu.currentSection=appState.getSectionState("currentSection"),vm.page.menu.currentNode=null,vm.page.insertDefaultButton={labelKey:"general_insert",addEllipsis:"true",handler:function handler(){vm.openInsertOverlay()}},vm.page.insertSubButtons=[{labelKey:"template_insertPageField",addEllipsis:"true",handler:function handler(){vm.openPageFieldOverlay()}},{labelKey:"template_insertMacro",addEllipsis:"true",handler:function handler(){vm.openMacroOverlay()}},{labelKey:"template_insertDictionaryItem",addEllipsis:"true",handler:function handler(){vm.openDictionaryItemOverlay()}}],vm.showKeyboardShortcut=!1,vm.page.keyboardShortcutsOverview=[],templateHelper.getGeneralShortcuts().then(function(data){vm.page.keyboardShortcutsOverview.push(data)}),templateHelper.getEditorShortcuts().then(function(data){vm.page.keyboardShortcutsOverview.push(data)}),templateHelper.getPartialViewEditorShortcuts().then(function(data){vm.page.keyboardShortcutsOverview.push(data)}),vm.save=function save(){vm.page.saveButtonState="busy",vm.partialView.content=vm.editor.getValue(),contentEditingHelper.contentEditorPerformSave({saveMethod:codefileResource.save,scope:$scope,content:vm.partialView,rebindCallback:function rebindCallback(orignal,saved){}}).then(function(saved){localizationService.localize("speechBubbles_partialViewSavedHeader").then(function(headerValue){localizationService.localize("speechBubbles_partialViewSavedText").then(function(msgValue){notificationsService.success(headerValue,msgValue)})}),vm.partialView.id!==saved.id?contentEditingHelper.redirectToRenamedContent(saved.id):(vm.page.saveButtonState="success",vm.partialView=saved,editorState.set(vm.partialView),navigationService.syncTree({tree:"partialViews",path:vm.partialView.path,forceReload:!0}).then(function(syncArgs){vm.page.menu.currentNode=syncArgs.node}),setFormState("pristine"))},function(err){vm.page.saveButtonState="error",localizationService.localize("speechBubbles_validationFailedHeader").then(function(headerValue){localizationService.localize("speechBubbles_validationFailedMessage").then(function(msgValue){notificationsService.error(headerValue,msgValue)})})})},vm.openPageFieldOverlay=openPageFieldOverlay,vm.openDictionaryItemOverlay=openDictionaryItemOverlay,vm.openQueryBuilderOverlay=openQueryBuilderOverlay,vm.openMacroOverlay=openMacroOverlay,vm.openInsertOverlay=function openInsertOverlay(){var insertOverlay={allowedTypes:{macro:!0,dictionary:!0,umbracoField:!0},submit:function submit(model){switch(model.insert.type){case"macro":var macroObject=macroService.collectValueData(model.insert.selectedMacro,model.insert.macroParams,"Mvc");insert(macroObject.syntax);break;case"dictionary":var code=templateHelper.getInsertDictionarySnippet(model.insert.node.name);insert(code);break;case"umbracoField":insert(model.insert.umbracoField)}editorService.close()},close:function close(){editorService.close(),vm.editor.focus()}};editorService.insertCodeSnippet(insertOverlay)},function init(){assetsService.loadCss("lib/ace-razor-mode/theme/razor_chrome.css",$scope),create?(snippet||(snippet="Empty"),codefileResource.getScaffold("partialViews",id,snippet).then(function(partialView){ready(partialView,!1)})):codefileResource.getByPath("partialViews",id).then(function(partialView){ready(partialView,!0)})}()})}(),angular.module("umbraco").controller("Umbraco.PrevalueEditors.BooleanController",function($scope){function updateToggleValue(){$scope.toggleValue=!1,$scope.model&&Object.toBoolean($scope.model.value)&&($scope.toggleValue=!0)}null===$scope.model.value&&($scope.model.value="0"),updateToggleValue(),$scope.toggle=function(){if(Object.toBoolean($scope.model.value))return $scope.model.value="0",void updateToggleValue();$scope.model.value="1",updateToggleValue()}}),angular.module("umbraco").controller("Umbraco.PrevalueEditors.CheckboxListController",function($scope){var vm=this;vm.configItems=[],vm.viewItems=[],vm.change=function change(model,value){var index=$scope.model.value.indexOf(value);!0===model?index<0&&$scope.model.value.push(value):index>=0&&$scope.model.value.splice(index,1)},function init(){for(var prevalues=($scope.model.config?$scope.model.config.prevalues:$scope.model.prevalues)||[],items=[],i=0;i<prevalues.length;i++){var item={};Utilities.isObject(prevalues[i])?(item.value=prevalues[i].value,item.label=prevalues[i].label):(item.value=prevalues[i],item.label=prevalues[i]),items.push({value:item.value,label:item.label})}vm.configItems=items,null!==$scope.model.value&&void 0!==$scope.model.value||($scope.model.value=[]),function generateViewModel(newVal){var iConfigItem;vm.viewItems=[];for(var i=0;i<vm.configItems.length;i++){iConfigItem=vm.configItems[i];var isChecked=_.contains(newVal,iConfigItem.value);vm.viewItems.push({checked:isChecked,value:iConfigItem.value,label:iConfigItem.label})}}($scope.model.value)}()}),angular.module("umbraco").controller("Umbraco.PrevalueEditors.ColorPickerController",function($scope){var config={useLabel:!1};Utilities.extend(config,$scope.model.config),$scope.model.config=config,$scope.isConfigured=$scope.model.prevalues&&_.keys($scope.model.prevalues).length>0,$scope.model.items=[];var str,items=[];if(Utilities.isArray($scope.model.prevalues)){for(var i in $scope.model.prevalues){var oldValue=$scope.model.prevalues[i];if(str=oldValue.value||oldValue,/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(str))if(oldValue.hasOwnProperty("value")){var hexCode=toFullHex(oldValue.value);items.push({value:hexCode.substr(1,hexCode.length),label:oldValue.label,id:i})}else{hexCode=toFullHex(oldValue);items.push({value:hexCode.substr(1,hexCode.length),label:oldValue,id:i})}}$scope.model.items=items}function toFullHex(hex){return 4===hex.length&&"#"===hex.charAt(0)&&(hex="#"+hex.charAt(1)+hex.charAt(1)+hex.charAt(2)+hex.charAt(2)+hex.charAt(3)+hex.charAt(3)),hex.toLowerCase()}}),angular.module("umbraco").controller("Umbraco.PrevalueEditors.ImageFilePickerController",imageFilePickerController),angular.module("umbraco").controller("Umbraco.PrevalueEditors.MediaFolderPickerController",mediaFolderPickerController),angular.module("umbraco").controller("Umbraco.PrevalueEditors.MediaPickerController",mediaPickerController),angular.module("umbraco").controller("Umbraco.PrevalueEditors.MultiValuesController",function($scope,$timeout){if($scope.newItem="",$scope.hasError=!1,$scope.focusOnNew=!1,!Utilities.isArray($scope.model.value)){var items=[];for(var i in $scope.model.value)items.push({value:$scope.model.value[i].value,sortOrder:$scope.model.value[i].sortOrder,id:i});items.sort(function(a,b){return a.sortOrder>b.sortOrder?1:b.sortOrder>a.sortOrder?-1:0}),$scope.model.value=items}$scope.remove=function(item,evt){evt.preventDefault(),$scope.model.value=_.reject($scope.model.value,function(x){return x.value===item.value})},$scope.add=function(evt){if(evt.preventDefault(),$scope.newItem&&!_.contains($scope.model.value,$scope.newItem))return $scope.model.value.push({value:$scope.newItem}),$scope.newItem="",$scope.hasError=!1,void($scope.focusOnNew=!0);$scope.hasError=!0},$scope.sortableOptions={axis:"y",containment:"parent",cursor:"move",items:"> div.control-group",tolerance:"pointer",update:function update(e,ui){var newIndex=ui.item.index(),originalIndex=function getElementIndexByPrevalueText(value){for(var i=0;i<$scope.model.value.length;i++)if($scope.model.value[i].value===value)return i;return-1}($('input[type="text"]',ui.item).val());if(originalIndex>-1){var movedElement=$scope.model.value[originalIndex];$scope.model.value.splice(originalIndex,1),$scope.model.value.splice(newIndex,0,movedElement)}}},$scope.createNew=function(event){13==event.keyCode&&$scope.add(event)}}),angular.module("umbraco").controller("Umbraco.PrevalueEditors.TreePickerController",function($scope,entityResource,iconHelper,editorService){$scope.renderModel=[],$scope.ids=[],$scope.allowRemove=!0,$scope.allowEdit=!0,$scope.sortable=!1;var config={multiPicker:!1,entityType:"Document",type:"content",treeAlias:"content",idType:"udi"};$scope.model.config&&Utilities.extend(config,$scope.model.config),$scope.model.value&&(Array.isArray($scope.model.value)?$scope.ids.push($scope.model.value):$scope.ids=$scope.model.value.split(","),entityResource.getByIds($scope.ids,config.entityType).then(function(data){_.each(data,function(item,i){item.icon=iconHelper.convertFromLegacyIcon(item.icon),$scope.renderModel.push({name:item.name,id:item.id,icon:item.icon,udi:item.udi});var itemRenderIndex=$scope.renderModel.length-1;entityResource.getUrl(item.id,config.entityType).then(function(data){$scope.renderModel[itemRenderIndex].path=data})})})),$scope.openTreePicker=function(){var treePicker=config;treePicker.section=config.type,treePicker.submit=function(model){populate(config.multiPicker?model.selection:model.selection[0]),editorService.close()},treePicker.close=function(){editorService.close()},editorService.treePicker(treePicker)},$scope.remove=function(index){$scope.renderModel.splice(index,1),$scope.ids.splice(index,1),$scope.model.value=trim($scope.ids.join(),",")},$scope.clear=function(){$scope.model.value="",$scope.renderModel=[],$scope.ids=[]},$scope.add=function(item){var itemId="udi"===config.idType?item.udi:item.id;if($scope.ids.indexOf(itemId)<0){item.icon=iconHelper.convertFromLegacyIcon(item.icon),$scope.ids.push(itemId),$scope.renderModel.push({name:item.name,id:item.id,icon:item.icon,udi:item.udi}),$scope.model.value=trim($scope.ids.join(),",");var itemRenderIndex=$scope.renderModel.length-1;entityResource.getUrl(item.id,config.entityType).then(function(data){$scope.renderModel[itemRenderIndex].path=data})}};var unsubscribe=$scope.$on("formSubmitting",function(ev,args){$scope.model.value=trim($scope.ids.join(),",")});function trim(str,chr){var rgxtrim=chr?new RegExp("^"+chr+"+|"+chr+"+$","g"):new RegExp("^\\s+|\\s+$","g");return str.replace(rgxtrim,"")}function populate(data){Utilities.isArray(data)?_.each(data,function(item,i){$scope.add(item)}):($scope.clear(),$scope.add(data))}$scope.$on("$destroy",function(){unsubscribe()})}),angular.module("umbraco").controller("Umbraco.PrevalueEditors.TreeSourceController",function($scope,$timeout,entityResource,iconHelper,editorService,eventsService){function entityType(){var ent="Document";return"media"===$scope.model.value.type?ent="Media":"member"===$scope.model.value.type&&(ent="Member"),ent}function treeSourceChanged(){eventsService.emit("treeSourceChanged",{value:$scope.model.value.type})}$scope.model||($scope.model={}),$scope.model.value||($scope.model.value={type:"content"}),$scope.model.config||($scope.model.config={idType:"udi"}),$scope.model.value.id&&"member"!==$scope.model.value.type?entityResource.getById($scope.model.value.id,entityType()).then(function(item){populate(item)}):$timeout(function(){treeSourceChanged()},100),$scope.openContentPicker=function(){var treePicker={idType:$scope.model.config.idType,section:$scope.model.value.type,treeAlias:$scope.model.value.type,multiPicker:!1,submit:function submit(model){populate(model.selection[0]),editorService.close()},close:function close(){editorService.close()}};editorService.treePicker(treePicker)},$scope.clear=function(){$scope.model.value.id=null,$scope.node=null,$scope.model.value.query=null,treeSourceChanged()};var unsubscribe=$scope.$on("formSubmitting",function(ev,args){"member"===$scope.model.value.type&&($scope.model.value.id=null,$scope.model.value.query="")});function populate(item){$scope.clear(),item.icon=iconHelper.convertFromLegacyIcon(item.icon),$scope.node=item,$scope.node.path="",$scope.model.value.id="udi"===$scope.model.config.idType?item.udi:item.id,entityResource.getUrl(item.id,entityType()).then(function(data){$scope.node.path=data})}$scope.$on("$destroy",function(){unsubscribe()})}),angular.module("umbraco").controller("Umbraco.PrevalueEditors.TreeSourceTypePickerController",TreeSourceTypePickerController),function(){angular.module("umbraco").controller("Umbraco.PropertyEditors.BlockEditor.InlineBlockEditor",function InlineBlockEditor($scope){this.openBlock=function(block){!0===block.active?($scope.$broadcast("formSubmitting",{scope:$scope}),$scope.$broadcast("formSubmittingFinalPhase",{scope:$scope}),block.active=!1):$scope.api.activateBlock(block)}})}(),function(){angular.module("umbraco").controller("Umbraco.PropertyEditors.BlockList.BlockConfigurationController",function BlockConfigurationController($scope,elementTypeResource,overlayService,localizationService,editorService,eventsService,udiService){var unsubscribe=[],vm=this;function loadElementTypes(){return elementTypeResource.getAll().then(function(elementTypes){vm.elementTypes=elementTypes})}vm.openBlock=null,unsubscribe.push(eventsService.on("editors.documentType.saved",function updateUsedElementTypes(event,args){for(var key=args.documentType.key,i=0;i<vm.elementTypes.length;i++)vm.elementTypes[i].key===key&&(vm.elementTypes[i]=args.documentType)})),vm.requestRemoveBlockByIndex=function(index){localizationService.localizeMany(["general_delete","blockEditor_confirmDeleteBlockTypeMessage","blockEditor_confirmDeleteBlockTypeNotice"]).then(function(data){var contentElementType=vm.getElementTypeByKey($scope.model.value[index].contentElementTypeKey);overlayService.confirmDelete({title:data[0],content:localizationService.tokenReplace(data[1],[contentElementType?contentElementType.name:"(Unavailable ElementType)"]),confirmMessage:data[2],close:function close(){overlayService.close()},submit:function submit(){vm.removeBlockByIndex(index),overlayService.close()}})})},vm.removeBlockByIndex=function(index){$scope.model.value.splice(index,1)},vm.sortableOptions={"ui-floating":!0,items:"umb-block-card",cursor:"grabbing",placeholder:"umb-block-card --sortable-placeholder"},vm.getAvailableElementTypes=function(){return vm.elementTypes.filter(function(type){return!$scope.model.value.find(function(entry){return type.key===entry.contentElementTypeKey})})},vm.getElementTypeByKey=function(key){if(vm.elementTypes)return vm.elementTypes.find(function(type){return type.key===key})||null},vm.openAddDialog=function(){localizationService.localize("blockEditor_headlineCreateBlock").then(function(localizedTitle){var contentTypePicker={title:localizedTitle,section:"settings",treeAlias:"documentTypes",entityType:"documentType",isDialog:!0,filter:function filter(node){if(!0===node.metaData.isElement){var key=udiService.getKey(node.udi);return $scope.model.value.find(function(entry){return key===entry.contentElementTypeKey})}return!0},filterCssClass:"not-allowed",select:function select(node){vm.addBlockFromElementTypeKey(udiService.getKey(node.udi)),editorService.close()},close:function close(){editorService.close()},extraActions:[{style:"primary",labelKey:"blockEditor_labelcreateNewElementType",action:function action(){vm.createElementTypeAndCallback(function(documentTypeKey){vm.addBlockFromElementTypeKey(documentTypeKey),editorService.close()})}}]};editorService.treePicker(contentTypePicker)})},vm.createElementTypeAndCallback=function(callback){var _editor,editor=(_defineProperty(_editor={create:!0,infiniteMode:!0,noTemplate:!0,isElement:!0},"noTemplate",!0),_defineProperty(_editor,"submit",function submit(model){loadElementTypes().then(function(){callback(model.documentTypeKey)}),editorService.close()}),_defineProperty(_editor,"close",function close(){editorService.close()}),_editor);editorService.documentTypeEditor(editor)},vm.addBlockFromElementTypeKey=function(key){var blockType={contentElementTypeKey:key,settingsElementTypeKey:null,labelTemplate:"",view:null,stylesheet:null,editorSize:"medium",iconColor:null,backgroundColor:null,thumbnail:null};$scope.model.value.push(blockType),vm.openBlockOverlay(blockType)},vm.openBlockOverlay=function(block){var elementType=vm.getElementTypeByKey(block.contentElementTypeKey);elementType?localizationService.localize("blockEditor_blockConfigurationOverlayTitle",[elementType.name]).then(function(data){var clonedBlockData=Utilities.copy(block);vm.openBlock=block;var overlayModel={block:clonedBlockData,title:data,view:"views/propertyeditors/blocklist/prevalue/blocklist.blockconfiguration.overlay.html",size:"small",submit:function submit(overlayModel){loadElementTypes(),function TransferProperties(fromObject,toObject){for(var p in fromObject)toObject[p]=fromObject[p]}(overlayModel.block,block),overlayModel.close()},close:function close(){editorService.close(),vm.openBlock=null}};editorService.open(overlayModel)}):alert("Cannot be edited cause ElementType does not exist.")},$scope.$on("$destroy",function(){unsubscribe.forEach(function(u){u()})}),function onInit(){$scope.model.value||($scope.model.value=[]),loadElementTypes()}()})}(),function(){angular.module("umbraco").controller("Umbraco.PropertyEditors.BlockList.BlockConfigurationOverlayController",function BlockConfigurationOverlayController($scope,overlayService,localizationService,editorService,elementTypeResource,eventsService,udiService,angularHelper){var unsubscribe=[],vm=this;vm.block=$scope.model.block,vm.colorPickerOptions={type:"color",allowEmpty:!0,showAlpha:!0},function loadElementTypes(){return elementTypeResource.getAll().then(function(elementTypes){vm.elementTypes=elementTypes,vm.contentPreview=vm.getElementTypeByKey(vm.block.contentElementTypeKey),vm.settingsPreview=vm.getElementTypeByKey(vm.block.settingsElementTypeKey)})}(),vm.getElementTypeByKey=function(key){return vm.elementTypes.find(function(type){return type.key===key})},vm.openElementType=function(elementTypeKey){var elementType=vm.getElementTypeByKey(elementTypeKey);if(elementType){var editor={id:elementType.id,submit:function submit(model){editorService.close()},close:function close(){editorService.close()}};editorService.documentTypeEditor(editor)}},vm.createElementTypeAndCallback=function(callback){var editor={create:!0,infiniteMode:!0,isElement:!0,noTemplate:!0,submit:function submit(model){callback(model.documentTypeKey),editorService.close()},close:function close(){editorService.close()}};editorService.documentTypeEditor(editor)},vm.addSettingsForBlock=function($event,block){localizationService.localize("blockEditor_headlineAddSettingsElementType").then(function(localizedTitle){var settingsTypePicker={title:localizedTitle,entityType:"documentType",isDialog:!0,filter:function filter(node){return!0!==node.metaData.isElement},filterCssClass:"not-allowed",select:function select(node){vm.applySettingsToBlock(block,udiService.getKey(node.udi)),editorService.close()},close:function close(){return editorService.close()},extraActions:[{style:"primary",labelKey:"blockEditor_labelcreateNewElementType",action:function action(){vm.createElementTypeAndCallback(function(key){vm.applySettingsToBlock(block,key),editorService.close()})}}]};editorService.contentTypePicker(settingsTypePicker)})},vm.applySettingsToBlock=function(block,key){block.settingsElementTypeKey=key,vm.settingsPreview=vm.getElementTypeByKey(vm.block.settingsElementTypeKey)},vm.requestRemoveSettingsForBlock=function(block){localizationService.localizeMany(["general_remove","defaultdialogs_confirmremoveusageof"]).then(function(data){var settingsElementType=vm.getElementTypeByKey(block.settingsElementTypeKey);overlayService.confirmRemove({title:data[0],content:localizationService.tokenReplace(data[1],[settingsElementType?settingsElementType.name:"(Unavailable ElementType)"]),close:function close(){overlayService.close()},submit:function submit(){vm.removeSettingsForBlock(block),overlayService.close()}})})},vm.removeSettingsForBlock=function(block){block.settingsElementTypeKey=null},unsubscribe.push(eventsService.on("editors.documentType.saved",function updateUsedElementTypes(event,args){for(var key=args.documentType.key,i=0;i<vm.elementTypes.length;i++)vm.elementTypes[i].key===key&&(vm.elementTypes[i]=args.documentType);vm.contentPreview&&vm.contentPreview.key===key&&(vm.contentPreview=args.documentType,$scope.$evalAsync()),vm.settingsPreview&&vm.settingsPreview.key===key&&(vm.settingsPreview=args.documentType,$scope.$evalAsync())})),vm.addViewForBlock=function(block){localizationService.localize("blockEditor_headlineAddCustomView").then(function(localizedTitle){var filePicker={title:localizedTitle,isDialog:!0,filter:function filter(i){return!(-1!==i.name.indexOf(".html"))},filterCssClass:"not-allowed",select:function select(node){var filepath=decodeURIComponent(node.id.replace(/\+/g," "));block.view="~/"+filepath,editorService.close()},close:function close(){return editorService.close()}};editorService.filePicker(filePicker)})},vm.requestRemoveViewForBlock=function(block){localizationService.localizeMany(["general_remove","defaultdialogs_confirmremoveusageof"]).then(function(data){overlayService.confirmRemove({title:data[0],content:localizationService.tokenReplace(data[1],[block.view]),close:function close(){overlayService.close()},submit:function submit(){vm.removeViewForBlock(block),overlayService.close()}})})},vm.removeViewForBlock=function(block){block.view=null},vm.addStylesheetForBlock=function(block){localizationService.localize("blockEditor_headlineAddCustomStylesheet").then(function(localizedTitle){var filePicker={title:localizedTitle,isDialog:!0,filter:function filter(i){return!(-1!==i.name.indexOf(".css"))},filterCssClass:"not-allowed",select:function select(node){var filepath=decodeURIComponent(node.id.replace(/\+/g," "));block.stylesheet="~/"+filepath,editorService.close()},close:function close(){return editorService.close()}};editorService.filePicker(filePicker)})},vm.requestRemoveStylesheetForBlock=function(block){localizationService.localizeMany(["general_remove","defaultdialogs_confirmremoveusageof"]).then(function(data){overlayService.confirmRemove({title:data[0],content:localizationService.tokenReplace(data[1],[block.stylesheet]),close:function close(){overlayService.close()},submit:function submit(){vm.removeStylesheetForBlock(block),overlayService.close()}})})},vm.removeStylesheetForBlock=function(block){block.stylesheet=null},vm.addThumbnailForBlock=function(block){localizationService.localize("blockEditor_headlineAddThumbnail").then(function(localizedTitle){var allowedFileExtensions=["jpg","jpeg","png","svg","webp","gif"],thumbnailPicker={title:localizedTitle,isDialog:!0,filter:function filter(i){var ext=i.name.substr(i.name.lastIndexOf(".")+1);return!1===allowedFileExtensions.includes(ext)},filterCssClass:"not-allowed",select:function select(file){var id=decodeURIComponent(file.id.replace(/\+/g," "));block.thumbnail="~/"+id.replace("wwwroot/",""),editorService.close()},close:function close(){return editorService.close()}};editorService.staticFilePicker(thumbnailPicker)})},vm.removeThumbnailForBlock=function(entry){entry.thumbnail=null},vm.changeIconColor=function(color){angularHelper.safeApply($scope,function(){vm.block.iconColor=color?color.toString():null})},vm.changeBackgroundColor=function(color){angularHelper.safeApply($scope,function(){vm.block.backgroundColor=color?color.toString():null})},vm.submit=function(){$scope.model&&$scope.model.submit&&$scope.model.submit($scope.model)},vm.close=function(){$scope.model&&$scope.model.close&&$scope.model.close($scope.model)},$scope.$on("$destroy",function(){unsubscribe.forEach(function(u){u()})})})}(),angular.module("umbraco").controller("Umbraco.PropertyEditors.BlockListPropertyEditor.CreateButtonController",function Controller($scope){var vm=this;vm.plusPosX=0,vm.onMouseMove=function($event){vm.plusPosX=$event.offsetX}}),angular.module("umbraco").controller("Umbraco.PropertyEditors.BooleanController",booleanEditorController),angular.module("umbraco").controller("Umbraco.PropertyEditors.ChangePasswordController",function($scope,$routeParams){$scope.isNew=$routeParams.create,function resetModel(){$scope.model.config&&void 0!==$scope.model.config.disableToggle||($scope.model.config.disableToggle=!1),$scope.model.config&&void 0!==$scope.model.config.hasPassword||($scope.model.config.hasPassword=!1),$scope.model.config&&void 0!==$scope.model.config.minPasswordLength||($scope.model.config.minPasswordLength=0),$scope.model.config&&void 0!==$scope.model.config.minNonAlphaNumericChars||($scope.model.config.minNonAlphaNumericChars=0),Utilities.isObject($scope.model.value)?($scope.isNew||($scope.model.value.newPassword=null,$scope.model.value.oldPassword=null),$scope.model.value.reset=null,$scope.model.value.answer=null):$scope.model.value={newPassword:null,oldPassword:null,reset:null,answer:null}}()}),angular.module("umbraco").controller("Umbraco.PropertyEditors.CheckboxListController",function($scope,validationMessageService){var vm=this;function updateViewModel(newVal){for(var i=vm.configItems.length;i--;){var item=vm.configItems[i];if(item.checked!==(-1!==newVal.indexOf(item.value)))return void generateViewModel(newVal)}}function generateViewModel(newVal){var iConfigItem;vm.viewItems=[];for(var i=0;i<vm.configItems.length;i++){iConfigItem=vm.configItems[i];var isChecked=_.contains(newVal,iConfigItem.value);vm.viewItems.push({checked:isChecked,key:iConfigItem.key,value:iConfigItem.value})}}vm.configItems=[],vm.viewItems=[],vm.change=function change(model,value){var index=$scope.model.value.indexOf(value);!0===model?index<0&&$scope.model.value.push(value):index>=0&&$scope.model.value.splice(index,1)},function init(){if(vm.uniqueId=String.CreateGuid(),Utilities.isObject($scope.model.config.items)){for(var sortedItems=[],vals=_.values($scope.model.config.items),keys=_.keys($scope.model.config.items),i=0;i<vals.length;i++)sortedItems.push({key:keys[i],sortOrder:vals[i].sortOrder,value:vals[i].value});sortedItems.sort(function(a,b){return a.sortOrder>b.sortOrder?1:b.sortOrder>a.sortOrder?-1:0}),vm.configItems=sortedItems,null!==$scope.model.value&&void 0!==$scope.model.value||($scope.model.value=[]),generateViewModel($scope.model.value),$scope.$watchCollection("model.value",updateViewModel)}validationMessageService.getMandatoryMessage($scope.model.validation).then(function(value){$scope.mandatoryMessage=value})}()}),angular.module("umbraco").controller("Umbraco.PropertyEditors.ColorPickerController",ColorPickerController),angular.module("umbraco").controller("Umbraco.PrevalueEditors.MultiColorPickerController",function($scope,angularHelper,$element,eventsService){var vm=this;vm.add=function add(evt){if(evt.preventDefault(),$scope.newColor){var newLabel=function validLabel(label){return null!=label&&""!==label&&label.length&&label.length>0}($scope.newLabel)?$scope.newLabel:$scope.newColor,exists=_.find($scope.model.value,function(item){return item!=vm.editItem&&(item.value.toUpperCase()===$scope.newColor.toUpperCase()||item.label.toUpperCase()===newLabel.toUpperCase())});if(!exists)return null==vm.editItem?$scope.model.value.push({value:$scope.newColor,label:newLabel}):(vm.editItem.value=$scope.newColor,vm.editItem.label=newLabel,vm.editItem=null),$scope.newLabel="",$scope.hasError=!1,$scope.focusOnNew=!0,void setDirty();$scope.hasError=!0}},vm.remove=function remove(item,evt){evt.preventDefault(),$scope.model.value=_.reject($scope.model.value,function(x){return x.value===item.value&&x.label===item.label}),setDirty()},vm.edit=function edit(item,evt){evt.preventDefault(),vm.editItem=item,$scope.newColor=item.value,$scope.newLabel=item.label},vm.cancel=function cancel(evt){evt.preventDefault(),vm.editItem=null,$scope.newColor=defaultColor,$scope.newLabel=defaultLabel},vm.show=function show(color){$element.find(".btn.add").hide()},vm.hide=function hide(color){$element.find(".btn.add").show()},vm.change=function change(color){angularHelper.safeApply($scope,function(){color&&($scope.newColor=color.toHexString().trimStart("#"))})},vm.labelEnabled=!1,vm.editItem=null;var defaultColor="000000",defaultLabel=null;$scope.newColor=defaultColor,$scope.newLabel=defaultLabel,$scope.hasError=!1,$scope.focusOnNew=!1,$scope.options={type:"color",color:defaultColor,allowEmpty:!1,showAlpha:!1};var evts=[];if(evts.push(eventsService.on("toggleValue",function(e,args){vm.labelEnabled=args.value})),$scope.$on("$destroy",function(){for(var e in evts)eventsService.unsubscribe(evts[e])}),!Utilities.isArray($scope.model.value)){var items=[];for(var i in $scope.model.value){var oldValue=$scope.model.value[i];oldValue.hasOwnProperty("value")?items.push({value:oldValue.value,label:oldValue.label,sortOrder:oldValue.sortOrder,id:i}):items.push({value:oldValue,label:oldValue,sortOrder:sortOrder,id:i})}items.sort(function(a,b){return a.sortOrder>b.sortOrder?1:b.sortOrder>a.sortOrder?-1:0}),$scope.model.value=items}for(i=0;i<$scope.model.value.length;i++){var item=$scope.model.value[i];item.label=item.hasOwnProperty("label")?item.label:item.value}function setDirty(){vm.modelValueForm&&vm.modelValueForm.selectedColor.$setDirty()}$scope.sortableOptions={axis:"y",containment:"parent",cursor:"move",items:"> div.control-group",tolerance:"pointer",update:function update(e,ui){setDirty()}}}),angular.module("umbraco").controller("Umbraco.PropertyEditors.ContentPickerController",contentPickerController),angular.module("umbraco").controller("Umbraco.PropertyEditors.DatepickerController",dateTimePickerController),angular.module("umbraco").controller("Umbraco.PropertyEditors.DropdownFlexibleController",function($scope,validationMessageService){var config={items:[],multiple:!1};if(Utilities.extend(config,$scope.model.config),$scope.model.config=config,$scope.model.config.multiple=Object.toBoolean($scope.model.config.multiple),$scope.$on("formSubmitting",function(){null===$scope.model.value||0!==$scope.model.value.length&&null!==$scope.model.value[0]||($scope.model.value=null)}),$scope.updateSingleDropdownValue=function(){$scope.model.value=[$scope.model.singleDropdownValue]},Utilities.isArray($scope.model.config.items))Utilities.isObject($scope.model.config.items[0])||($scope.model.config.items=function convertArrayToDictionaryArray(model){for(var newItems=[],i=0;i<model.length;i++)newItems.push({id:model[i],sortOrder:0,value:model[i]});return newItems}($scope.model.config.items));else{if(!Utilities.isObject($scope.model.config.items))throw"The items property must be either an array or a dictionary";$scope.model.config.items=function convertObjectToDictionaryArray(model){for(var newItems=[],vals=_.values($scope.model.config.items),keys=_.keys($scope.model.config.items),i=0;i<vals.length;i++){var label=vals[i].value?vals[i].value:vals[i];newItems.push({id:keys[i],sortOrder:vals[i].sortOrder,value:label})}return newItems}($scope.model.config.items)}$scope.model.config.items.sort(function(a,b){return a.sortOrder>b.sortOrder?1:b.sortOrder>a.sortOrder?-1:0}),null!==$scope.model.value&&void 0!==$scope.model.value||($scope.model.config.multiple?$scope.model.value=[]:$scope.model.value=""),$scope.model.singleDropdownValue="",!Object.toBoolean($scope.model.config.multiple)&&$scope.model.value&&($scope.model.singleDropdownValue=Array.isArray($scope.model.value)?$scope.model.value[0]:$scope.model.value),"1"===$scope.model.config.multiple&&$scope.model.value&&($scope.model.value=Array.isArray($scope.model.value)?$scope.model.value:[$scope.model.value],0===$scope.model.value.length&&($scope.model.value=null)),validationMessageService.getMandatoryMessage($scope.model.validation).then(function(value){$scope.mandatoryMessage=value})}),angular.module("umbraco").controller("Umbraco.PropertyEditors.EmailController",emailController),angular.module("umbraco").controller("Umbraco.PropertyEditors.EntityPickerController",entityPicker),angular.module("umbraco").controller("Umbraco.PropertyEditors.EyeDropperColorPickerController",EyeDropperColorPickerController),function(){angular.module("umbraco").controller("Umbraco.PropertyEditors.FileUploadController",function fileUploadController($scope,fileManager){$scope.fileChanged=function onFileChanged(value){$scope.model.value=value},$scope.model.onValueChanged=function onValueChanged(newVal,oldVal){fileManager.setFiles({propertyAlias:$scope.model.alias,culture:$scope.model.culture,segment:$scope.model.segment,files:[]})},$scope.fileExtensionsString=$scope.model.config.fileExtensions?$scope.model.config.fileExtensions.map(function(x){return"."+x.value}).join(","):""}).run(function(mediaHelper){mediaHelper&&mediaHelper.registerFileResolver&&mediaHelper.registerFileResolver("Umbraco.UploadField",function(property,entity,thumbnail){return thumbnail?mediaHelper.detectIfImageByExtension(property.value)?property.value+"?width=500&rnd="+moment(entity.updateDate).format("YYYYMMDDHHmmss"):null:property.value})})}(),angular.module("umbraco").controller("Umbraco.PropertyEditors.GridPrevalueEditor.ConfigController",ConfigController),angular.module("umbraco").controller("Umbraco.PropertyEditors.GridPrevalueEditor.EditConfigController",EditConfigController),angular.module("umbraco").controller("Umbraco.PropertyEditors.GridPrevalueEditor.LayoutConfigController",function($scope,localizationService){var vm=this;function cleanUpRows(){$scope.currentLayout.sections.forEach(function(section){section.rows&&delete section.rows})}vm.toggleAllowed=function toggleAllowed(section){section.allowAll=!section.allowAll,section.allowed?delete section.allowed:section.allowed=[]},vm.configureSection=function configureSection(section,template){if(null==section){var space=$scope.availableLayoutSpace>4?4:$scope.availableLayoutSpace;section={grid:space,rows:Utilities.copy($scope.rows)},template.sections.push(section)}section.allowAll=section.allowAll||!section.allowed||!section.allowed.length,$scope.currentSection=section},vm.deleteSection=function deleteSection(section,template){$scope.currentSection===section&&($scope.currentSection=null);var index=template.sections.indexOf(section);template.sections.splice(index,1)},vm.selectRow=function selectRow(section,row){section.allowed=section.allowed||[];var index=section.allowed.indexOf(row.name);!0===row.selected?-1===index&&section.allowed.push(row.name):section.allowed.splice(index,1)},vm.percentage=function percentage(spans){return(spans/$scope.columns*100).toFixed(8)},vm.scaleUp=function scaleUp(section,max,overflow){var add=1;!0!==overflow&&(add=max>1?1:max);section.grid=section.grid+add},vm.scaleDown=function scaleDown(section){var remove=section.grid>1?1:0;section.grid=section.grid-remove},vm.close=function close(){$scope.model.close&&(cleanUpRows(),$scope.model.close())},vm.submit=function submit(){$scope.model.submit&&(cleanUpRows(),$scope.model.submit($scope.currentLayout))},vm.labels={},$scope.$watch("currentLayout",function(layout){if(layout){var total=0;_.forEach(layout.sections,function(section){total+=section.grid}),$scope.availableLayoutSpace=$scope.columns-total}},!0),function init(){$scope.currentLayout=$scope.model.currentLayout,$scope.columns=$scope.model.columns,$scope.rows=$scope.model.rows,$scope.currentSection=null,$scope.currentLayout&&$scope.currentLayout.sections&&$scope.currentLayout.sections.forEach(function(section){section.rows=Utilities.copy($scope.rows),section.rows.forEach(function(row){row.selected=section.allowed&&section.allowed.includes(row.name)})}),localizationService.localizeMany(["grid_addGridLayout","grid_allowAllRowConfigurations"]).then(function(data){vm.labels.title=data[0],vm.labels.allowAllRowConfigurations=data[1],function setTitle(value){$scope.model.title||($scope.model.title=value)}(vm.labels.title)})}()}),angular.module("umbraco").controller("Umbraco.PropertyEditors.GridPrevalueEditor.RowConfigController",RowConfigController),angular.module("umbraco").controller("Umbraco.PropertyEditors.Grid.EmbedController",function($scope,$timeout,$sce,editorService){$scope.setEmbed=function(){var embed={modify:Utilities.isObject($scope.control.value)?$scope.control.value:null,submit:function submit(model){var embed={constrain:model.embed.constrain,height:model.embed.height,width:model.embed.width,url:model.embed.url,info:model.embed.info,preview:model.embed.preview};$scope.control.value=embed,$scope.trustedValue=$sce.trustAsHtml(embed.preview),editorService.close()},close:function close(){editorService.close()}};editorService.embed(embed)},function onInit(){$scope.control.icon=$scope.control.icon||"icon-movie-alt";var embedPreview=Utilities.isObject($scope.control.value)&&$scope.control.value.preview?$scope.control.value.preview:$scope.control.value;$scope.trustedValue=embedPreview?$sce.trustAsHtml(embedPreview):null,$scope.control.value||$timeout(function(){$scope.control.$initializing&&$scope.setEmbed()},200)}()}),angular.module("umbraco").controller("Umbraco.PropertyEditors.Grid.MacroController",function($scope,$timeout,editorService,macroResource,macroService,localizationService,$routeParams){$scope.control.icon=$scope.control.icon||"icon-settings-alt",localizationService.localize("grid_clickToInsertMacro").then(function(label){$scope.title=label}),$scope.setMacro=function(){var dialogData={richTextEditor:!0,macroData:$scope.control.value||{macroAlias:$scope.control.editor.config&&$scope.control.editor.config.macroAlias?$scope.control.editor.config.macroAlias:""}},macroPicker={dialogData:dialogData,submit:function submit(model){var macroObject=macroService.collectValueData(model.selectedMacro,model.macroParams,dialogData.renderingEngine);$scope.control.value={macroAlias:macroObject.macroAlias,macroParamsDictionary:macroObject.macroParamsDictionary},$scope.setPreview($scope.control.value),editorService.close()},close:function close(){editorService.close()}};editorService.macroPicker(macroPicker)},$scope.setPreview=function(macro){var contentId=$routeParams.id;macroResource.getMacroResultAsHtmlForEditor(macro.macroAlias,contentId,macro.macroParamsDictionary).then(function(htmlResult){$scope.title=macro.macroAlias,htmlResult.trim().length>0&&htmlResult.indexOf("Macro:")<0&&($scope.preview=htmlResult)})},$timeout(function(){$scope.control.$initializing?$scope.setMacro():$scope.control.value&&$scope.setPreview($scope.control.value)},200)}),angular.module("umbraco").controller("Umbraco.PropertyEditors.Grid.MediaController",function($scope,userService,editorService,localizationService){function getThumbnailUrl(){if($scope.control.value&&$scope.control.value.image){var url=$scope.control.value.image;if($scope.control.editor.config&&$scope.control.editor.config.size){if($scope.control.value.coordinates){var coords=$scope.control.value.coordinates;url+="?cc=".concat(coords.x1,",").concat(coords.y1,",").concat(coords.x2,",").concat(coords.y2)}else $scope.control.value.focalPoint?url+="?rxy=".concat($scope.control.value.focalPoint.left,",").concat($scope.control.value.focalPoint.top):url+="?rxy=0.5,0.5";url+="&width="+$scope.control.editor.config.size.width,url+="&height="+$scope.control.editor.config.size.height}return!1===url.includes("?")&&(url+="?width=800"),url}return null}function updateControlValue(selectedImage){$scope.control.value={focalPoint:selectedImage.focalPoint,coordinates:selectedImage.coordinates,id:selectedImage.id,udi:selectedImage.udi,image:selectedImage.image,caption:selectedImage.caption,altText:selectedImage.altText},$scope.thumbnailUrl=getThumbnailUrl()}$scope.control.icon=$scope.control.icon||"icon-picture",$scope.thumbnailUrl=getThumbnailUrl(),$scope.model.config.startNodeId||(!0===$scope.model.config.ignoreUserStartNodes?($scope.model.config.startNodeId=-1,$scope.model.config.startNodeIsVirtual=!0):userService.getCurrentUser().then(function(userData){$scope.model.config.startNodeId=1!==userData.startMediaIds.length?-1:userData.startMediaIds[0],$scope.model.config.startNodeIsVirtual=1!==userData.startMediaIds.length})),$scope.setImage=function(){var startNodeId=$scope.model.config&&$scope.model.config.startNodeId?$scope.model.config.startNodeId:null,mediaPicker={startNodeId:startNodeId,startNodeIsVirtual:startNodeId?$scope.model.config.startNodeIsVirtual:null,cropSize:$scope.control.editor.config&&$scope.control.editor.config.size?$scope.control.editor.config.size:null,showDetails:!0,disableFolderSelect:!0,onlyImages:!0,dataTypeKey:$scope.model.dataTypeKey,submit:function submit(model){updateControlValue(model.selection[0]),editorService.close()},close:function close(){return editorService.close()}};editorService.mediaPicker(mediaPicker)},$scope.editImage=function(){var mediaCropDetailsConfig={size:"small",target:$scope.control.value,submit:function submit(model){updateControlValue(model.target),editorService.close()},close:function close(){return editorService.close()}};localizationService.localize("defaultdialogs_editSelectedMedia").then(function(value){mediaCropDetailsConfig.title=value,editorService.mediaCropDetails(mediaCropDetailsConfig)})}}),function(){angular.module("umbraco").controller("Umbraco.PropertyEditors.Grid.RichTextEditorController",function GridRichTextEditorController(){})}(),angular.module("umbraco").controller("Umbraco.PropertyEditors.Grid.TextStringController",function(){}),angular.module("umbraco").controller("Umbraco.PropertyEditors.GridController",function($scope,localizationService,gridService,umbRequestHelper,angularHelper,$element,eventsService,editorService,overlayService,$interpolate){var draggedRteSettings,placeHolder="",currentForm=angularHelper.getCurrentForm($scope);$scope.currentRowWithActiveChild=null,$scope.currentCellWithActiveChild=null,$scope.active=null,$scope.currentRow=null,$scope.currentCell=null,$scope.currentToolsControl=null,$scope.currentControl=null,$scope.openRTEToolbarId=null,$scope.hasSettings=!1,$scope.showRowConfigurations=!0,$scope.sortMode=!1,$scope.reorderKey="general_reorder",$scope.sortableOptionsRow={distance:10,cursor:"move",placeholder:"ui-sortable-placeholder",handle:".umb-row-title-bar",helper:"clone",forcePlaceholderSize:!0,tolerance:"pointer",zIndex:1e18,scrollSensitivity:100,cursorAt:{top:40,left:60},sort:function sort(event,ui){var max=$(".umb-grid").width()-150;parseInt(ui.helper.css("left"))>max&&ui.helper.css({left:max+"px"}),parseInt(ui.helper.css("left"))<20&&ui.helper.css({left:20})},start:function start(e,ui){ui.item[0].style.display="block",ui.item[0].style.opacity="0.5",draggedRteSettings={},ui.item.find(".umb-rte").each(function(key,value){var rteId=value.id,editor=_.findWhere(tinyMCE.editors,{id:rteId});editor&&(draggedRteSettings[rteId]=editor.settings)})},stop:function stop(e,ui){ui.item[0].style.opacity="1",ui.item.parents(".umb-column").find(".umb-rte").each(function(key,value){var rteId=value.id,settings=draggedRteSettings[rteId];if(!settings){var editor=_.findWhere(tinyMCE.editors,{id:rteId});editor&&(settings=editor.settings)}settings&&(tinyMCE.execCommand("mceRemoveEditor",!1,rteId),tinyMCE.init(settings))}),currentForm.$setDirty()}};var startingArea,notIncludedRte=[],cancelMove=!1;$scope.sortableOptionsCell={distance:10,cursor:"move",uiFloating:!0,placeholder:"ui-sortable-placeholder",handle:".umb-control-handle",helper:"clone",connectWith:".umb-cell-inner",forcePlaceholderSize:!0,tolerance:"pointer",zIndex:1e18,scrollSensitivity:100,cursorAt:{top:45,left:90},sort:function sort(event,ui){var position=parseInt(ui.item.parent().offset().left)+parseInt(ui.helper.css("left"))-parseInt($(".umb-grid").offset().left),max=$(".umb-grid").width()-220;position>max&&ui.helper.css({left:max-parseInt(ui.item.parent().offset().left)+parseInt($(".umb-grid").offset().left)+"px"}),position<0&&ui.helper.css({left:0-parseInt(ui.item.parent().offset().left)+parseInt($(".umb-grid").offset().left)+"px"})},over:function over(event,ui){var area=event.target.getScope_HackForSortable().area,allowedEditors=area.$allowedEditors.map(function(e){return e.alias});$.inArray(ui.item[0].getScope_HackForSortable().control.editor.alias,allowedEditors)<0||startingArea!=area&&""!=area.maxItems&&area.maxItems>0&&area.maxItems<area.controls.length+1?($scope.$apply(function(){area.dropNotAllowed=!0}),ui.placeholder.hide(),cancelMove=!0):(0==area.controls.length?($scope.$apply(function(){area.dropOnEmpty=!0}),ui.placeholder.hide()):ui.placeholder.show(),cancelMove=!1)},out:function out(event,ui){$scope.$apply(function(){var dropArea=event.target.getScope_HackForSortable().area;dropArea.dropNotAllowed=!1,dropArea.dropOnEmpty=!1})},update:function update(event,ui){ui.sender?$(event.target).find(".umb-rte").each(function(){var rteId=$(this).attr("id");if($.inArray(rteId,notIncludedRte)<0){var editor=_.findWhere(tinyMCE.editors,{id:rteId});editor&&(draggedRteSettings[rteId]=editor.settings),notIncludedRte.splice(0,0,$(this).attr("id"))}}):(cancelMove&&ui.item.sortable.cancel(),ui.item.parents(".umb-cell-content").find(".umb-rte").each(function(key,value){var rteId=value.id;if($.inArray(rteId,notIncludedRte)<0){var editor=_.findWhere(tinyMCE.editors,{id:rteId});editor&&(draggedRteSettings[rteId]=editor.settings),notIncludedRte.splice(0,0,rteId)}})),currentForm.$setDirty()},start:function start(event,ui){var area=event.target.getScope_HackForSortable().area;startingArea=area,ui.item[0].style.display="block",ui.item[0].style.opacity="0.5",draggedRteSettings={},notIncludedRte=[],ui.item[0].style.display="block",ui.item.find(".umb-rte").each(function(key,value){var rteId=value.id,editor=_.findWhere(tinyMCE.editors,{id:rteId});editor&&(draggedRteSettings[rteId]=editor.settings,tinyMCE.execCommand("mceRemoveEditor",!1,rteId))})},stop:function stop(event,ui){ui.item[0].style.opacity="1",ui.item.offsetParent().find(".umb-rte").each(function(key,value){var rteId=value.id;if($.inArray(rteId,notIncludedRte)<0){var editor=_.findWhere(tinyMCE.editors,{id:rteId});editor&&(draggedRteSettings[rteId]=editor.settings),notIncludedRte.splice(0,0,rteId)}}),void 0!==draggedRteSettings&&tinyMCE.init(draggedRteSettings),_.forEach(notIncludedRte,function(rteId){void 0!==draggedRteSettings&&rteId===draggedRteSettings.id||(tinyMCE.execCommand("mceRemoveEditor",!1,rteId),draggedRteSettings[rteId]&&tinyMCE.init(draggedRteSettings[rteId]))}),$scope.$apply(function(){var cell=event.target.getScope_HackForSortable().area;(function hasActiveChild(item,children){for(var activeChild=!1,i=0;children.length>i;i++){var child=children[i];child.active&&(activeChild=!0)}if(activeChild)return!0})(0,cell.controls)&&($scope.currentCellWithActiveChild=cell),$scope.active=cell})}},$scope.toggleSortMode=function(){$scope.sortMode=!$scope.sortMode,$scope.sortMode?$scope.reorderKey="general_reorderDone":$scope.reorderKey="general_reorder"},$scope.showReorderButton=function(){if($scope.model.value&&$scope.model.value.sections)for(var i=0;$scope.model.value.sections.length>i;i++){var section=$scope.model.value.sections[i];if(section.rows&&section.rows.length>0)return!0}},$scope.openEditorOverlay=function(event,area,index,key){var dialog={view:"itempicker",filter:area.$allowedEditors.length>15,availableItems:area.$allowedEditors,event:event,submit:function submit(model){model.selectedItem&&($scope.addControl(model.selectedItem,area,index),overlayService.close())},close:function close(){overlayService.close()}};localizationService.localize("grid_insertControl").then(function(value){dialog.title=value,overlayService.open(dialog)})},$scope.addTemplate=function(template){$scope.model.value=Utilities.copy(template),_.forEach($scope.model.value.sections,function(section){$scope.initSection(section)})},$scope.clickRow=function(index,rows,$event){$scope.currentRowWithActiveChild=null,$scope.active=rows[index],$event.stopPropagation()},$scope.addRow=function(section,layout,isInit){var row=Utilities.copy(layout);(row=$scope.initRow(row))&&section.rows.push(row),isInit||currentForm.$setDirty(),$scope.showRowConfigurations=!1,eventsService.emit("grid.rowAdded",{scope:$scope,element:$element,row:row}),isInit||setTimeout(function(){var newRowEl=$element.find("[data-rowid='"+row.$uniqueId+"']");null!==newRowEl&&newRowEl.focus()},0)},$scope.removeRow=function(section,$index){section.rows.length>0&&(section.rows.splice($index,1),$scope.currentRow=null,$scope.currentRowWithActiveChild=null,$scope.openRTEToolbarId=null,currentForm.$setDirty()),0===section.rows.length&&($scope.showRowConfigurations=!0)};var shouldApply=function shouldApply(item,itemType,gridItem){if(void 0===item.applyTo||null===item.applyTo||""===item.applyTo)return!0;if("string"==typeof item.applyTo)return item.applyTo===itemType;if("row"===itemType){if(void 0===item.applyTo.row)return!1;if(null===item.applyTo.row||""===item.applyTo.row)return!0;var rows=item.applyTo.row.split(",");return-1!==_.indexOf(rows,gridItem.name)}if("cell"===itemType){if(void 0===item.applyTo.cell)return!1;if(null===item.applyTo.cell||""===item.applyTo.cell)return!0;var cells=item.applyTo.cell.split(","),cellSize=gridItem.grid.toString();return-1!==_.indexOf(cells,cellSize)}};function stripModifier(val,modifier){if(!val||!modifier||modifier.indexOf(placeHolder)<0)return val;var paddArray=modifier.split(placeHolder);return 1==paddArray.length?0===modifier.indexOf(placeHolder)?val.slice(0,-paddArray[0].length):val.slice(paddArray[0].length,0):0===paddArray[1].length?val.slice(paddArray[0].length):val.slice(paddArray[0].length,-paddArray[1].length)}$scope.editGridItemSettings=function(gridItem,itemType){var styles,config;placeHolder="{0}","control"===itemType?(styles=null,config=Utilities.copy(gridItem.editor.config.settings)):(styles=_.filter(Utilities.copy($scope.model.config.items.styles),function(item){return shouldApply(item,itemType,gridItem)}),config=_.filter(Utilities.copy($scope.model.config.items.config),function(item){return shouldApply(item,itemType,gridItem)})),Utilities.isObject(gridItem.config)&&_.each(config,function(cfg){var val=gridItem.config[cfg.key];val&&(cfg.value=stripModifier(val,cfg.modifier))}),Utilities.isObject(gridItem.styles)&&_.each(styles,function(style){var val=gridItem.styles[style.key];val&&(style.value=stripModifier(val,style.modifier))});var dialogOptions={view:"views/propertyeditors/grid/dialogs/config.html",size:"small",styles:styles,config:config,submit:function submit(model){var styleObject={},configObject={};_.each(model.styles,function(style){style.value&&(styleObject[style.key]=addModifier(style.value,style.modifier))}),_.each(model.config,function(cfg){cfg.alias=cfg.key,cfg.label=cfg.value,cfg.value&&(configObject[cfg.key]=addModifier(cfg.value,cfg.modifier))}),gridItem.styles=styleObject,gridItem.config=configObject,gridItem.hasConfig=gridItemHasConfig(styleObject,configObject),currentForm.$setDirty(),editorService.close()},close:function close(){editorService.close()}};localizationService.localize("general_settings").then(function(value){dialogOptions.title=value,editorService.open(dialogOptions)})};var addModifier=function addModifier(val,modifier){return!modifier||modifier.indexOf(placeHolder)<0?val:modifier.replace(placeHolder,val)};function gridItemHasConfig(styles,config){return!_.isEmpty(styles)||!_.isEmpty(config)}$scope.clickCell=function(index,cells,row,$event){$scope.currentCellWithActiveChild=null,$scope.active=cells[index],$scope.currentRowWithActiveChild=row,$event.stopPropagation()},$scope.cellPreview=function(cell){return cell&&cell.$allowedEditors?cell.$allowedEditors[0].icon:"icon-layout"},$scope.clickControl=function(index,controls,cell,$event){$scope.active=controls[index],$scope.currentCellWithActiveChild=cell,$event.stopPropagation()},$scope.setUniqueId=function(){return String.CreateGuid()},$scope.addControl=function(editor,cell,index,initialize){var newControl={value:null,editor:editor,$initializing:initialize=!1!==initialize};void 0===index&&(index=cell.controls.length),$scope.active=newControl,$scope.initControl(newControl,index+1),cell.controls.push(newControl),eventsService.emit("grid.itemAdded",{scope:$scope,element:$element,cell:cell,item:newControl})},$scope.addTinyMce=function(cell){var rte=$scope.getEditor("rte");$scope.addControl(rte,cell)},$scope.getEditor=function(alias){return _.find($scope.availableEditors,function(editor){return editor.alias===alias})},$scope.removeControl=function(cell,$index){$scope.currentControl=null,cell.controls.splice($index,1)},$scope.percentage=function(spans){return(spans/$scope.model.config.items.columns*100).toFixed(8)},$scope.clearPrompt=function(scopedObject,e){scopedObject.deletePrompt=!1,e.preventDefault(),e.stopPropagation()},$scope.togglePrompt=function(scopedObject){scopedObject.deletePrompt=!scopedObject.deletePrompt},$scope.hidePrompt=function(scopedObject){scopedObject.deletePrompt=!1},$scope.toggleAddRow=function(){$scope.showRowConfigurations=!$scope.showRowConfigurations},$scope.getTemplateName=function(control){var templateName=control.editor.name;if(control.editor.nameExp){var valueOfTemplate=control.editor.nameExp(control);""!=valueOfTemplate&&(templateName+=": ",templateName+=valueOfTemplate)}return templateName},$scope.initContent=function(){var clear=!0;if(($scope.model.config.items.config&&$scope.model.config.items.config.length>0||$scope.model.config.items.styles&&$scope.model.config.items.styles.length>0)&&($scope.hasSettings=!0),$scope.model.config.items.columns?Utilities.isString($scope.model.config.items.columns)&&($scope.model.config.items.columns=parseInt($scope.model.config.items.columns)):$scope.model.config.items.columns=12,$scope.model.value&&$scope.model.value.sections&&$scope.model.value.sections.length>0&&$scope.model.value.sections[0].rows&&$scope.model.value.sections[0].rows.length>0){if($scope.model.value.name&&Utilities.isArray($scope.model.config.items.templates)){var found=_.find($scope.model.config.items.templates,function(t){return t.name===$scope.model.value.name});found&&Utilities.isArray(found.sections)&&found.sections.length===$scope.model.value.sections.length&&_.each(found.sections,function(templateSection,index){Utilities.extend($scope.model.value.sections[index],Utilities.copy(templateSection))})}_.forEach($scope.model.value.sections,function(section,index){section.grid>0?($scope.initSection(section),section.rows.length>0&&(clear=!1)):$scope.model.value.sections.splice(index,1)})}else $scope.model.config.items.templates&&1===$scope.model.config.items.templates.length&&($scope.addTemplate($scope.model.config.items.templates[0]),clear=!1);clear&&($scope.model.value=void 0)},$scope.initSection=function(section){section.$percentage=$scope.percentage(section.grid),section.$allowedLayouts=function getAllowedLayouts(section){var layouts=$scope.model.config.items.layouts;return section.allowed&&section.allowed.length>0?_.filter(layouts,function(layout){return _.indexOf(section.allowed,layout.name)>=0}):layouts}(section),section.rows&&0!==section.rows.length?(_.forEach(section.rows,function(row,index){if(!row.$initialized){var initd=$scope.initRow(row);initd?section.rows[index]=initd:section.rows.splice(index,1)}}),$scope.showRowConfigurations=!1):(section.rows=[],1===section.$allowedLayouts.length&&$scope.addRow(section,section.$allowedLayouts[0],!0))},$scope.initRow=function(row){var original=_.find($scope.model.config.items.layouts,function(o){return o.name===row.name});return original?((original=Utilities.copy(original)).styles=row.styles,original.config=row.config,original.hasConfig=gridItemHasConfig(row.styles,row.config),_.each(original.areas,function(area,areaIndex){if(area.grid>0){var currentArea=row.areas[areaIndex];currentArea&&(area.config=currentArea.config,area.styles=currentArea.styles,area.hasConfig=gridItemHasConfig(currentArea.styles,currentArea.config)),area.allowed&&!0!==area.allowAll?(area.$allowedEditors=_.filter($scope.availableEditors,function(editor){return _.indexOf(area.allowed,editor.alias)>=0}),_.indexOf(area.allowed,"rte")>=0&&(area.$allowsRTE=!0)):(area.$allowedEditors=$scope.availableEditors,area.$allowsRTE=!0),row.areas.length>areaIndex&&row.areas[areaIndex].controls?(area.controls=currentArea.controls,_.forEach(area.controls,function(control,controlIndex){$scope.initControl(control,controlIndex)})):(area.controls=[],1===area.$allowedEditors.length&&$scope.addControl(area.$allowedEditors[0],area,0,!1)),area.$percentage=$scope.percentage(area.grid),area.$uniqueId=$scope.setUniqueId()}else original.areas.splice(areaIndex,1)}),original.$initialized=!0,original.$uniqueId=$scope.setUniqueId(),original.id=row.id?row.id:$scope.setUniqueId(),original):null},$scope.initControl=function(control,index){if(control.$index=index,control.$uniqueId=$scope.setUniqueId(),control.editor||(control.$editorPath="views/propertyeditors/grid/editors/error.html"),!control.$editorPath){var editorConfig=$scope.getEditor(control.editor.alias);editorConfig?(control.editor=editorConfig,control.editor.view.startsWith("/")||control.editor.view.startsWith("~/")?control.$editorPath=umbRequestHelper.convertVirtualToAbsolutePath(control.editor.view):control.$editorPath="views/propertyeditors/grid/editors/"+control.editor.view+".html"):control.$editorPath="views/propertyeditors/grid/editors/error.html"}},gridService.getGridEditors().then(function(response){$scope.availableEditors=response.data,$scope.availableEditors.forEach(function(value){localizationService.localize("grid_"+value.alias,void 0,value.name).then(function(v){value.name=v}),value.nameExp=value.nameTemplate?$interpolate(value.nameTemplate):void 0}),$scope.contentReady=!0,eventsService.emit("grid.initializing",{scope:$scope,element:$element}),$scope.initContent(),eventsService.emit("grid.initialized",{scope:$scope,element:$element})});var unsubscribe=$scope.$on("formSubmitting",function(e,args){"save"===args.action&&$scope.model.value&&$scope.model.value.sections&&_.each($scope.model.value.sections,function(section){section.rows&&_.each(section.rows,function(row){row.areas&&_.each(row.areas,function(area){area.editors&&delete area.editors,area.controls&&_.each(area.controls,function(control){if(control.editor){var alias=control.editor.alias;control.editor={alias:alias}}})})})})});$scope.$on("$destroy",function(){unsubscribe()})}),function(){angular.module("umbraco").directive("umbGridHackScope",function umbGridHackScope(){return{restrict:"A",link:function link($scope,$element){$element[0].getScope_HackForSortable=function(){return $scope}}}})}(),angular.module("umbraco").controller("Umbraco.PropertyEditors.GridPrevalueEditorController",function($scope,gridService,editorService,localizationService,overlayService){var vm=this;vm.configureTemplate=function configureTemplate(template){var index=$scope.model.value.templates.indexOf(template);void 0===template&&(template={name:"",sections:[]});var layoutConfigOverlay={currentLayout:Utilities.copy(template),rows:$scope.model.value.layouts,columns:$scope.model.value.columns,view:"views/propertyeditors/grid/dialogs/layoutconfig.html",size:"small",submit:function submit(model){-1===index?$scope.model.value.templates.push(model):$scope.model.value.templates[index]=model,editorService.close()},close:function close(model){editorService.close()}};editorService.open(layoutConfigOverlay)},vm.deleteTemplate=function deleteTemplate(index){$scope.model.value.templates.splice(index,1)},vm.configureLayout=function configureLayout(layout){var index=$scope.model.value.layouts.indexOf(layout);void 0===layout&&(layout={name:"",areas:[]});var rowConfigOverlay={currentRow:Utilities.copy(layout),editors:$scope.editors,columns:$scope.model.value.columns,view:"views/propertyeditors/grid/dialogs/rowconfig.html",size:"small",submit:function submit(model){-1===index?$scope.model.value.layouts.push(model):$scope.model.value.layouts[index]=model,editorService.close()},close:function close(model){editorService.close()}};editorService.open(rowConfigOverlay)},vm.deleteLayout=function deleteLayout(layout,index,event){var dialog={view:"views/propertyeditors/grid/overlays/rowdeleteconfirm.html",layout:layout,submitButtonLabelKey:"contentTypeEditor_yesDelete",submitButtonStyle:"danger",submit:function submit(model){$scope.model.value.layouts.splice(index,1),overlayService.close()},close:function close(){overlayService.close()}};localizationService.localize("general_delete").then(function(value){dialog.title=value,overlayService.open(dialog)}),event.preventDefault(),event.stopPropagation()},vm.toggleCollection=function toggleCollection(collection,toggle){toggle?[]:null},vm.percentage=function percentage(spans){return(spans/$scope.model.value.columns*100).toFixed(8)},vm.zeroWidthFilter=function zeroWidthFilter(cell){return cell.grid>0},vm.removeConfigValue=function removeConfigValue(collection,index){collection.splice(index,1)},vm.editConfig=function editConfig(){editConfigCollection($scope.model.value.config,"Settings",function(data){$scope.model.value.config=data})},vm.editStyles=function editStyles(){editConfigCollection($scope.model.value.styles,"Styling",function(data){$scope.model.value.styles=data})};var emptyModel={styles:[{label:"Set a background image",description:"Set a row background",key:"background-image",view:"imagepicker",modifier:"url({0})"}],config:[{label:"Class",description:"Set a css class",key:"class",view:"textstring"}],columns:12,templates:[{name:"1 column layout",sections:[{grid:12}]},{name:"2 column layout",sections:[{grid:4},{grid:8}]}],layouts:[{label:"Headline",name:"Headline",areas:[{grid:12,editors:["headline"]}]},{label:"Article",name:"Article",areas:[{grid:4},{grid:8}]}]};var editConfigCollection=function editConfigCollection(configValues,title,callback){var editConfigCollectionOverlay={config:configValues,title:title,view:"views/propertyeditors/grid/dialogs/editconfig.html",size:"small",submit:function submit(model){callback(model.config),editorService.close()},close:function close(model){editorService.close()}};editorService.open(editConfigCollectionOverlay)};gridService.getGridEditors().then(function(response){$scope.editors=response.data}),$scope.model.value&&""!==$scope.model.value&&$scope.model.value.templates?($scope.model.value.columns||($scope.model.value.columns=emptyModel.columns),$scope.model.value.config||($scope.model.value.config=[]),$scope.model.value.styles||($scope.model.value.styles=[])):$scope.model.value=emptyModel;var unsubscribe=$scope.$on("formSubmitting",function(ev,args){var ts=$scope.model.value.templates,ls=$scope.model.value.layouts;_.each(ts,function(t){_.each(t.sections,function(section,index){0===section.grid&&t.sections.splice(index,1)})}),_.each(ls,function(l){_.each(l.areas,function(area,index){0===area.grid&&l.areas.splice(index,1)})})});$scope.$on("$destroy",function(){unsubscribe()})}),angular.module("umbraco").controller("Umbraco.PropertyEditors.IdWithGuidValueController",IdWithGuidValueController),angular.module("umbraco").controller("Umbraco.PropertyEditors.ImageCropperController",function($scope,fileManager,$timeout,mediaHelper){var config=Utilities.copy($scope.model.config);$scope.filesSelected=function onFileSelected(value,files){setModelValueWithSrc(value),setDirty()},$scope.filesChanged=function onFilesChanged(files){files&&files[0]&&($scope.imageSrc=files[0].fileSrc,setDirty())},$scope.fileUploaderInit=function onFileUploaderInit(value,files){$scope.model.value&&(Utilities.isString($scope.model.value)?setModelValueWithSrc($scope.model.value):(_.each($scope.model.value.crops,function(saved){var configured=_.find(config.crops,function(item){return item.alias===saved.alias});configured&&configured.height===saved.height&&configured.width===saved.width&&(configured.coordinates=saved.coordinates)}),$scope.model.value.crops=config.crops,$scope.model.value.focalPoint||($scope.model.value.focalPoint={left:.5,top:.5})),files&&files[0]?$scope.imageSrc=files[0].fileSrc:$scope.imageSrc=$scope.model.value.src)},$scope.imageLoaded=function imageLoaded(isCroppable,hasDimensions){$scope.isCroppable=isCroppable,$scope.hasDimensions=hasDimensions},$scope.crop=function crop(targetCrop){$scope.currentCrop?(close(),$timeout(function(){crop(targetCrop),$scope.pendingCrop=!1}),$scope.pendingCrop=!0):($scope.currentCrop=Utilities.copy(targetCrop),$scope.currentPoint=null,setDirty())},$scope.done=function done(){if(!$scope.currentCrop)return;_.find($scope.model.value.crops,function(crop){return crop.alias===$scope.currentCrop.alias}).coordinates=$scope.currentCrop.coordinates,$scope.close(),setDirty()},$scope.clear=function clear(crop){fileManager.setFiles({propertyAlias:$scope.model.alias,culture:$scope.model.culture,segment:$scope.model.segment,files:[]}),$scope.imageSrc=null,$scope.model.value&&($scope.model.value=null);setDirty()},$scope.reset=function reset(){$scope.currentCrop.coordinates=void 0,$scope.done()},$scope.close=close,$scope.isCustomCrop=function isCustomCrop(crop){return!!crop.coordinates},$scope.focalPointChanged=function focalPointChanged(left,top){$scope.model.value.focalPoint={left:left,top:top},setDirty()},$scope.model.onValueChanged=function onValueChanged(newVal,oldVal){fileManager.setFiles({propertyAlias:$scope.model.alias,culture:$scope.model.culture,segment:$scope.model.segment,files:[]})};var umbracoSettings=Umbraco.Sys.ServerVariables.umbracoSettings;function setModelValueWithSrc(src){$scope.model.value&&$scope.model.value.src||($scope.model.value=Utilities.extend(Utilities.copy($scope.model.config),{src:src}))}function setDirty(){$scope.imageCropperForm&&$scope.imageCropperForm.modelValue.$setDirty()}function close(){$scope.currentCrop=void 0,$scope.currentPoint=void 0}$scope.acceptFileExt=mediaHelper.formatFileTypes(umbracoSettings.imageFileTypes);var unsubscribe=$scope.$on("formSubmitting",function(){$scope.currentCrop=null,$scope.currentPoint=null});$scope.$on("$destroy",function(){unsubscribe()})}).run(function(mediaHelper,umbRequestHelper){mediaHelper&&mediaHelper.registerFileResolver&&mediaHelper.registerFileResolver("Umbraco.ImageCropper",function(property,entity,thumbnail){return property.value&&property.value.src?!0===thumbnail?property.value.src+"?width=500":property.value.src:Utilities.isString(property.value)?thumbnail?mediaHelper.detectIfImageByExtension(property.value)?umbRequestHelper.getApiUrl("imagesApiBaseUrl","GetBigThumbnail",[{originalImagePath:property.value}]):null:property.value:null})}),angular.module("umbraco").controller("Umbraco.PrevalueEditors.CropSizesController",function($scope){$scope.model.value||($scope.model.value=[]),$scope.editMode=!1,$scope.setFocus=!1,$scope.remove=function(item,evt){evt.preventDefault(),$scope.model.value=_.reject($scope.model.value,function(x){return x.alias===item.alias})},$scope.edit=function(item,evt){evt.preventDefault(),$scope.editMode=!0,$scope.setFocus=!1,$scope.newItem=item},$scope.cancel=function(evt){evt.preventDefault(),$scope.editMode=!1,$scope.setFocus=!0,$scope.newItem=null},$scope.change=function(){$scope.setFocus&&($scope.setFocus=!1)},$scope.add=function(evt){if(evt.preventDefault(),$scope.editMode=!1,$scope.setFocus=!0,$scope.newItem&&$scope.newItem.alias&&Utilities.isNumber($scope.newItem.width)&&Utilities.isNumber($scope.newItem.height)&&$scope.newItem.width>0&&$scope.newItem.height>0)return _.find($scope.model.value,function(item){return $scope.newItem.alias===item.alias})?($scope.newItem=null,void($scope.hasError=!1)):($scope.model.value.push($scope.newItem),$scope.newItem={},$scope.hasError=!1,void($scope.cropAdded=!1));$scope.hasError=!0},$scope.createNew=function(event){13==event.keyCode&&$scope.add(event)},$scope.sortableOptions={axis:"y",containment:"parent",cursor:"move",tolerance:"pointer"}}),angular.module("umbraco").controller("Umbraco.PrevalueEditors.IconPickerController",iconPreValsController),angular.module("umbraco").controller("Umbraco.PrevalueEditors.IncludePropertiesListViewController",includePropsPreValsController),function(){angular.module("umbraco").controller("Umbraco.PrevalueEditors.ListViewLayoutsPreValsController",function ListViewLayoutsPreValsController($scope,editorService){var vm=this;vm.focusLayoutName=!1,vm.layoutsSortableOptions={axis:"y",containment:"parent",distance:10,tolerance:"pointer",opacity:.7,scroll:!0,cursor:"move",handle:".list-view-layout__sort-handle"},vm.addLayout=function addLayout(){vm.focusLayoutName=!1,$scope.model.value.push({name:"",path:"",icon:"icon-stop",selected:!0})},vm.showPrompt=function showPrompt(layout){layout.deletePrompt=!0},vm.hidePrompt=function hidePrompt(layout){layout.deletePrompt=!1},vm.removeLayout=function removeLayout($index,layout){$scope.model.value.splice($index,1)},vm.openIconPicker=function openIconPicker(layout){var iconPicker={icon:layout.icon.split(" ")[0],color:layout.icon.split(" ")[1],submit:function submit(model){model.icon&&(model.color?layout.icon=model.icon+" "+model.color:layout.icon=model.icon),vm.focusLayoutName=!0,editorService.close()},close:function close(){editorService.close()}};editorService.iconPicker(iconPicker)}})}(),function(){angular.module("umbraco").controller("Umbraco.PropertyEditors.ListView.GridLayoutController",function ListViewGridLayoutController($scope,mediaHelper,$location,listViewHelper,mediaTypeHelper){var vm=this,umbracoSettings=Umbraco.Sys.ServerVariables.umbracoSettings;vm.nodeId=$scope.contentId,vm.acceptedFileTypes=mediaHelper.formatFileTypes(umbracoSettings.allowedUploadFiles),""===vm.acceptedFileTypes&&(vm.acceptedFileTypes=!mediaHelper.formatFileTypes(umbracoSettings.disallowedUploadFiles)),vm.maxFileSize=umbracoSettings.maxFileSize+"KB",vm.activeDrag=!1,vm.mediaDetailsTooltip={},vm.itemsWithoutFolders=[],vm.isRecycleBin="-21"===$scope.contentId||"-20"===$scope.contentId,vm.acceptedMediatypes=[],vm.dragEnter=function dragEnter(el,event){vm.activeDrag=!0},vm.dragLeave=function dragLeave(el,event){vm.activeDrag=!1},vm.onFilesQueue=function onFilesQueue(){vm.activeDrag=!1},vm.onUploadComplete=function onUploadComplete(){$scope.getContent($scope.contentId)},vm.hoverMediaItemDetails=function hoverMediaItemDetails(item,event,hover){hover&&!vm.mediaDetailsTooltip.show?(vm.mediaDetailsTooltip.event=event,vm.mediaDetailsTooltip.item=item,vm.mediaDetailsTooltip.show=!0):!hover&&vm.mediaDetailsTooltip.show&&(vm.mediaDetailsTooltip.show=!1)},vm.selectContentItem=function selectContentItem(item,$event,$index){listViewHelper.selectHandler(item,$index,$scope.items,$scope.selection,$event)},vm.selectItem=function selectItem(item,$event,$index){listViewHelper.selectHandler(item,$index,vm.itemsWithoutFolders,$scope.selection,$event)},vm.selectFolder=function selectFolder(folder,$event,$index){listViewHelper.selectHandler(folder,$index,$scope.folders,$scope.selection,$event)},vm.goToItem=function goToItem(item,$event,$index){listViewHelper.editItem(item,$scope)},function activate(){vm.itemsWithoutFolders=function filterOutFolders(items){var newArray=[];if(items&&items.length)for(var i=0;items.length>i;i++){var item=items[i],isFolder=!mediaHelper.hasFilePropertyType(item);isFolder||newArray.push(item)}return newArray}($scope.items),"media"!==$scope.entityType||vm.isRecycleBin||mediaTypeHelper.getAllowedImagetypes(vm.nodeId).then(function(types){vm.acceptedMediatypes=types})}()})}(),function(){angular.module("umbraco").controller("Umbraco.PropertyEditors.ListView.ListLayoutController",function ListViewListLayoutController($scope,listViewHelper,mediaHelper,mediaTypeHelper,urlHelper){var vm=this,umbracoSettings=Umbraco.Sys.ServerVariables.umbracoSettings;vm.nodeId=$scope.contentId,vm.acceptedFileTypes=mediaHelper.formatFileTypes(umbracoSettings.allowedUploadFiles),""===vm.acceptedFileTypes&&(vm.acceptedFileTypes=!mediaHelper.formatFileTypes(umbracoSettings.disallowedUploadFiles)),vm.maxFileSize=umbracoSettings.maxFileSize+"KB",vm.activeDrag=!1,vm.isRecycleBin="-21"===$scope.contentId||"-20"===$scope.contentId,vm.acceptedMediatypes=[],vm.selectItem=function selectItem(selectedItem,$index,$event){listViewHelper.selectHandler(selectedItem,$index,$scope.items,$scope.selection,$event)},vm.clickItem=function clickItem(item){listViewHelper.editItem(item,$scope)},vm.selectAll=function selectAll(){listViewHelper.selectAllItemsToggle($scope.items,$scope.selection)},vm.isSelectedAll=function isSelectedAll(){return listViewHelper.isSelectedAll($scope.items,$scope.selection)},vm.isSortDirection=function isSortDirection(col,direction){return listViewHelper.setSortingDirection(col,direction,$scope.options)},vm.sort=function sort(field,allow,isSystem){allow&&($scope.options.orderBySystemField=isSystem,listViewHelper.setSorting(field,allow,$scope.options),$scope.getContent($scope.contentId))},vm.dragEnter=function dragEnter(el,event){vm.activeDrag=!0},vm.dragLeave=function dragLeave(el,event){vm.activeDrag=!1},vm.onFilesQueue=function onFilesQueue(){vm.activeDrag=!1},vm.onUploadComplete=function onUploadComplete(){$scope.getContent($scope.contentId)},function markAsSensitive(){$scope.options.includeProperties.forEach(function(option){option.isSensitive=!1,$scope.items&&$scope.items.length&&$scope.items.forEach(function(item){item.properties.forEach(function(property){option.alias===property.alias&&(option.isSensitive=property.isSensitive)})})})}(),function activate(){"media"===$scope.entityType&&mediaTypeHelper.getAllowedImagetypes(vm.nodeId).then(function(types){vm.acceptedMediatypes=types})}()})}(),angular.module("umbraco").controller("Umbraco.PropertyEditors.ListViewController",listViewController),function(){angular.module("umbraco").controller("Umbraco.Overlays.ListViewPublishController",function ListViewPublishController($scope,$routeParams,localizationService){var vm=this;vm.loading=!0,vm.changeSelection=function changeSelection(language){var firstSelected=_.find(vm.languages,function(language){return language.publish});$scope.model.disableSubmitButton=!firstSelected,language.save=language.publish},function onInit(){if(vm.languages=$scope.model.languages,$scope.model.title||localizationService.localize("content_readyToPublish").then(function(value){$scope.model.title=value}),vm.languages&&vm.languages.length>0){var culture=$routeParams.cculture?$routeParams.cculture:$routeParams.mculture;if(culture){vm.languages=_.sortBy(vm.languages,function(language){return language.culture===culture?0:1});var active=_.find(vm.languages,function(language){return language.culture===culture});active&&(active.publish=!0)}}vm.loading=!1}(),$scope.$on("$destroy",function(){if(vm.languages&&vm.languages.length>0)for(var i=0;i<vm.languages.length;i++)vm.languages[i].publish=!1,vm.languages[i].save=!1})})}(),function(){angular.module("umbraco").controller("Umbraco.Overlays.ListViewUnpublishController",function ListViewUnpublishController($scope,$routeParams,localizationService){var vm=this;function changeSelection(language){var firstSelected=_.find(vm.languages,function(language){return language.unpublish});$scope.model.disableSubmitButton=!firstSelected,language.isMandatory&&$scope.model.languages.forEach(function(lang){lang!==language&&(lang.unpublish=!0,lang.disabled=language.unpublish)})}vm.loading=!0,vm.changeSelection=changeSelection,function onInit(){if(vm.languages=$scope.model.languages,$scope.model.title||localizationService.localize("content_unpublish").then(function(value){$scope.model.title=value}),vm.languages&&vm.languages.length>0){var culture=$routeParams.cculture?$routeParams.cculture:$routeParams.mculture;if(culture){vm.languages=_.sortBy(vm.languages,function(language){return language.culture===culture?0:1});var active=_.find(vm.languages,function(language){return language.culture===culture});active&&(active.unpublish=!0,changeSelection(active))}}vm.loading=!1}(),$scope.$on("$destroy",function(){if(vm.languages&&vm.languages.length>0)for(var i=0;i<vm.languages.length;i++)vm.languages[i].unpublish=!1,vm.languages[i].save=!1})})}(),angular.module("umbraco").controller("Umbraco.PrevalueEditors.SortByListViewController",sortByPreValsController),angular.module("umbraco").controller("Umbraco.PropertyEditors.MarkdownEditorController",MarkdownEditorController),angular.module("umbraco").controller("Umbraco.PrevalueEditors.MarkdownEditorController",function($scope){$scope.model.value||($scope.model.value="small")}),angular.module("umbraco").controller("Umbraco.PropertyEditors.MediaPickerController",function($scope,entityResource,mediaHelper,$timeout,userService,localizationService,editorService,overlayService,clipboardService){var vm=this;vm.labels={},vm.labels.deletedItem="",vm.add=function add(){var mediaPicker={startNodeId:$scope.model.config.startNodeId,startNodeIsVirtual:$scope.model.config.startNodeIsVirtual,dataTypeKey:$scope.model.dataTypeKey,multiPicker:multiPicker,onlyImages:onlyImages,disableFolderSelect:disableFolderSelect,clickPasteItem:function clickPasteItem(item,mouseEvent){if(Array.isArray(item.data)){item.data.forEach(function(entry){pasteFromClipboard(entry,item.type)&&0})}else pasteFromClipboard(item.data,item.type);mouseEvent.ctrlKey||mouseEvent.metaKey||editorService.close(),setDirty()},submit:function submit(model){editorService.close(),model.selection.forEach(function(media){!media.thumbnail&&media.id&&media.metaData&&(media.thumbnail=mediaHelper.resolveFileFromEntity(media,!0)),vm.mediaItems.push(media),"udi"===$scope.model.config.idType?selectedIds.push(media.udi):selectedIds.push(media.id)}),sync(),reloadUpdatedMediaItems(model.updatedMediaNodes),setDirty()},close:function close(model){editorService.close(),reloadUpdatedMediaItems(model.updatedMediaNodes)}},allowedTypes=null;onlyImages&&(allowedTypes=["Image"]);mediaPicker.clickClearClipboard=function($event){clipboardService.clearEntriesOfType(clipboardService.TYPES.Media,allowedTypes)},mediaPicker.clipboardItems=clipboardService.retriveEntriesOfType(clipboardService.TYPES.MEDIA,allowedTypes),mediaPicker.clipboardItems.sort(function(a,b){return b.date-a.date}),editorService.mediaPicker(mediaPicker)},vm.remove=function remove(index){vm.mediaItems.splice(index,1),selectedIds.splice(index,1),sync(),setDirty()},vm.copyItem=function copyItem(mediaItem){var mediaEntry={};mediaEntry.mediaKey=mediaItem.key,clipboardService.copy(clipboardService.TYPES.MEDIA,mediaItem.metaData.ContentTypeAlias,mediaEntry,mediaItem.name,mediaItem.icon,mediaItem.udi)},vm.editItem=function editItem(item){var mediaEditor={id:item.id,submit:function submit(model){editorService.close(),model&&model.mediaNode&&entityResource.getById(model.mediaNode.id,"Media").then(function(mediaEntity){vm.mediaItems.forEach(function(media){media.id===model.mediaNode.id&&(Utilities.extend(media,mediaEntity),media.thumbnail=mediaHelper.resolveFileFromEntity(media,!0))})})},close:function close(){editorService.close()}};editorService.mediaEditor(mediaEditor)},vm.showAdd=function showAdd(){if(!multiPicker&&$scope.model.value&&""!==$scope.model.value)return!1;return!0},vm.mediaItems=[];var selectedIds=[],multiPicker=!(!$scope.model.config.multiPicker||"0"===$scope.model.config.multiPicker),onlyImages=!(!$scope.model.config.onlyImages||"0"===$scope.model.config.onlyImages),disableFolderSelect=!(!$scope.model.config.disableFolderSelect||"0"===$scope.model.config.disableFolderSelect);function appendMedia(media){!media.extension&&media.id&&media.metaData&&(media.extension=mediaHelper.getFileExtension(media.metaData.MediaPath)),!media.thumbnail&&media.id&&media.metaData&&(media.thumbnail=mediaHelper.resolveFileFromEntity(media,!0)),vm.mediaItems.push(media),"udi"===$scope.model.config.idType?selectedIds.push(media.udi):selectedIds.push(media.id)}function sync(){$scope.model.value=selectedIds.join(),removeAllEntriesAction.isDisabled=0===selectedIds.length,copyAllEntriesAction.isDisabled=removeAllEntriesAction.isDisabled}function setDirty(){vm.modelValueForm&&vm.modelValueForm.modelValue.$setDirty()}function reloadUpdatedMediaItems(updatedMediaNodes){vm.mediaItems.forEach(function(media){-1!==updatedMediaNodes.indexOf(media.udi)&&(media.loading=!0,entityResource.getById(media.udi,"Media").then(function(mediaEntity){Utilities.extend(media,mediaEntity),media.thumbnail=mediaHelper.resolveFileFromEntity(media,!0),media.loading=!1}))})}function pasteFromClipboard(pasteEntry,pasteType){void 0!==pasteEntry&&(pasteEntry=clipboardService.parseContentForPaste(pasteEntry,pasteType),entityResource.getById(pasteEntry.mediaKey,"Media").then(function(mediaEntity){!0===disableFolderSelect&&"Folder"===mediaEntity.metaData.ContentTypeAlias||(appendMedia(mediaEntity),sync())}))}$scope.allowEditMedia=!1,$scope.allowAddMedia=!1;var copyAllEntriesAction={labelKey:"clipboard_labelForCopyAllEntries",labelTokens:["Media"],icon:"documents",method:function copyAllEntries(){if($scope.mediaItems.length>0){var aliases=$scope.mediaItems.map(function(mediaEntity){return mediaEntity.metaData.ContentTypeAlias});aliases=aliases.filter(function(item,index){return aliases.indexOf(item)===index});var data=$scope.mediaItems.map(function(mediaEntity){return{mediaKey:mediaEntity.key}});localizationService.localize("clipboard_labelForArrayOfItems",[$scope.model.label]).then(function(localizedLabel){clipboardService.copyArray(clipboardService.TYPES.MEDIA,aliases,data,localizedLabel,"icon-thumbnail-list",$scope.model.id)})}},isDisabled:!0},removeAllEntriesAction={labelKey:"clipboard_labelForRemoveAllEntries",labelTokens:[],icon:"trash",method:function removeAllEntries(){localizationService.localizeMany(["content_nestedContentDeleteAllItems","general_delete"]).then(function(data){overlayService.confirmDelete({title:data[1],content:data[0],close:function close(){overlayService.close()},submit:function submit(){vm.mediaItems.length=0,selectedIds.length=0,sync(),setDirty(),overlayService.close()}})})},isDisabled:!0};if(!0===multiPicker){var propertyActions=[copyAllEntriesAction,removeAllEntriesAction];$scope.umbProperty&&$scope.umbProperty.setPropertyActions(propertyActions)}$scope.sortableOptions={containment:"parent",cursor:"move",tolerance:"pointer",disabled:!multiPicker,items:"li:not(.add-wrapper)",cancel:".unsortable",update:function update(){setDirty(),$timeout(function(){selectedIds=vm.mediaItems.map(function(media){return"udi"===$scope.model.config.idType?media.udi:media.id}),sync()})}},function init(){localizationService.localizeMany(["mediaPicker_deletedItem","mediaPicker_trashed"]).then(function(data){vm.labels.deletedItem=data[0],vm.labels.trashed=data[1],userService.getCurrentUser().then(function(userData){$scope.model.config.startNodeId||(!0===$scope.model.config.ignoreUserStartNodes?($scope.model.config.startNodeId=-1,$scope.model.config.startNodeIsVirtual=!0):($scope.model.config.startNodeId=1!==userData.startMediaIds.length?-1:userData.startMediaIds[0],$scope.model.config.startNodeIsVirtual=1!==userData.startMediaIds.length));var hasAccessToMedia=-1!==userData.allowedSections.indexOf("media");$scope.allowEditMedia=hasAccessToMedia,$scope.allowAddMedia=hasAccessToMedia,function setupViewModel(){if($scope.isMultiPicker=multiPicker,$scope.model.value){var ids=$scope.model.value.split(",");entityResource.getByIds(ids,"Media").then(function(medias){(medias=ids.map(function(id){return medias.find(function(m){return m.udi.toString()===id.toString()||m.id.toString()===id.toString()})||{name:vm.labels.deletedItem,id:"udi"!==$scope.model.config.idType?id:null,udi:"udi"===$scope.model.config.idType?id:null,icon:"icon-picture",thumbnail:null,trashed:!0}})).forEach(function(media){return appendMedia(media)}),sync()})}}()})})}()}),angular.module("umbraco").controller("Umbraco.PropertyEditors.MediaPicker3.CropConfigurationController",function($scope){var unsubscribe=[];$scope.model.value||($scope.model.value=[]),$scope.setFocus=!1,$scope.remove=function(crop,evt){evt.preventDefault();var i=$scope.model.value.indexOf(crop);i>-1&&$scope.model.value.splice(i,1)},$scope.edit=function(crop,evt){evt.preventDefault(),crop.editMode=!0},$scope.addNewCrop=function(evt){evt.preventDefault();var crop={editMode:!0};$scope.model.value.push(crop),$scope.validate(crop)},$scope.setChanges=function(crop){$scope.validate(crop),!0!==crop.hasWidthError&&!0!==crop.hasHeightError&&!0!==crop.hasAliasError&&(crop.editMode=!1,window.dispatchEvent(new Event("resize.umbImageGravity")))},$scope.isEmpty=function(crop){return!(crop.label||crop.alias||crop.width||crop.height)},$scope.useForAlias=function(crop){null!=crop.alias&&""!==crop.alias||(crop.alias=(crop.label||"").toCamelCase())},$scope.validate=function(crop){$scope.validateWidth(crop),$scope.validateHeight(crop),$scope.validateAlias(crop)},$scope.validateWidth=function(crop){crop.hasWidthError=!(Utilities.isNumber(crop.width)&&crop.width>0)},$scope.validateHeight=function(crop){crop.hasHeightError=!(Utilities.isNumber(crop.height)&&crop.height>0)},$scope.validateAlias=function(crop,$event){void 0!==$scope.model.value.find(function(x){return crop!==x&&crop.alias===x.alias})||""===crop.alias?crop.hasAliasError=!0:crop.hasAliasError=!1},$scope.confirmChanges=function(crop,event){13==event.keyCode&&($scope.setChanges(crop,event),event.preventDefault())},$scope.focusNextField=function(event){if(13==event.keyCode){var el=event.target,inputs=Array.from(document.querySelectorAll("input:not(disabled)"));if(inputs.indexOf(el)>-1){var nextIndex=inputs.indexOf(el)+1;inputs.length>nextIndex&&(inputs[nextIndex].focus(),event.preventDefault())}}},$scope.sortableOptions={axis:"y",containment:"parent",cursor:"move",tolerance:"pointer"},$scope.$on("$destroy",function(){var _iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _step,_iterator=unsubscribe[Symbol.iterator]();!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){(0,_step.value)()}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{_iteratorNormalCompletion||null==_iterator.return||_iterator.return()}finally{if(_didIteratorError)throw _iteratorError}}})}),angular.module("umbraco").controller("Umbraco.PropertyEditors.MediaPicker3PropertyEditor.CreateButtonController",function Controller($scope){var vm=this;vm.plusPosY=0,vm.onMouseMove=function($event){vm.plusPosY=$event.offsetY}}),angular.module("umbraco").controller("Umbraco.PropertyEditors.MemberGroupPickerController",memberGroupPicker),angular.module("umbraco").controller("Umbraco.PropertyEditors.MemberGroupController",memberGroupController),angular.module("umbraco").controller("Umbraco.PropertyEditors.MemberPickerController",memberPickerController),angular.module("umbraco").controller("Umbraco.PropertyEditors.MultipleTextBoxController",MultipleTextBoxController),angular.module("umbraco").controller("Umbraco.PropertyEditors.MultiUrlPickerController",multiUrlPickerController),angular.module("umbraco").controller("Umbraco.PrevalueEditors.MultiUrlPickerController",function($scope){$scope.model.value||($scope.model.value="small")}),function(){angular.module("umbraco").run(["clipboardService",function(clipboardService){clipboardService.registerPastePropertyResolver(function resolveNestedContentPropertiesForPaste(prop,propClearingMethod){if("object"===_typeof(prop)&&"Umbraco.NestedContent"===prop.editor)for(var value=prop.value,i=0;i<value.length;i++){var obj=value[i];for(var k in obj.key=String.CreateGuid(),obj)propClearingMethod(obj[k],clipboardService.TYPES.RAW)}},clipboardService.TYPES.ELEMENT_TYPE),clipboardService.registerPastePropertyResolver(function resolveInnerNestedContentPropertiesForPaste(prop,propClearingMethod){if(Array.isArray(prop)&&prop.length>0&&void 0!==prop[0].ncContentTypeAlias)for(var i=0;i<prop.length;i++){var obj=prop[i];for(var k in obj.key=String.CreateGuid(),obj)propClearingMethod(obj[k],clipboardService.TYPES.RAW)}},clipboardService.TYPES.RAW)}]),angular.module("umbraco").component("nestedContentPropertyEditor",{template:' <div id="umb-nested-content--{{model.id}}" class="umb-nested-content" ng-class="{\'umb-nested-content--narrow\':!vm.wideMode, \'umb-nested-content--wide\':vm.wideMode}"> <umb-load-indicator class="mt2" ng-if="!vm.inited"></umb-load-indicator> <ng-form name="nestedContentForm" ng-show="vm.inited"> <div class="umb-nested-content__items" ng-hide="vm.nodes.length === 0" ui-sortable="vm.sortableOptions" ng-model="vm.nodes"> <div ng-repeat="node in vm.nodes" ng-init="node.icon = vm.getIcon($index)"> <ng-form name="ncRowForm" val-server-match="{ \'contains\': node.key }"> <div class="umb-nested-content__item" ng-class="{ \'umb-nested-content__item--active\' : vm.currentNode.key === node.key, \'umb-nested-content__item--single\' : vm.singleMode, \'--error\': ncRowForm.$invalid }"> <div class="umb-nested-content__header-bar" ng-click="vm.editNode($index)" ng-hide="vm.singleMode" umb-auto-focus="{{vm.focusOnNode && vm.currentNode.key === node.key ? \'true\' : \'false\'}}"> <div class="umb-nested-content__heading"> <umb-icon icon="{{node.icon}}" class="icon umb-nested-content__item-icon"></umb-icon> <span class="umb-nested-content__item-name" ng-class="{\'--has-icon\': vm.showIcons}" ng-bind="vm.getName($index)"></span> </div> <div class="umb-nested-content__icons"> <button type="button" class="umb-nested-content__icon umb-nested-content__icon--copy" title="{{vm.labels.copy_icon_title}}" ng-click="vm.clickCopy($event, node);" ng-if="vm.showCopy"> <umb-icon icon="icon-documents" class="icon"></umb-icon> <span class="sr-only">{{vm.labels.copy_icon_title}}</span> </button> <button type="button" class="umb-nested-content__icon umb-nested-content__icon--delete" localize="title" title="general_delete" ng-class="{ \'umb-nested-content__icon--disabled\': !vm.canDeleteNode($index) }" ng-click="vm.requestDeleteNode($index); $event.stopPropagation();"> <umb-icon icon="icon-trash" class="icon"></umb-icon> <span class="sr-only"> <localize key="general_delete">Delete</localize> </span> </button> </div> </div> <div class="umb-nested-content__content" ng-if="vm.currentNode.key === node.key && !vm.sorting"> <umb-nested-content-editor ng-model="node" tab-alias="ncTabAlias"></umb-nested-content-editor> </div> </div> </ng-form> </div> </div> <div ng-hide="vm.hasContentTypes"> <div class="umb-nested-content__help-text"> <localize key="content_nestedContentNoContentTypes">No content types are configured for this property.</localize> </div> </div> <div class="umb-nested-content__footer-bar" ng-hide="!vm.inited || vm.hasContentTypes === false || vm.singleMode === true"> <button type="button" class="btn-reset umb-nested-content__add-content umb-focus" ng-class="{ \'--disabled\': (!vm.scaffolds.length || vm.nodes.length >= vm.maxItems) }" ng-click="vm.openNodeTypePicker($event)" aria-disabled="{{!vm.scaffolds.length || vm.nodes.length >= vm.maxItems}}"> <localize key="grid_addElement">Add element</localize> </button> </div>  <input type="hidden" name="minCount" ng-model="vm.nodes"> <input type="hidden" name="maxCount" ng-model="vm.nodes"> <div ng-messages="nestedContentForm.minCount.$error" show-validation-on-submit> <div class="help text-error" ng-message="minCount"> <localize key="validation_entriesShort" tokens="[vm.minItems, vm.minItems - vm.nodes.length]" watch-tokens="true">Minimum %0% entries, needs <strong>%1%</strong> more.</localize> </div> </div> <div ng-if="nestedContentForm.minCount.$error === true || vm.nodes.length > vm.maxItems"> <div class="help text-error"> <localize key="validation_entriesExceed" tokens="[vm.maxItems, vm.nodes.length - vm.maxItems]" watch-tokens="true">Maximum %0% entries, <strong>%1%</strong> too many.</localize> </div> </div> </ng-form> </div> ',controller:function NestedContentController($scope,$interpolate,$filter,serverValidationManager,contentResource,localizationService,iconHelper,clipboardService,eventsService,overlayService){var vm=this,model=$scope.$parent.$parent.model,contentTypeAliases=[];_.each(model.config.contentTypes,function(contentType){contentTypeAliases.push(contentType.ncAlias)}),_.each(model.config.contentTypes,function(contentType){contentType.nameExp=contentType.nameTemplate?$interpolate(contentType.nameTemplate):void 0}),vm.nodes=[],vm.currentNode=null,vm.scaffolds=null,vm.sorting=!1,vm.inited=!1,vm.minItems=model.config.minItems||0,vm.maxItems=model.config.maxItems||0,0===vm.maxItems&&(vm.maxItems=1e3);vm.singleMode=1===vm.minItems&&1===vm.maxItems&&1===model.config.contentTypes.length,vm.showIcons=Object.toBoolean(model.config.showIcons),vm.wideMode=Object.toBoolean(model.config.hideLabel),vm.hasContentTypes=model.config.contentTypes.length>0;var cultureChanged=eventsService.on("editors.content.cultureChanged",function(name,args){return updateModel()}),labels={};function setCurrentNode(node,focusNode){updateModel(),vm.currentNode=node,vm.focusOnNode=focusNode}vm.labels=labels,localizationService.localizeMany(["grid_addElement","content_createEmpty","actions_copy"]).then(function(data){labels.grid_addElement=data[0],labels.content_createEmpty=data[1],labels.copy_icon_title=data[2]});var copyAllEntriesAction={labelKey:"clipboard_labelForCopyAllEntries",labelTokens:[model.label],icon:"documents",method:function copyAllEntries(){syncCurrentNode();var aliases=vm.nodes.map(function(node){return node.contentTypeAlias});aliases=aliases.filter(function(item,index){return aliases.indexOf(item)===index});var nodeName="";vm.umbVariantContent&&(nodeName=vm.umbVariantContent.editor.content.name);localizationService.localize("clipboard_labelForArrayOfItemsFrom",[model.label,nodeName]).then(function(data){clipboardService.copyArray(clipboardService.TYPES.ELEMENT_TYPE,aliases,vm.nodes,data,"icon-thumbnail-list",model.id,clearNodeForCopy)})},isDisabled:!0},removeAllEntriesAction={labelKey:"clipboard_labelForRemoveAllEntries",labelTokens:[],icon:"trash",method:function removeAllEntries(){localizationService.localizeMany(["content_nestedContentDeleteAllItems","general_delete"]).then(function(data){overlayService.confirmDelete({title:data[1],content:data[0],close:function close(){overlayService.close()},submit:function submit(){vm.nodes=[],setDirty(),updateModel(),overlayService.close()}})})},isDisabled:!0};function setDirty(){vm.umbProperty&&vm.umbProperty.setDirty()}function addNode(alias){var scaffold=getScaffold(alias),newNode=createNode(scaffold,null);setCurrentNode(newNode,!0),setDirty(),validate()}function deleteNode(idx){var removed=vm.nodes.splice(idx,1);setDirty(),removed.forEach(function(x){serverValidationManager.removePropertyError(x.key,vm.umbProperty.property.culture,vm.umbProperty.property.segment,"",{matchType:"contains"})}),updateModel(),validate()}function getScaffold(alias){return _.find(vm.scaffolds,function(scaffold){return scaffold.contentTypeAlias===alias})}function clearNodeForCopy(clonedData){delete clonedData.key,delete clonedData.$$hashKey;for(var variant=clonedData.variants[0],t=0;t<variant.tabs.length;t++)for(var tab=variant.tabs[t],p=0;p<tab.properties.length;p++){var prop=tab.properties[p];prop.propertyAlias&&(prop.alias=prop.propertyAlias,delete prop.propertyAlias),void 0!==prop.ncMandatory&&(prop.validation.mandatory=prop.ncMandatory,delete prop.ncMandatory)}}function pasteFromClipboard(newNode){if(void 0!==newNode){(newNode=clipboardService.parseContentForPaste(newNode,clipboardService.TYPES.ELEMENT_TYPE)).key=String.CreateGuid();for(var variant=newNode.variants[0],t=0;t<variant.tabs.length;t++)for(var tab=variant.tabs[t],p=0;p<tab.properties.length;p++)extendPropertyWithNCData(tab.properties[p]);vm.nodes.push(newNode),setDirty(),setCurrentNode(newNode,!0)}}function checkAbilityToPasteContent(){vm.showPaste=clipboardService.hasEntriesOfType(clipboardService.TYPES.ELEMENT_TYPE,contentTypeAliases)}vm.openNodeTypePicker=function($event){if(!(vm.nodes.length>=vm.maxItems)){var availableItems=[];_.each(vm.scaffolds,function(scaffold){availableItems.push({alias:scaffold.contentTypeAlias,name:scaffold.contentTypeName,icon:iconHelper.convertFromLegacyIcon(scaffold.icon),tooltip:scaffold.documentType.description})});var dialog={orderBy:"$index",view:"itempicker",event:$event,filter:availableItems.length>12,size:availableItems.length>6?"medium":"small",availableItems:availableItems,clickPasteItem:function clickPasteItem(item){Array.isArray(item.data)?_.each(item.data,function(entry){pasteFromClipboard(entry)}):pasteFromClipboard(item.data),overlayService.close()},submit:function submit(model){model&&model.selectedItem&&addNode(model.selectedItem.alias),overlayService.close()},close:function close(){overlayService.close()}};if(0!==dialog.availableItems.length){dialog.pasteItems=[];var entriesForPaste=clipboardService.retriveEntriesOfType(clipboardService.TYPES.ELEMENT_TYPE,contentTypeAliases);if(_.each(entriesForPaste,function(entry){dialog.pasteItems.push({date:entry.date,name:entry.label,data:entry.data,icon:entry.icon})}),dialog.pasteItems.sort(function(a,b){return b.date-a.date}),dialog.title=dialog.pasteItems.length>0?labels.grid_addElement:labels.content_createEmpty,dialog.hideHeader=dialog.pasteItems.length>0,dialog.clickClearPaste=function($event){$event.stopPropagation(),$event.preventDefault(),clipboardService.clearEntriesOfType(clipboardService.TYPES.ELEMENT_TYPE,contentTypeAliases),dialog.pasteItems=[],dialog.hideHeader=!1},1===dialog.availableItems.length&&0===dialog.pasteItems.length)return addNode(vm.scaffolds[0].contentTypeAlias),void dialog.close();overlayService.open(dialog)}}},vm.editNode=function(idx){vm.currentNode&&vm.currentNode.key===vm.nodes[idx].key?setCurrentNode(null,!1):setCurrentNode(vm.nodes[idx],!0)},vm.canDeleteNode=function(idx){return vm.nodes.length>vm.minItems||model.config.contentTypes.length>1},vm.requestDeleteNode=function(idx){vm.canDeleteNode(idx)&&(!0===model.config.confirmDeletes?localizationService.localizeMany(["content_nestedContentDeleteItem","general_delete","general_cancel","contentTypeEditor_yesDelete"]).then(function(data){var overlay={title:data[1],content:data[0],closeButtonLabel:data[2],submitButtonLabel:data[3],submitButtonStyle:"danger",close:function close(){overlayService.close()},submit:function submit(){deleteNode(idx),overlayService.close()}};overlayService.open(overlay)}):deleteNode(idx))},vm.getName=function(idx){if(!model.value||!model.value.length)return"";var name="";if(model.value[idx]){var contentType=function getContentTypeConfig(alias){return _.find(model.config.contentTypes,function(contentType){return contentType.ncAlias===alias})}(model.value[idx].ncContentTypeAlias);if(null!=contentType){if(contentType.nameExp){var item=model.value[idx];item.$index=idx+1;var newName=contentType.nameExp(item);newName&&(newName=newName.trim())&&(name=newName),delete item.$index}if(!name&&vm.scaffolds.length>1){var scaffold=getScaffold(contentType.ncAlias);scaffold&&(name=scaffold.contentTypeName)}}}return name||(name="Item "+(idx+1)),vm.nodes[idx].name!==name&&(vm.nodes[idx].name=name),name},vm.getIcon=function(idx){if(!model.value||!model.value.length)return"";var scaffold=getScaffold(model.value[idx].ncContentTypeAlias);return scaffold&&scaffold.icon?iconHelper.convertFromLegacyIcon(scaffold.icon):"icon-folder"},vm.sortableOptions={axis:"y",containment:"parent",cursor:"move",handle:".umb-nested-content__header-bar",distance:10,opacity:.7,tolerance:"pointer",scroll:!0,start:function start(ev,ui){updateModel(),$("#umb-nested-content--"+model.id+" .umb-rte textarea").each(function(){tinymce.execCommand("mceRemoveEditor",!1,$(this).attr("id")),$(this).css("visibility","hidden")}),$scope.$apply(function(){vm.sorting=!0})},update:function update(ev,ui){setDirty()},stop:function stop(ev,ui){$("#umb-nested-content--"+model.id+" .umb-rte textarea").each(function(){tinymce.execCommand("mceAddEditor",!0,$(this).attr("id")),$(this).css("visibility","visible")}),$scope.$apply(function(){vm.sorting=!1,updateModel()})}},vm.showCopy=clipboardService.isSupported(),vm.showPaste=!1,vm.clickCopy=function($event,node){syncCurrentNode(),clipboardService.copy(clipboardService.TYPES.ELEMENT_TYPE,node.contentTypeAlias,node,null,null,null,clearNodeForCopy),$event.stopPropagation()};var storageUpdate=eventsService.on("clipboardService.storageUpdate",checkAbilityToPasteContent);$scope.$on("$destroy",function(){storageUpdate()});var notSupported=["Umbraco.Tags","Umbraco.UploadField","Umbraco.ImageCropper","Umbraco.BlockList"];vm.scaffolds=[],contentResource.getScaffolds(-20,contentTypeAliases).then(function(scaffolds){_.each(model.config.contentTypes,function(contentType){var scaffold=scaffolds[contentType.ncAlias];if(scaffold.isElement){var tabs=scaffold.variants[0].tabs,tab=_.find(tabs,function(tab){return 0!==tab.id&&(tab.alias.toLowerCase()===contentType.ncTabAlias.toLowerCase()||""===contentType.ncTabAlias)});scaffold.variants[0].tabs=[],tab&&(scaffold.variants[0].tabs.push(tab),tab.properties.forEach(function(property){_.find(notSupported,function(x){return x===property.editor})&&(property.notSupported=!0,property.notSupportedMessage="Property "+property.label+" uses editor "+property.editor+" which is not supported by Nested Content.")})),function ensureCultureData(content){if(!content||!vm.umbVariantContent||!vm.umbProperty)return;vm.umbVariantContent.editor.content.language&&(content.language=vm.umbVariantContent.editor.content.language);content.variants[0].tabs.forEach(function(tab){tab.properties.forEach(function(prop){prop.culture=vm.umbProperty.property.culture})})}(scaffold),vm.scaffolds.push(scaffold)}}),initNestedContent()});var initNestedContent=function initNestedContent(){if(vm.scaffolds=$filter("orderBy")(vm.scaffolds,function(s){return contentTypeAliases.indexOf(s.contentTypeAlias)}),model.value)for(var i=0;i<model.value.length;i++){var item=model.value[i],scaffold=getScaffold(item.ncContentTypeAlias);null!=scaffold&&createNode(scaffold,item)}var modelWasChanged=!1;if(vm.nodes.length<vm.minItems&&1===vm.scaffolds.length){for(var i=vm.nodes.length;i<model.config.minItems;i++)addNode(vm.scaffolds[0].contentTypeAlias);modelWasChanged=!0}(vm.singleMode||1===vm.nodes.length&&1===vm.maxItems)&&setCurrentNode(vm.nodes[0],!1),validate(),vm.inited=!0,modelWasChanged&&updateModel(),updatePropertyActionStates(),checkAbilityToPasteContent()};function extendPropertyWithNCData(prop){void 0===prop.propertyAlias&&(prop.propertyAlias=prop.alias,prop.alias=model.alias+"___"+prop.alias),void 0===prop.ncMandatory&&(prop.ncMandatory=prop.validation.mandatory,prop.validation={mandatory:!1,pattern:""})}function createNode(scaffold,fromNcEntry){var node=Utilities.copy(scaffold);node.key=fromNcEntry&&fromNcEntry.key?fromNcEntry.key:String.CreateGuid();for(var variant=node.variants[0],t=0;t<variant.tabs.length;t++)for(var tab=variant.tabs[t],p=0;p<tab.properties.length;p++){var prop=tab.properties[p];extendPropertyWithNCData(prop),fromNcEntry&&fromNcEntry[prop.propertyAlias]&&(prop.value=fromNcEntry[prop.propertyAlias])}return vm.nodes.push(node),node}function convertNodeIntoNCEntry(node){for(var obj={key:node.key,name:node.name,ncContentTypeAlias:node.contentTypeAlias},t=0;t<node.variants[0].tabs.length;t++)for(var tab=node.variants[0].tabs[t],p=0;p<tab.properties.length;p++){var prop=tab.properties[p];"function"!=typeof prop.value&&(obj[prop.propertyAlias]=prop.value)}return obj}function syncCurrentNode(){vm.currentNode&&$scope.$broadcast("ncSyncVal",{key:vm.currentNode.key})}function updateModel(){if(syncCurrentNode(),vm.inited){for(var newValues=[],i=0;i<vm.nodes.length;i++)newValues.push(convertNodeIntoNCEntry(vm.nodes[i]));model.value=newValues}updatePropertyActionStates()}function updatePropertyActionStates(){copyAllEntriesAction.isDisabled=!model.value||!model.value.length,removeAllEntriesAction.isDisabled=copyAllEntriesAction.isDisabled}var propertyActions=[copyAllEntriesAction,removeAllEntriesAction];this.$onInit=function(){vm.umbProperty&&vm.umbProperty.setPropertyActions(propertyActions)};var unsubscribe=$scope.$on("formSubmitting",function(ev,args){updateModel()}),validate=function validate(){vm.nodes.length<vm.minItems?$scope.nestedContentForm.minCount.$setValidity("minCount",!1):$scope.nestedContentForm.minCount.$setValidity("minCount",!0),vm.nodes.length>vm.maxItems?$scope.nestedContentForm.maxCount.$setValidity("maxCount",!1):$scope.nestedContentForm.maxCount.$setValidity("maxCount",!0)},watcher=$scope.$watch(function(){return vm.nodes.length},function(){validate()});$scope.$on("$destroy",function(){unsubscribe(),cultureChanged(),watcher()})},controllerAs:"vm",require:{umbProperty:"?^umbProperty",umbVariantContent:"?^^umbVariantContent"}})}(),angular.module("umbraco").controller("Umbraco.PropertyEditors.NestedContent.DocTypePickerController",["$scope","Umbraco.PropertyEditors.NestedContent.Resources","overlayService","localizationService","iconHelper",function($scope,ncResources,overlayService,localizationService,iconHelper){var selectElementTypeModalTitle="";$scope.elemTypeTabs=[],function init(){localizationService.localize("content_nestedContentSelectElementTypeModalTitle").then(function(value){selectElementTypeModalTitle=value}),ncResources.getContentTypes().then(function(elemTypes){$scope.model.elemTypes=elemTypes,iconHelper.formatContentTypeIcons($scope.model.elemTypes);var elTypeNameOccurrences=_.countBy(elemTypes,"name");elemTypes.forEach(function(value){$scope.elemTypeTabs[value.alias]=value.tabs,elTypeNameOccurrences[value.name]>1&&(value.name+=" ("+value.alias+")")})})}(),$scope.add=function(){$scope.model.value.push({ncAlias:"",ncTabAlias:"",nameTemplate:""})},$scope.remove=function(index){$scope.model.value.splice(index,1)},$scope.sortableOptions={axis:"y",cursor:"move",handle:".handle",placeholder:"sortable-placeholder",forcePlaceholderSize:!0,helper:function helper(e,ui){return ui.children().each(function(){$(this).width($(this).width())}),ui},start:function start(e,ui){var cellHeight=ui.item.height(),cellCount=0;$("td, th",ui.helper).each(function(){var colspan=1,colspanAttr=$(this).attr("colspan");colspanAttr>1&&(colspan=colspanAttr),cellCount+=colspan}),ui.placeholder.html('<td colspan="'+cellCount+'"></td>').height(cellHeight)}},$scope.placeholder=function(config){return _.find($scope.model.elemTypes,function(elType){return elType.alias===config.ncAlias})},$scope.selectableElemTypesFor=function(config){return _.filter($scope.model.elemTypes,function(elType){return elType.alias===config.ncAlias||!_.find($scope.model.value,function(c){return elType.alias===c.ncAlias})})},$scope.canAdd=function(){return!$scope.model.value||_.some($scope.model.elemTypes,function(elType){return!_.find($scope.model.value,function(c){return elType.alias===c.ncAlias})})},$scope.openElemTypeModal=function($event,config){var selectedItems=_.each($scope.model.value,function(obj){return obj.alias=obj.ncAlias,obj}),elemTypeSelectorOverlay={view:"itempicker",title:selectElementTypeModalTitle,availableItems:$scope.selectableElemTypesFor(config),selectedItems:selectedItems,position:"target",event:$event,submit:function submit(model){config.ncAlias=model.selectedItem.alias,1===model.selectedItem.tabs.length&&(config.ncTabAlias=model.selectedItem.tabs[0]),overlayService.close()},close:function close(){overlayService.close()}};overlayService.open(elemTypeSelectorOverlay)},$scope.model.value||($scope.model.value=[],$scope.add())}]),angular.module("umbraco").controller("Umbraco.PropertyEditors.RadioButtonsController",function($scope,validationMessageService){var vm=this;vm.viewItems=[],function init(){if(vm.uniqueId=String.CreateGuid(),Utilities.isObject($scope.model.config.items)){for(var sortedItems=[],vals=_.values($scope.model.config.items),keys=_.keys($scope.model.config.items),i=0;i<vals.length;i++)sortedItems.push({key:keys[i],sortOrder:vals[i].sortOrder,value:vals[i].value});sortedItems.sort(function(a,b){return a.sortOrder>b.sortOrder?1:b.sortOrder>a.sortOrder?-1:0}),vm.viewItems=sortedItems}validationMessageService.getMandatoryMessage($scope.model.validation).then(function(value){$scope.mandatoryMessage=value})}()}),angular.module("umbraco").controller("Umbraco.PropertyEditors.ReadOnlyValueController",ReadOnlyValueController),angular.module("umbraco").controller("Umbraco.PropertyEditors.RelatedLinksController",function($scope,iconHelper,editorService){function countVisible(){return $scope.model.value.length}function select(data){null!=$scope.currentEditLink?($scope.currentEditLink.internal="udi"===$scope.model.config.idType?data.udi:data.id,$scope.currentEditLink.internalName=data.name,$scope.currentEditLink.internalIcon=iconHelper.convertFromLegacyIcon(data.icon),$scope.currentEditLink.link="udi"===$scope.model.config.idType?data.udi:data.id):($scope.newInternal="udi"===$scope.model.config.idType?data.udi:data.id,$scope.newInternalName=data.name,$scope.newInternalIcon=iconHelper.convertFromLegacyIcon(data.icon))}$scope.model.value||($scope.model.value=[]),$scope.model.config.max=function isNumeric(n){return!isNaN(parseFloat(n))&&isFinite(n)}($scope.model.config.max)&&0!==$scope.model.config.max?$scope.model.config.max:Number.MAX_VALUE,$scope.newCaption="",$scope.newLink="http://",$scope.newNewWindow=!1,$scope.newInternal=null,$scope.newInternalName="",$scope.newInternalIcon=null,$scope.addExternal=!0,$scope.currentEditLink=null,$scope.hasError=!1,$scope.internal=function($event){$scope.currentEditLink=null;var contentPicker={section:"content",treeAlias:"content",multiPicker:!1,idType:$scope.model.config.idType?$scope.model.config.idType:"int",submit:function submit(model){select(model.selection[0]),editorService.close()},close:function close(){editorService.close()}};editorService.treePicker(contentPicker),$event.preventDefault()},$scope.selectInternal=function($event,link){$scope.currentEditLink=link;var contentPicker={section:"content",treeAlias:"content",multiPicker:!1,idType:$scope.model.config.idType?$scope.model.config.idType:"udi",submit:function submit(model){select(model.selection[0]),editorService.close()},close:function close(){editorService.close()}};editorService.treePicker(contentPicker),$event.preventDefault()},$scope.edit=function(idx){for(var i=0;i<$scope.model.value.length;i++)$scope.model.value[i].edit=!1;$scope.model.value[idx].edit=!0},$scope.saveEdit=function(idx){$scope.model.value[idx].title=$scope.model.value[idx].caption,$scope.model.value[idx].edit=!1},$scope.delete=function(idx){$scope.model.value.splice(idx,1)},$scope.add=function($event){if(Utilities.isArray($scope.model.value)||($scope.model.value=[]),""==$scope.newCaption)$scope.hasError=!0;else{if($scope.addExternal){var newExtLink=new function(){this.caption=$scope.newCaption,this.link=$scope.newLink,this.newWindow=$scope.newNewWindow,this.edit=!1,this.isInternal=!1,this.type="external",this.title=$scope.newCaption};$scope.model.value.push(newExtLink)}else{var newIntLink=new function(){this.caption=$scope.newCaption,this.link=$scope.newInternal,this.newWindow=$scope.newNewWindow,this.internal=$scope.newInternal,this.edit=!1,this.isInternal=!0,this.internalName=$scope.newInternalName,this.internalIcon=$scope.newInternalIcon,this.type="internal",this.title=$scope.newCaption};$scope.model.value.push(newIntLink)}$scope.newCaption="",$scope.newLink="http://",$scope.newNewWindow=!1,$scope.newInternal=null,$scope.newInternalName="",$scope.newInternalIcon=null}$event.preventDefault()},$scope.switch=function($event){$scope.addExternal=!$scope.addExternal,$event.preventDefault()},$scope.switchLinkType=function($event,link){link.isInternal=!link.isInternal,link.type=link.isInternal?"internal":"external",link.isInternal||(link.link=$scope.newLink),$event.preventDefault()},$scope.move=function(index,direction){var temp=$scope.model.value[index];$scope.model.value[index]=$scope.model.value[index+direction],$scope.model.value[index+direction]=temp},$scope.canAdd=function(){return $scope.model.config.max<=0||$scope.model.config.max>countVisible()},$scope.canSort=function(){return countVisible()>1},$scope.sortableOptions={axis:"y",handle:".handle",cursor:"move",cancel:".no-drag",containment:"parent",placeholder:"sortable-placeholder",forcePlaceholderSize:!0,helper:function helper(e,ui){return ui.children().each(function(){$(this).width($(this).width())}),ui},items:"> tr:not(.unsortable)",tolerance:"pointer",update:function update(e,ui){var newIndex=ui.item.index(),originalIndex=function getElementIndexByUrl(url){for(var i=0;i<$scope.model.value.length;i++)if($scope.model.value[i].link==url)return i;return-1}(ui.item.attr("data-link")),movedElement=$scope.model.value[originalIndex];$scope.model.value.splice(originalIndex,1),$scope.model.value.splice(newIndex,0,movedElement)},start:function start(e,ui){var cellCount=0;$("td, th",ui.helper).each(function(){var colspan=1,colspanAttr=$(this).attr("colspan");colspanAttr>1&&(colspan=colspanAttr),cellCount+=colspan}),ui.placeholder.html('<td colspan="'+cellCount+'"></td>').height(ui.item.height())}}}),function(){angular.module("umbraco").controller("Umbraco.PropertyEditors.RTECodeEditorController",function CodeEditorController($scope,localizationService){var vm=this;vm.submit=function submit(model){model.content=vm.aceEditor.getValue(),$scope.model.submit&&$scope.model.submit(model)},vm.close=function close(){$scope.model.close&&$scope.model.close()},vm.aceOption={},vm.aceOption={mode:"razor",theme:"chrome",showPrintMargin:!1,autoFocus:!0,advanced:{fontSize:"14px",enableSnippets:!1,enableBasicAutocompletion:!0,enableLiveAutocompletion:!1,wrap:!0},onLoad:function onLoad(aceEditor){vm.aceEditor=aceEditor}},vm.template={},vm.template.content=$scope.model.content,function onInit(){$scope.model.title||($scope.model.title="Edit source code")}()})}(),angular.module("umbraco").controller("Umbraco.PropertyEditors.RTEController",function($scope,$q,assetsService,$timeout,tinyMceService,angularHelper,tinyMceAssets){var _this=this;$scope.isLoading=!0,$scope.textAreaHtmlId=$scope.model.alias+"_"+String.CreateGuid();var editorConfig=$scope.model.config?$scope.model.config.editor:null;editorConfig&&!Utilities.isString(editorConfig)||(editorConfig=tinyMceService.defaultPrevalues()),editorConfig.maxImageSize||0===editorConfig.maxImageSize||(editorConfig.maxImageSize=tinyMceService.defaultPrevalues().maxImageSize);var width=editorConfig.dimensions&&parseInt(editorConfig.dimensions.width,10)||null,height=editorConfig.dimensions&&parseInt(editorConfig.dimensions.height,10)||null;$scope.containerWidth="distraction-free"===editorConfig.mode&&width||"auto",$scope.containerHeight="distraction-free"===editorConfig.mode&&height||"auto",$scope.containerOverflow="distraction-free"===editorConfig.mode&&height?"auto":"inherit";var promises=[],initPromise=$q(function(resolve,reject){_this.$onInit=resolve});promises.push(initPromise),tinyMceAssets.forEach(function(tinyJsAsset){promises.push(assetsService.loadJs(tinyJsAsset,$scope))});var tinyMceEditor=null;promises.push(tinyMceService.getTinyMceEditorConfig({htmlId:$scope.textAreaHtmlId,stylesheets:editorConfig.stylesheets,toolbar:editorConfig.toolbar,mode:editorConfig.mode})),$q.all(promises).then(function(result){var standardConfig=result[promises.length-1];null!==height&&standardConfig.plugins.splice(standardConfig.plugins.indexOf("autoresize"),1);var baseLineConfigObj={maxImageSize:editorConfig.maxImageSize,width:width,height:height,setup:function(editor){(tinyMceEditor=editor).on("init",function(e){$timeout(function(){$scope.isLoading=!1})}),tinyMceService.initializeEditor({editor:editor,model:$scope.model,currentFormInput:$scope.rteForm.modelValue})}};Utilities.extend(baseLineConfigObj,standardConfig),$timeout(function(){tinymce.init(baseLineConfigObj)},150);var unsubscribe=$scope.$on("formSubmitting",function(){void 0===tinyMceEditor||null==tinyMceEditor||$scope.isLoading||($scope.model.value=tinyMceEditor.getContent())});$scope.focus=function(){tinyMceEditor.focus()},$scope.$on("$destroy",function(){unsubscribe(),void 0!==tinyMceEditor&&null!=tinyMceEditor&&tinyMceEditor.destroy()})})}),angular.module("umbraco").controller("Umbraco.PrevalueEditors.RteController",function($scope,$timeout,$log,tinyMceService,stylesheetResource,assetsService){var cfg=tinyMceService.defaultPrevalues();$scope.model.value?Utilities.isString($scope.model.value)&&($scope.model.value=cfg):$scope.model.value=cfg,$scope.model.value.stylesheets||($scope.model.value.stylesheets=[]),$scope.model.value.toolbar||($scope.model.value.toolbar=[]),$scope.model.value.maxImageSize||0==$scope.model.value.maxImageSize||($scope.model.value.maxImageSize=cfg.maxImageSize),$scope.model.value.mode||($scope.model.value.mode="classic"),$scope.model.value.overlayWidthSize||($scope.model.value.overlayWidthSize="small"),tinyMceService.configuration().then(function(config){$scope.tinyMceConfig=config,$scope.tinyMceConfig.commands=_.map($scope.tinyMceConfig.commands,function(obj){var icon=function getFontIcon(alias){var icon={name:alias,isCustom:!1};switch(alias){case"ace":icon.name="code",icon.isCustom=!1;break;case"styleselect":case"fontsizeselect":icon.name="icon-list",icon.isCustom=!0;break;case"umbembeddialog":icon.name="icon-tv",icon.isCustom=!0;break;case"umbmediapicker":icon.name="icon-picture",icon.isCustom=!0;break;case"umbmacro":case"umbmacro":icon.name="icon-settings-alt",icon.isCustom=!0;break;default:icon.name=alias,icon.isCustom=!1}return icon}(obj.alias);return Utilities.extend(obj,{fontIcon:icon.name,isCustom:icon.isCustom,selected:$scope.model.value.toolbar.indexOf(obj.alias)>=0,icon:"mce-ico "+(icon.isCustom?" mce-i-custom ":" mce-i-")+icon.name})})}),stylesheetResource.getAll().then(function(stylesheets){$scope.stylesheets=stylesheets;var cssPath=Umbraco.Sys.ServerVariables.umbracoSettings.cssPath;$scope.model.value.stylesheets=$scope.model.value.stylesheets.filter(function(sheet){return sheet.startsWith(cssPath)}),$scope.stylesheets.forEach(function(stylesheet){stylesheet.selected=$scope.model.value.stylesheets.indexOf(stylesheet.path)>=0||$scope.model.value.stylesheets.indexOf(stylesheet.name)>=0})}),$scope.selectCommand=function(command){var index=$scope.model.value.toolbar.indexOf(command.alias);command.selected&&-1===index?$scope.model.value.toolbar.push(command.alias):index>=0&&$scope.model.value.toolbar.splice(index,1)},$scope.selectStylesheet=function(css){var index=$scope.model.value.stylesheets.indexOf(css.path);-1===index&&(index=$scope.model.value.stylesheets.indexOf(css.name)),-1===index?$scope.model.value.stylesheets.push(css.path):$scope.model.value.stylesheets.splice(index,1)};var unsubscribe=$scope.$on("formSubmitting",function(ev,args){var commands=_.where($scope.tinyMceConfig.commands,{selected:!0});$scope.model.value.toolbar=_.pluck(commands,"alias")});$scope.$on("$destroy",function(){unsubscribe()}),assetsService.loadCss("lib/tinymce/skins/lightgray/skin.min.css",$scope)}),angular.module("umbraco").controller("Umbraco.PropertyEditors.SliderController",sliderController),angular.module("umbraco").controller("Umbraco.PropertyEditors.TagsController",function($scope){$scope.valueChanged=function(value){$scope.model.value=value}}),angular.module("umbraco").controller("Umbraco.PropertyEditors.textAreaController",textAreaController),angular.module("umbraco").controller("Umbraco.PropertyEditors.textboxController",textboxController),angular.module("umbraco").controller("Umbraco.PropertyEditors.UrlListController",function($rootScope,$scope,$filter){function formatDisplayValue(){Utilities.isArray($scope.model.value)?$scope.renderModel=_.map($scope.model.value,function(item){return{url:item.url,linkText:item.linkText,urlTarget:item.target?item.target:"_blank",icon:item.icon?item.icon:"icon-out"}}):$scope.renderModel=_.map($scope.model.value.split(","),function(item){return{url:item,linkText:"",urlTarget:$scope.config&&$scope.config.target?$scope.config.target:"_blank",icon:$scope.config&&$scope.config.icon?$scope.config.icon:"icon-out"}})}$scope.getUrl=function(valueUrl){return valueUrl.indexOf("/")>=0?valueUrl:"#"},formatDisplayValue(),$scope.model.onValueChanged=function(newVal,oldVal){formatDisplayValue()}}),angular.module("umbraco").controller("Umbraco.PropertyEditors.UserPickerController",userPickerController),angular.module("umbraco").controller("Umbraco.Editors.RelationTypes.CreateController",RelationTypeCreateController),angular.module("umbraco").controller("Umbraco.Editors.RelationTypes.DeleteController",RelationTypeDeleteController),angular.module("umbraco").controller("Umbraco.Editors.RelationTypes.EditController",RelationTypeEditController),angular.module("umbraco").controller("Umbraco.Editors.RelationTypes.SettingsController",RelationTypeSettingsController),function(){angular.module("umbraco").controller("Umbraco.Editors.Scripts.CreateController",function ScriptsCreateController($scope,$location,navigationService,formHelper,codefileResource,localizationService,appState){var vm=this,node=$scope.currentNode;vm.creatingFolder=!1,vm.folderName="",vm.createFolderError="",vm.fileExtension="",vm.createFile=function createFile(){$location.path("/settings/scripts/edit/"+node.id).search("create","true"),navigationService.hideMenu()},vm.showCreateFolder=function showCreateFolder(){vm.creatingFolder=!0},vm.createFolder=function createFolder(form){formHelper.submitForm({scope:$scope,formCtrl:form})&&codefileResource.createContainer("scripts",node.id,vm.folderName).then(function(saved){navigationService.hideMenu(),navigationService.syncTree({tree:"scripts",path:saved.path,forceReload:!0,activate:!0}),formHelper.resetForm({scope:$scope,formCtrl:form}),appState.getSectionState("currentSection")},function(err){formHelper.resetForm({scope:$scope,formCtrl:form,hasErrors:!0}),vm.createFolderError=err})},vm.close=function close(){navigationService.hideDialog(!0)}})}(),angular.module("umbraco").controller("Umbraco.Editors.Scripts.DeleteController",ScriptsDeleteController),function(){angular.module("umbraco").controller("Umbraco.Editors.Scripts.EditController",function ScriptsEditController($scope,$routeParams,$timeout,appState,editorState,navigationService,assetsService,codefileResource,contentEditingHelper,notificationsService,localizationService,templateHelper,angularHelper){var vm=this;function ready(script,syncTree){function changeAceEditor(){!function setFormState(state){var currentForm=angularHelper.getCurrentForm($scope);"dirty"===state?currentForm.$setDirty():"pristine"===state&&currentForm.$setPristine()}("dirty")}vm.page.loading=!1,vm.script=script,editorState.set(vm.script),syncTree&&navigationService.syncTree({tree:"scripts",path:vm.script.path,forceReload:!0}).then(function(syncArgs){vm.page.menu.currentNode=syncArgs.node}),vm.aceOption={mode:"javascript",theme:"chrome",showPrintMargin:!1,advanced:{fontSize:"14px",enableSnippets:!0,enableBasicAutocompletion:!0,enableLiveAutocompletion:!1},onLoad:function onLoad(_editor){vm.editor=_editor,_editor.commands.bindKey("ctrl-alt-space","startAutocomplete"),_editor.commands.bindKey("ctrl-space",null),_editor.commands.addCommands([{name:"unSelectOrFindPrevious",bindKey:"Alt-Shift-K",exec:function exec(){$scope.$apply(function(){vm.showKeyboardShortcut=!vm.showKeyboardShortcut})},readOnly:!0}]),$routeParams.create||$timeout(function(){vm.editor.navigateFileEnd(),vm.editor.focus()}),vm.editor.on("change",changeAceEditor)}}}vm.header={},vm.header.editorfor="settings_script",vm.header.setPageTitle=!0,vm.page={},vm.page.loading=!0,vm.page.menu={},vm.page.menu.currentSection=appState.getSectionState("currentSection"),vm.page.menu.currentNode=null,vm.page.saveButtonState="init",vm.showKeyboardShortcut=!1,vm.page.keyboardShortcutsOverview=[],templateHelper.getGeneralShortcuts().then(function(shortcuts){vm.page.keyboardShortcutsOverview.push(shortcuts)}),templateHelper.getEditorShortcuts().then(function(shortcuts){vm.page.keyboardShortcutsOverview.push(shortcuts)}),vm.script={},vm.save=function save(){vm.page.saveButtonState="busy",vm.script.content=vm.editor.getValue(),contentEditingHelper.contentEditorPerformSave({saveMethod:codefileResource.save,scope:$scope,content:vm.script,rebindCallback:function rebindCallback(orignal,saved){}}).then(function(saved){localizationService.localizeMany(["speechBubbles_fileSavedHeader","speechBubbles_fileSavedText"]).then(function(data){var header=data[0],message=data[1];notificationsService.success(header,message)}),vm.script.id!==saved.id?contentEditingHelper.redirectToRenamedContent(saved.id):(vm.page.saveButtonState="success",vm.script=saved,editorState.set(vm.script),navigationService.syncTree({tree:"scripts",path:vm.script.path,forceReload:!0}).then(function(syncArgs){vm.page.menu.currentNode=syncArgs.node}))},function(err){vm.page.saveButtonState="error",localizationService.localizeMany(["speechBubbles_validationFailedHeader","speechBubbles_validationFailedMessage"]).then(function(data){var header=data[0],message=data[1];notificationsService.error(header,message)})})},function init(){assetsService.loadCss("lib/ace-razor-mode/theme/razor_chrome.css",$scope),$routeParams.create?codefileResource.getScaffold("scripts",$routeParams.id).then(function(script){ready(script,!1)}):codefileResource.getByPath("scripts",$routeParams.id).then(function(script){ready(script,!0)})}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.StyleSheets.CreateController",function StyleSheetsCreateController($scope,$location,navigationService,formHelper,codefileResource){var vm=this,node=$scope.currentNode;vm.createFile=function createFile(){$location.path("/settings/stylesheets/edit/"+node.id).search("create","true"),navigationService.hideMenu()},vm.createRichtextStyle=function createRichtextStyle(){$location.path("/settings/stylesheets/edit/"+node.id).search("create","true").search("rtestyle","true"),navigationService.hideMenu()},vm.close=function close(){navigationService.hideDialog(!0)},vm.creatingFolder=!1,vm.showCreateFolder=function showCreateFolder(){vm.creatingFolder=!0},vm.createFolder=function createFolder(form){formHelper.submitForm({scope:$scope,formCtrl:form})&&codefileResource.createContainer("stylesheets",node.id,vm.folderName).then(function(saved){navigationService.hideMenu(),navigationService.syncTree({tree:"stylesheets",path:saved.path,forceReload:!0,activate:!0}),formHelper.resetForm({scope:$scope,formCtrl:form})},function(err){formHelper.resetForm({scope:$scope,formCtrl:form,hasErrors:!0}),vm.createFolderError=err})}})}(),angular.module("umbraco").controller("Umbraco.Editors.StyleSheets.DeleteController",StyleSheetsDeleteController),function(){angular.module("umbraco").controller("Umbraco.Editors.StyleSheets.EditController",function StyleSheetsEditController($scope,$routeParams,$timeout,$http,appState,editorState,navigationService,assetsService,codefileResource,contentEditingHelper,notificationsService,localizationService,templateHelper,angularHelper,umbRequestHelper){var vm=this;function save(activeApp){contentEditingHelper.contentEditorPerformSave({saveMethod:codefileResource.save,scope:$scope,content:vm.stylesheet,rebindCallback:function rebindCallback(orignal,saved){}}).then(function(saved){localizationService.localizeMany(["speechBubbles_fileSavedHeader","speechBubbles_fileSavedText"]).then(function(data){var header=data[0],message=data[1];notificationsService.success(header,message)}),vm.stylesheet.id!==saved.id?contentEditingHelper.redirectToRenamedContent(saved.id):(vm.page.saveButtonState="success",vm.stylesheet=saved,editorState.set(vm.stylesheet),navigationService.syncTree({tree:"stylesheets",path:vm.stylesheet.path,forceReload:!0}).then(function(syncArgs){vm.page.menu.currentNode=syncArgs.node}),"rules"===activeApp.alias&&$scope.selectApp(activeApp))},function(err){vm.page.saveButtonState="error",localizationService.localizeMany(["speechBubbles_validationFailedHeader","speechBubbles_validationFailedMessage"]).then(function(data){var header=data[0],message=data[1];notificationsService.error(header,message)})})}function generateNavigation(mode){localizationService.localizeMany(["stylesheet_tabRules","stylesheet_tabCode"]).then(function(data){vm.page.navigation=[{name:data[0],alias:"rules",icon:"icon-font",view:"views/stylesheets/views/rules/rules.html"},{name:data[1],alias:"code",icon:"icon-brackets",view:"views/stylesheets/views/code/code.html"}],"RTE"===mode?vm.page.navigation[0].active=!0:vm.page.navigation[1].active=!0})}function ready(stylesheet,syncTree){function changeAceEditor(){setFormState("dirty")}function setFormState(state){var currentForm=angularHelper.getCurrentForm($scope);"dirty"===state?currentForm.$setDirty():"pristine"===state&&currentForm.$setPristine()}vm.page.loading=!1,vm.stylesheet=stylesheet,vm.setDirty=function(){setFormState("dirty")},editorState.set(vm.stylesheet),syncTree&&navigationService.syncTree({tree:"stylesheets",path:vm.stylesheet.path,forceReload:!0}).then(function(syncArgs){vm.page.menu.currentNode=syncArgs.node}),vm.aceOption={mode:"css",theme:"chrome",showPrintMargin:!1,advanced:{fontSize:"14px",enableSnippets:!0,enableBasicAutocompletion:!0,enableLiveAutocompletion:!1},onLoad:function onLoad(_editor){vm.editor=_editor,_editor.commands.bindKey("ctrl-alt-space","startAutocomplete"),_editor.commands.bindKey("ctrl-space",null),_editor.commands.addCommands([{name:"unSelectOrFindPrevious",bindKey:"Alt-Shift-K",exec:function exec(){$scope.$apply(function(){vm.showKeyboardShortcut=!vm.showKeyboardShortcut})},readOnly:!0}]),$routeParams.create||$timeout(function(){vm.editor.navigateFileEnd(),vm.editor.focus()}),vm.editor.on("change",changeAceEditor)}}}function interpolateRules(){return codefileResource.interpolateStylesheetRules(vm.stylesheet.content,vm.stylesheet.rules)}function extractRules(){return codefileResource.extractStylesheetRules(vm.stylesheet.content)}vm.page={},vm.page.loading=!0,vm.page.menu={},vm.page.menu.currentSection=appState.getSectionState("currentSection"),vm.page.menu.currentNode=null,vm.page.saveButtonState="init",vm.header={},vm.header.editorfor="settings_stylesheet",vm.header.setPageTitle=!0,vm.showKeyboardShortcut=!1,vm.page.keyboardShortcutsOverview=[],templateHelper.getGeneralShortcuts().then(function(shortcuts){vm.page.keyboardShortcutsOverview.push(shortcuts)}),templateHelper.getEditorShortcuts().then(function(shortcuts){vm.page.keyboardShortcutsOverview.push(shortcuts)}),vm.stylesheet={content:"",rules:[]},vm.save=function interpolateAndSave(){vm.page.saveButtonState="busy";var activeApp=_.find(vm.page.navigation,function(item){return item.active});"rules"===activeApp.alias?interpolateRules().then(function(content){vm.stylesheet.content=content,save(activeApp)},function(err){}):(vm.stylesheet.content=vm.editor.getValue(),save(activeApp))},$scope.selectApp=function(app){vm.page.loading=!0,"code"===app.alias?interpolateRules().then(function(content){vm.stylesheet.content=content,vm.page.loading=!1},function(err){}):extractRules().then(function(rules){vm.stylesheet.rules=rules,vm.page.loading=!1},function(err){})},function init(){assetsService.loadCss("lib/ace-razor-mode/theme/razor_chrome.css",$scope),$routeParams.create?codefileResource.getScaffold("stylesheets",$routeParams.id).then(function(stylesheet){var mode=$routeParams.rtestyle?"RTE":null;ready(stylesheet,!1),generateNavigation(mode)}):codefileResource.getByPath("stylesheets",$routeParams.id).then(function(stylesheet){ready(stylesheet,!0),extractRules().then(function(rules){vm.stylesheet.rules=rules,generateNavigation(rules&&rules.length>0?"RTE":null)})})}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.RichTextRuleController",function RichTextRuleController($scope,formHelper){this.submit=function submit(){$scope.model&&$scope.model.submit&&formHelper.submitForm({scope:$scope})&&$scope.model.submit($scope.model)},this.close=function close(){$scope.model&&$scope.model.close&&$scope.model.close()}})}(),angular.module("umbraco").controller("Umbraco.Editors.StyleSheets.RulesController",function($scope,localizationService,editorService){function openOverlay(rule,title,onSubmit){var ruleDialog={title:title,rule:_.clone(rule),view:"views/stylesheets/infiniteeditors/richtextrule/richtextrule.html",size:"small",submit:function submit(model){onSubmit(model.rule),editorService.close()},close:function close(){editorService.close()}};editorService.open(ruleDialog)}function setDirty(){$scope.model.setDirty()}$scope.sortableOptions={axis:"y",containment:"parent",cursor:"move",items:"div.umb-stylesheet-rules__listitem",handle:".handle",tolerance:"pointer",update:function update(e,ui){setDirty()}},$scope.add=function(evt){evt.preventDefault(),openOverlay({},$scope.labels.addRule,function(newRule){$scope.model.stylesheet.rules||($scope.model.stylesheet.rules=[]),$scope.model.stylesheet.rules.push(newRule),setDirty()})},$scope.edit=function(rule,evt){evt.preventDefault(),openOverlay(rule,$scope.labels.editRule,function(newRule){rule.name=newRule.name,rule.selector=newRule.selector,rule.styles=newRule.styles,setDirty()})},$scope.remove=function(rule,evt){evt.preventDefault(),$scope.model.stylesheet.rules=_.without($scope.model.stylesheet.rules,rule),setDirty()},function init(){localizationService.localizeMany(["stylesheet_addRule","stylesheet_editRule"]).then(function(data){$scope.labels={addRule:data[0],editRule:data[1]}})}()}),angular.module("umbraco").controller("Umbraco.Editors.Templates.DeleteController",TemplatesDeleteController),function(){angular.module("umbraco").controller("Umbraco.Editors.Templates.EditController",function TemplatesEditController($scope,$routeParams,$timeout,templateResource,assetsService,notificationsService,editorState,navigationService,appState,macroService,treeService,contentEditingHelper,localizationService,angularHelper,templateHelper,editorService){var vm=this,oldMasterTemplateAlias=null,infiniteMode=$scope.model&&$scope.model.infiniteMode,id=infiniteMode?$scope.model.id:$routeParams.id,create=infiniteMode?$scope.model.create:$routeParams.create;function openMacroOverlay(){var macroPicker={dialogData:{},submit:function submit(model){insert(macroService.collectValueData(model.selectedMacro,model.macroParams,"Mvc").syntax),editorService.close()},close:function close(){editorService.close(),vm.editor.focus()}};editorService.macroPicker(macroPicker)}function openPageFieldOverlay(){var insertFieldEditor={submit:function submit(model){insert(model.umbracoField),editorService.close()},close:function close(){editorService.close(),vm.editor.focus()}};editorService.insertField(insertFieldEditor)}function openDictionaryItemOverlay(){localizationService.localizeMany(["template_insertDictionaryItem","emptyStates_emptyDictionaryTree"]).then(function(values){var dictionaryItem={section:"translation",treeAlias:"dictionary",entityType:"dictionary",multiPicker:!1,title:values[0],emptyStateMessage:values[1],select:function select(node){insert(templateHelper.getInsertDictionarySnippet(node.name)),editorService.close()},close:function close(model){editorService.close(),vm.editor.focus()}};editorService.treePicker(dictionaryItem)})}function openPartialOverlay(){localizationService.localize("template_insertPartialView").then(function(value){var partialItem={section:"settings",treeAlias:"partialViews",entityType:"partialView",multiPicker:!1,title:value,filter:function filter(i){if(-1===i.name.indexOf(".cshtml")&&-1===i.name.indexOf(".vbhtml"))return!0},filterCssClass:"not-allowed",select:function select(node){insert(templateHelper.getInsertPartialSnippet(node.parentId,node.name)),editorService.close()},close:function close(model){editorService.close(),vm.editor.focus()}};editorService.treePicker(partialItem)})}function openQueryBuilderOverlay(){var queryBuilder={submit:function submit(model){insert(templateHelper.getQuerySnippet(model.result.queryExpression)),editorService.close()},close:function close(){editorService.close(),vm.editor.focus()}};editorService.queryBuilder(queryBuilder)}function openSectionsOverlay(){var templateSections={isMaster:vm.template.isMasterTemplate,submit:function submit(model){"renderBody"===model.insertType&&insert(templateHelper.getRenderBodySnippet()),"renderSection"===model.insertType&&insert(templateHelper.getRenderSectionSnippet(model.renderSectionName,model.mandatoryRenderSection)),"addSection"===model.insertType&&function wrap(str){var selectedContent=vm.editor.session.getTextRange(vm.editor.getSelectionRange());str=str.replace("{0}",selectedContent),vm.editor.insert(str),vm.editor.focus(),setFormState("dirty")}(templateHelper.getAddSectionSnippet(model.sectionName)),editorService.close()},close:function close(model){editorService.close(),vm.editor.focus()}};editorService.templateSections(templateSections)}function openMasterTemplateOverlay(){var availableMasterTemplates=[];vm.templates.forEach(function(template){template.alias!==vm.template.alias&&template.alias!==vm.template.masterTemplateAlias&&-1===template.path.split(",").indexOf(String(vm.template.id))&&availableMasterTemplates.push(template)}),localizationService.localize("template_mastertemplate").then(function(value){var masterTemplate={title:value,availableItems:availableMasterTemplates,submit:function submit(model){var template=model.selectedItem;template&&template.alias?(vm.template.masterTemplateAlias=template.alias,setLayout(template.alias+".cshtml")):(vm.template.masterTemplateAlias=null,setLayout(null)),editorService.close()},close:function close(oldModel){editorService.close(),vm.editor.focus()}};editorService.itemPicker(masterTemplate)})}function setLayout(templatePath){var templateCode=vm.editor.getValue(),newValue=templatePath,layoutDefRegex=new RegExp('(@{[\\s\\S]*?Layout\\s*?=\\s*?)("[^"]*?"|null)(;[\\s\\S]*?})',"gi");void 0!==newValue&&""!==newValue?templateCode=layoutDefRegex.test(templateCode)?templateCode.replace(layoutDefRegex,'$1"'+newValue+'"$3'):'@{\n\tLayout = "'+newValue+'";\n}\n'+templateCode:layoutDefRegex.test(templateCode)&&(templateCode=templateCode.replace(layoutDefRegex,"$1null$3")),vm.editor.setValue(templateCode),vm.editor.clearSelection(),vm.editor.navigateFileStart(),vm.editor.focus(),setFormState("dirty")}function insert(str){vm.editor.focus(),vm.editor.moveCursorToPosition(vm.currentPosition),vm.editor.insert(str),setFormState("dirty")}function persistCurrentLocation(){vm.currentPosition=vm.editor.getCursorPosition()}function changeAceEditor(){setFormState("dirty")}function setFormState(state){var currentForm=angularHelper.getCurrentForm($scope);"dirty"===state?currentForm.$setDirty():"pristine"===state&&currentForm.$setPristine()}function submit(){$scope.model.submit&&($scope.model.template=vm.template,$scope.model.submit($scope.model))}vm.header={},vm.header.editorfor="template_template",vm.header.setPageTitle=!0,vm.page={},vm.page.loading=!0,vm.templates=[],vm.page.menu={},vm.page.menu.currentSection=appState.getSectionState("currentSection"),vm.page.menu.currentNode=null,vm.page.insertDefaultButton={labelKey:"general_insert",addEllipsis:"true",handler:function handler(){vm.openInsertOverlay()}},vm.page.insertSubButtons=[{labelKey:"template_insertPageField",addEllipsis:"true",handler:function handler(){vm.openPageFieldOverlay()}},{labelKey:"template_insertPartialView",addEllipsis:"true",handler:function handler(){vm.openPartialOverlay()}},{labelKey:"template_insertDictionaryItem",addEllipsis:"true",handler:function handler(){vm.openDictionaryItemOverlay()}},{labelKey:"template_insertMacro",addEllipsis:"true",handler:function handler(){vm.openMacroOverlay()}}],vm.showKeyboardShortcut=!1,vm.page.keyboardShortcutsOverview=[],templateHelper.getGeneralShortcuts().then(function(data){vm.page.keyboardShortcutsOverview.push(data)}),templateHelper.getEditorShortcuts().then(function(data){vm.page.keyboardShortcutsOverview.push(data)}),templateHelper.getTemplateEditorShortcuts().then(function(data){vm.page.keyboardShortcutsOverview.push(data)}),vm.save=function(suppressNotification){vm.page.saveButtonState="busy",vm.template.content=vm.editor.getValue(),contentEditingHelper.contentEditorPerformSave({saveMethod:templateResource.save,scope:$scope,content:vm.template,rebindCallback:function rebindCallback(orignal,saved){}}).then(function(saved){suppressNotification||localizationService.localizeMany(["speechBubbles_templateSavedHeader","speechBubbles_templateSavedText"]).then(function(data){var header=data[0],message=data[1];notificationsService.success(header,message)}),vm.page.saveButtonState="success",vm.template=saved,infiniteMode||editorState.set(vm.template),infiniteMode||oldMasterTemplateAlias===vm.template.masterTemplateAlias?infiniteMode||navigationService.syncTree({tree:"templates",path:vm.template.path,forceReload:!0}).then(function(syncArgs){vm.page.menu.currentNode=syncArgs.node}):("-1"!==vm.page.menu.currentNode.id&&treeService.removeNode(vm.page.menu.currentNode),oldMasterTemplateAlias=vm.template.masterTemplateAlias,navigationService.syncTree({tree:"templates",path:vm.template.path,forceReload:!0,activate:!0}).then(function(args){vm.page.menu.currentNode=args.node})),setFormState("pristine"),infiniteMode&&submit()},function(err){suppressNotification&&(vm.page.saveButtonState="error",localizationService.localizeMany(["speechBubbles_validationFailedHeader","speechBubbles_validationFailedMessage"]).then(function(data){var header=data[0],message=data[1];notificationsService.error(header,message)}))})},vm.init=function(){assetsService.loadCss("lib/ace-razor-mode/theme/razor_chrome.css",$scope),templateResource.getAll().then(function(templates){vm.templates=templates}),create?templateResource.getScaffold(id).then(function(template){vm.ready(template)}):templateResource.getById(id).then(function(template){vm.ready(template)})},vm.ready=function(template){vm.page.loading=!1,vm.template=template,create&&$timeout(function(){var nameField=$('[data-element="editor-name-field"]');nameField&&nameField.on("blur",function(event){event.target.value&&vm.save(!0)})}),infiniteMode||(editorState.set(vm.template),navigationService.syncTree({tree:"templates",path:vm.template.path,forceReload:!0}).then(function(syncArgs){vm.page.menu.currentNode=syncArgs.node})),oldMasterTemplateAlias=Utilities.copy(template.masterTemplateAlias),vm.aceOption={mode:"razor",theme:"chrome",showPrintMargin:!1,advanced:{fontSize:"14px",enableSnippets:!1,enableBasicAutocompletion:!0,enableLiveAutocompletion:!1},onLoad:function onLoad(_editor){vm.editor=_editor,_editor.commands.bindKey("ctrl-alt-space","startAutocomplete"),_editor.commands.bindKey("ctrl-space",null),_editor.commands.addCommands([{name:"unSelectOrFindPrevious",bindKey:"Alt-Shift-K",exec:function exec(){$scope.$apply(function(){vm.showKeyboardShortcut=!vm.showKeyboardShortcut})},readOnly:!0},{name:"insertUmbracoValue",bindKey:"Alt-Shift-V",exec:function exec(){$scope.$apply(function(){openPageFieldOverlay()})},readOnly:!0},{name:"insertPartialView",bindKey:"Alt-Shift-P",exec:function exec(){$scope.$apply(function(){openPartialOverlay()})},readOnly:!0},{name:"insertDictionary",bindKey:"Alt-Shift-D",exec:function exec(){$scope.$apply(function(){openDictionaryItemOverlay()})},readOnly:!0},{name:"insertUmbracoMacro",bindKey:"Alt-Shift-M",exec:function exec(){$scope.$apply(function(){openMacroOverlay()})},readOnly:!0},{name:"insertQuery",bindKey:"Alt-Shift-Q",exec:function exec(){$scope.$apply(function(){openQueryBuilderOverlay()})},readOnly:!0},{name:"insertSection",bindKey:"Alt-Shift-S",exec:function exec(){$scope.$apply(function(){openSectionsOverlay()})},readOnly:!0},{name:"chooseMasterTemplate",bindKey:"Alt-Shift-T",exec:function exec(){$scope.$apply(function(){openMasterTemplateOverlay()})},readOnly:!0}]),create||$timeout(function(){vm.editor.navigateFileEnd(),vm.editor.focus(),persistCurrentLocation()}),vm.editor.on("blur",persistCurrentLocation),vm.editor.on("focus",persistCurrentLocation),vm.editor.on("change",changeAceEditor)}}},vm.openPageFieldOverlay=openPageFieldOverlay,vm.openDictionaryItemOverlay=openDictionaryItemOverlay,vm.openQueryBuilderOverlay=openQueryBuilderOverlay,vm.openMacroOverlay=openMacroOverlay,vm.openInsertOverlay=function openInsertOverlay(){var insertOverlay={allowedTypes:{macro:!0,dictionary:!0,partial:!0,umbracoField:!0},submit:function submit(model){switch(model.insert.type){case"macro":var macroObject=macroService.collectValueData(model.insert.selectedMacro,model.insert.macroParams,"Mvc");insert(macroObject.syntax);break;case"dictionary":var code=templateHelper.getInsertDictionarySnippet(model.insert.node.name);insert(code);break;case"partial":var code=templateHelper.getInsertPartialSnippet(model.insert.node.parentId,model.insert.node.name);insert(code);break;case"umbracoField":insert(model.insert.umbracoField)}editorService.close()},close:function close(oldModel){editorService.close(),vm.editor.focus()}};editorService.insertCodeSnippet(insertOverlay)},vm.openSectionsOverlay=openSectionsOverlay,vm.openPartialOverlay=openPartialOverlay,vm.openMasterTemplateOverlay=openMasterTemplateOverlay,vm.selectMasterTemplate=function selectMasterTemplate(template){template&&template.alias?(vm.template.masterTemplateAlias=template.alias,setLayout(template.alias+".cshtml")):(vm.template.masterTemplateAlias=null,setLayout(null))},vm.getMasterTemplateName=function getMasterTemplateName(masterTemplateAlias,templates){if(masterTemplateAlias){var templateName="";return templates.forEach(function(template){template.alias===masterTemplateAlias&&(templateName=template.name)}),templateName}},vm.removeMasterTemplate=function removeMasterTemplate(){vm.template.masterTemplateAlias=null,setLayout()},vm.closeShortcuts=function closeShortcuts(){vm.showKeyboardShortcut=!1},vm.submit=submit,vm.close=function close(){$scope.model.close&&$scope.model.close()},vm.init()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.Users.GroupController",function UserGroupEditController($scope,$location,$routeParams,userGroupsResource,localizationService,contentEditingHelper,editorService,overlayService){var infiniteMode=$scope.model&&$scope.model.infiniteMode,id=infiniteMode?$scope.model.id:$routeParams.id,create=infiniteMode?$scope.model.create:$routeParams.create,vm=this,contentPickerOpen=!1;function formatGranularPermissionSelection(){vm.userGroup.assignedPermissions.forEach(function(node){formatGranularPermissionSelectionForNode(node)})}function formatGranularPermissionSelectionForNode(node){node.allowedPermissions=[],Object.values(node.permissions).forEach(function(permissions){permissions.forEach(function(p){p.checked&&node.allowedPermissions.push(p)})})}function setPermissionsForNode(node){node.permissions||(node.permissions=Utilities.copy(vm.userGroup.defaultPermissions)),vm.nodePermissions={node:node,submit:function submit(model){model&&model.node&&model.node.permissions&&(formatGranularPermissionSelectionForNode(node),vm.userGroup.assignedPermissions||(vm.userGroup.assignedPermissions=[]),_.find(vm.userGroup.assignedPermissions,function(i){return i.id===node.id})||vm.userGroup.assignedPermissions.push(node)),editorService.close(),contentPickerOpen&&(editorService.close(),contentPickerOpen=!1)},close:function close(){editorService.close()}},editorService.nodePermissions(vm.nodePermissions)}function makeBreadcrumbs(){vm.breadcrumbs=[{name:vm.labels.groups,path:"/users/users/groups"},{name:vm.userGroup.name}]}function setSectionIcon(sections){sections.forEach(function(section){section.icon="icon-section"})}vm.page={},vm.page.rootIcon="icon-folder",vm.page.submitButtonLabelKey=infiniteMode?"buttons_saveAndClose":"buttons_save",vm.userGroup={},vm.labels={},vm.showBackButton=!infiniteMode,vm.goToPage=function goToPage(ancestor){$location.path(ancestor.path)},vm.openSectionPicker=function openSectionPicker(){var currentSelection=[];Utilities.copy(vm.userGroup.sections,currentSelection);var sectionPicker={selection:currentSelection,submit:function submit(model){vm.userGroup.sections=model.selection,editorService.close()},close:function close(){editorService.close()}};editorService.sectionPicker(sectionPicker)},vm.openContentPicker=function openContentPicker(){var contentPicker={title:vm.labels.selectContentStartNode,section:"content",treeAlias:"content",hideSubmitButton:!0,hideHeader:!1,submit:function submit(model){model.selection&&(vm.userGroup.contentStartNode=model.selection[0],"-1"===vm.userGroup.contentStartNode.id&&(vm.userGroup.contentStartNode.name=vm.labels.contentRoot,vm.userGroup.contentStartNode.icon="icon-folder")),editorService.close()},close:function close(){editorService.close()}};editorService.treePicker(contentPicker)},vm.openMediaPicker=function openMediaPicker(){var mediaPicker={title:vm.labels.selectMediaStartNode,section:"media",treeAlias:"media",entityType:"media",hideSubmitButton:!0,hideHeader:!1,submit:function submit(model){model.selection&&(vm.userGroup.mediaStartNode=model.selection[0],"-1"===vm.userGroup.mediaStartNode.id&&(vm.userGroup.mediaStartNode.name=vm.labels.mediaRoot,vm.userGroup.mediaStartNode.icon="icon-folder")),editorService.close()},close:function close(){editorService.close()}};editorService.treePicker(mediaPicker)},vm.openUserPicker=function openUserPicker(){var currentSelection=[];Utilities.copy(vm.userGroup.users,currentSelection);var userPicker={selection:currentSelection,submit:function submit(model){vm.userGroup.users=model.selection,editorService.close()},close:function close(){editorService.close()}};editorService.userPicker(userPicker)},vm.removeSection=function removeSection(index){vm.userGroup.sections.splice(index,1)},vm.removeAssignedPermissions=function removeAssignedPermissions(index){vm.userGroup.assignedPermissions.splice(index,1)},vm.removeUser=function removeUser(index){var dialog={view:"views/users/views/overlays/remove.html",username:vm.userGroup.users[index].username,userGroupName:vm.userGroup.name.toLowerCase(),submitButtonLabelKey:"defaultdialogs_yesRemove",submitButtonStyle:"danger",submit:function submit(){vm.userGroup.users.splice(index,1),overlayService.close()},close:function close(){overlayService.close()}};overlayService.open(dialog)},vm.clearStartNode=function clearStartNode(type){"content"===type?vm.userGroup.contentStartNode=null:"media"===type&&(vm.userGroup.mediaStartNode=null)},vm.save=function save(){vm.page.saveButtonState="busy",contentEditingHelper.contentEditorPerformSave({saveMethod:userGroupsResource.saveUserGroup,scope:$scope,content:vm.userGroup,rebindCallback:function rebindCallback(orignal,saved){}}).then(function(saved){vm.userGroup=saved,infiniteMode?$scope.model.submit(vm.userGroup):(formatGranularPermissionSelection(),setSectionIcon(vm.userGroup.sections),makeBreadcrumbs(),vm.page.saveButtonState="success")},function(err){vm.page.saveButtonState="error"})},vm.openGranularPermissionsPicker=function openGranularPermissionsPicker(){var contentPicker={title:vm.labels.selectNode,section:"content",treeAlias:"content",hideSubmitButton:!0,submit:function submit(model){if(model.selection){var node=model.selection[0],found=_.find(vm.userGroup.assignedPermissions,function(i){return i.id===node.id});setPermissionsForNode(node=found||node)}},close:function close(){editorService.close()}};editorService.treePicker(contentPicker),contentPickerOpen=!0},vm.setPermissionsForNode=setPermissionsForNode,function init(){vm.loading=!0,localizationService.localizeMany(["general_cancel","defaultdialogs_selectContentStartNode","defaultdialogs_selectMediaStartNode","defaultdialogs_selectNode","general_groups","content_contentRoot","media_mediaRoot"]).then(function(values){vm.labels.cancel=values[0],vm.labels.selectContentStartNode=values[1],vm.labels.selectMediaStartNode=values[2],vm.labels.selectNode=values[3],vm.labels.groups=values[4],vm.labels.contentRoot=values[5],vm.labels.mediaRoot=values[6]}),localizationService.localize("general_add").then(function(name){vm.labels.add=name}),localizationService.localize("user_noStartNode").then(function(name){vm.labels.noStartNode=name}),create?userGroupsResource.getUserGroupScaffold().then(function(userGroup){vm.userGroup=userGroup,setSectionIcon(vm.userGroup.sections),makeBreadcrumbs(),vm.loading=!1}):userGroupsResource.getUserGroup(id).then(function(userGroup){vm.userGroup=userGroup,formatGranularPermissionSelection(),setSectionIcon(vm.userGroup.sections),makeBreadcrumbs(),vm.loading=!1})}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.Users.OverviewController",function UsersOverviewController($scope,$location,$routeParams,localizationService){var vm=this,usersUri=$routeParams.method;vm.page={},vm.page.labels={},vm.page.name="",vm.page.navigation=[],function onInit(){!function loadNavigation(){localizationService.localizeMany(["sections_users","general_groups","user_userManagement"]).then(function(data){vm.page.labels.users=data[0],vm.page.labels.groups=data[1],vm.page.name=data[2],vm.page.navigation=[{name:vm.page.labels.users,icon:"icon-user",action:function action(){$location.path("/users/users/users").search("create",null)},view:usersUri&&"users"!==usersUri?null:"views/users/views/users/users.html",active:!usersUri||"users"===usersUri,alias:"users"},{name:vm.page.labels.groups,icon:"icon-users",action:function action(){$location.path("/users/users/groups").search("create",null)},view:"groups"===usersUri?"views/users/views/groups/groups.html":null,active:"groups"===usersUri,alias:"userGroups"}]})}()}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.Users.UserController",function UserEditController($scope,eventsService,$q,$location,$routeParams,formHelper,usersResource,userService,contentEditingHelper,localizationService,mediaHelper,Upload,umbRequestHelper,usersHelper,authResource,dateHelper,editorService,overlayService,externalLoginInfoService){var currentLoggedInUser=null,vm=this;function getLocalDate(date,culture,format){if(date){var serverOffset=Umbraco.Sys.ServerVariables.application.serverTimeOffset;return(-serverOffset!==(new Date).getTimezoneOffset()?dateHelper.convertToLocalMomentTime(date,serverOffset):moment(date,"YYYY-MM-DD HH:mm:ss")).locale(culture).format(format)}}function changePassword(){vm.changePasswordModel.value&&(vm.changePasswordModel.value.reset=!vm.changePasswordModel.value.oldPassword&&!vm.user.isCurrentUser||vm.changePasswordModel.config.allowManuallyChangingPassword),vm.changePasswordModel.value.id=vm.user.id,usersResource.changePassword(vm.changePasswordModel.value).then(function(){vm.changePasswordModel.isChanging=!1,vm.changePasswordModel.value={},vm.changePasswordModel.config.hasPassword="Invited"!==vm.user.userState&&"Inactive"!==vm.user.userState},function(err){contentEditingHelper.handleSaveError({err:err,showNotifications:!0})})}function goToPage(ancestor){$location.path(ancestor.path)}function multiSelectItem(item,selection){var found=!1;selection.length>0&&selection.forEach(function(selectedItem){selectedItem.udi===item.udi&&(found=!0)}),found||selection.push(item)}function setUserDisplayState(){vm.user.userDisplayState=usersHelper.getUserStateByKey(vm.user.userState)}function formatDatesToLocal(user){userService.getCurrentUser().then(function(currentUser){currentLoggedInUser=currentUser,user.formattedLastLogin=getLocalDate(user.lastLoginDate,currentUser.locale,"LLL"),user.formattedLastLockoutDate=getLocalDate(user.lastLockoutDate,currentUser.locale,"LLL"),user.formattedCreateDate=getLocalDate(user.createDate,currentUser.locale,"LLL"),user.formattedUpdateDate=getLocalDate(user.updateDate,currentUser.locale,"LLL"),user.formattedLastPasswordChangeDate=getLocalDate(user.lastPasswordChangeDate,currentUser.locale,"LLL")})}vm.page={},vm.page.rootIcon="icon-folder",vm.user={changePassword:null},vm.breadcrumbs=[],vm.showBackButton=!0,vm.avatarFile={},vm.labels={},vm.maxFileSize=Umbraco.Sys.ServerVariables.umbracoSettings.maxFileSize+"KB",vm.acceptedFileTypes=mediaHelper.formatFileTypes(Umbraco.Sys.ServerVariables.umbracoSettings.imageFileTypes),vm.usernameIsEmail=Umbraco.Sys.ServerVariables.umbracoSettings.usernameIsEmail,vm.changePasswordModel={config:{},isChanging:!1,value:{}},vm.goToPage=goToPage,vm.openUserGroupPicker=function openUserGroupPicker(){var currentSelection=[];Utilities.copy(vm.user.userGroups,currentSelection);var userGroupPicker={selection:currentSelection,submit:function submit(model){model.selection&&(vm.user.userGroups=model.selection),editorService.close()},close:function close(){editorService.close()}};editorService.userGroupPicker(userGroupPicker)},vm.openContentPicker=function openContentPicker(){var contentPicker={title:vm.labels.selectContentStartNode,section:"content",treeAlias:"content",multiPicker:!0,selection:vm.user.startContentIds,hideHeader:!1,submit:function submit(model){model.selection&&model.selection.forEach(function(item){"-1"===item.id&&(item.name=vm.labels.contentRoot,item.icon="icon-folder"),multiSelectItem(item,vm.user.startContentIds)}),editorService.close()},close:function close(){editorService.close()}};editorService.treePicker(contentPicker)},vm.openMediaPicker=function openMediaPicker(){var mediaPicker={title:vm.labels.selectMediaStartNode,section:"media",treeAlias:"media",entityType:"media",multiPicker:!0,hideHeader:!1,show:!0,submit:function submit(model){model.selection&&model.selection.forEach(function(item){"-1"===item.id&&(item.name=vm.labels.mediaRoot,item.icon="icon-folder"),multiSelectItem(item,vm.user.startMediaIds)}),editorService.close()},close:function close(){editorService.close()}};editorService.treePicker(mediaPicker)},vm.editSelectedItem=function editSelectedItem(index,selection){var editor={id:selection[index].id,submit:function submit(model){selection[index]=model,editorService.close()},close:function close(){editorService.close()}};editorService.userGroupEditor(editor)},vm.removeSelectedItem=function removeSelectedItem(index,selection){selection.splice(index,1)},vm.disableUser=function disableUser(){vm.disableUserButtonState="busy",usersResource.disableUsers([vm.user.id]).then(function(data){vm.user.userState="Disabled",setUserDisplayState(),vm.disableUserButtonState="success"},function(error){vm.disableUserButtonState="error"})},vm.enableUser=function enableUser(){vm.enableUserButtonState="busy",usersResource.enableUsers([vm.user.id]).then(function(data){vm.user.userState="Active",setUserDisplayState(),vm.enableUserButtonState="success"},function(error){vm.enableUserButtonState="error"})},vm.unlockUser=function unlockUser(){vm.unlockUserButtonState="busy",usersResource.unlockUsers([vm.user.id]).then(function(data){vm.user.userState="Active",vm.user.failedPasswordAttempts=0,setUserDisplayState(),vm.unlockUserButtonState="success"},function(error){vm.unlockUserButtonState="error"})},vm.resendInvite=function resendInvite(){vm.resendInviteButtonState="busy",vm.resendInviteMessage?vm.user.message=vm.resendInviteMessage:vm.user.message=vm.labels.defaultInvitationMessage,usersResource.inviteUser(vm.user).then(function(data){vm.resendInviteButtonState="success",vm.resendInviteMessage="",formHelper.showNotifications(data)},function(error){vm.resendInviteButtonState="error",formHelper.showNotifications(error.data)})},vm.deleteNonLoggedInUser=function deleteNonLoggedInUser(){vm.deleteNotLoggedInUserButtonState="busy";var confirmationMessage=vm.labels.deleteUserConfirmation;localizationService.localizeMany(["general_delete","general_cancel","contentTypeEditor_yesDelete"]).then(function(data){var overlay={view:"confirm",title:data[0],content:confirmationMessage,closeButtonLabel:data[1],submitButtonLabel:data[2],submitButtonStyle:"danger",close:function close(){vm.deleteNotLoggedInUserButtonState="danger",overlayService.close()},submit:function submit(){!function performDelete(){usersResource.deleteNonLoggedInUser(vm.user.id).then(function(data){goToPage(vm.breadcrumbs[0])},function(error){vm.deleteNotLoggedInUserButtonState="error",formHelper.showNotifications(error.data)})}(),overlayService.close()}};overlayService.open(overlay)})},vm.changeAvatar=function changeAvatar(files,event){files&&files.length>0&&function upload(file){vm.avatarFile.uploadProgress=0,Upload.upload({url:umbRequestHelper.getApiUrl("userApiBaseUrl","PostSetAvatar",{id:vm.user.id}),fields:{},file:file}).progress(function(evt){if("done"!==vm.avatarFile.uploadStatus&&"error"!==vm.avatarFile.uploadStatus){vm.avatarFile.uploadStatus="uploading";var progressPercentage=parseInt(100*evt.loaded/evt.total,10);vm.avatarFile.uploadProgress=progressPercentage}}).success(function(data,status,headers,config){vm.avatarFile.uploadStatus="done",vm.avatarFile.uploadProgress=100,vm.user.avatars=data}).error(function(evt,status,headers,config){vm.avatarFile.uploadStatus="error",404===status?vm.avatarFile.serverErrorMessage="File not found":400==status?vm.avatarFile.serverErrorMessage=evt.message:evt.InnerException?(vm.avatarFile.serverErrorMessage=evt.InnerException.ExceptionMessage,evt.InnerException.StackTrace&&evt.InnerException.StackTrace.indexOf("ValidateRequestEntityLength")>0&&(vm.avatarFile.serverErrorMessage="File too large to upload")):evt.Message&&(vm.avatarFile.serverErrorMessage=evt.Message)})}(files[0])},vm.clearAvatar=function clearAvatar(){usersResource.clearAvatar(vm.user.id).then(function(data){vm.user.avatars=data})},vm.save=function save(){if(formHelper.submitForm({scope:$scope})){vm.page.saveButtonState="busy";var currentNav=vm.user.navigation;usersResource.saveUser(vm.user).then(function(saved){(function extendedSave(savedUser){var promises=[],args={user:savedUser,addPromise:function addPromise(p){promises.push(p)}};return eventsService.emit("editors.user.editController.save",args),$q.all(promises)})(saved).then(function(result){formHelper.resetForm({scope:$scope})},function(){formHelper.resetForm({scope:$scope,hasErrors:!0})}),vm.user=_.omit(saved,"navigation"),vm.user.navigation=currentNav,setUserDisplayState(),formatDatesToLocal(vm.user),vm.page.saveButtonState="success"},function(err){formHelper.resetForm({scope:$scope,hasErrors:!0}),contentEditingHelper.handleSaveError({err:err,showNotifications:!0}),vm.page.saveButtonState="error"})}},vm.allowGroupEdit=function allowGroupEdit(group){return!!currentLoggedInUser&&(-1!==currentLoggedInUser.userGroups.indexOf(group.alias)||-1!==currentLoggedInUser.userGroups.indexOf("admin"))},vm.changePassword=changePassword,vm.toggleChangePassword=function toggleChangePassword(){vm.user.changePassword=null,localizationService.localizeMany(["general_cancel","general_confirm","general_changePassword"]).then(function(data){var overlay={view:"changepassword",title:data[2],changePassword:vm.user.changePassword,config:vm.changePasswordModel.config,closeButtonLabel:data[0],submitButtonLabel:data[1],submitButtonStyle:"success",close:function close(){return overlayService.close()},submit:function submit(model){overlayService.close(),vm.changePasswordModel.value=model.changePassword,changePassword()}};overlayService.open(overlay)})},vm.denyLocalLogin=externalLoginInfoService.hasDenyLocalLogin(),function init(){vm.loading=!0,localizationService.localizeMany(["general_saving","general_cancel","defaultdialogs_selectContentStartNode","defaultdialogs_selectMediaStartNode","sections_users","content_contentRoot","media_mediaRoot","user_noStartNodes","user_defaultInvitationMessage","user_deleteUserConfirmation"]).then(function(values){vm.labels.saving=values[0],vm.labels.cancel=values[1],vm.labels.selectContentStartNode=values[2],vm.labels.selectMediaStartNode=values[3],vm.labels.users=values[4],vm.labels.contentRoot=values[5],vm.labels.mediaRoot=values[6],vm.labels.noStartNodes=values[7],vm.labels.defaultInvitationMessage=values[8],vm.labels.deleteUserConfirmation=values[9]}),usersResource.getUser($routeParams.id).then(function(user){vm.user=user,function makeBreadcrumbs(){vm.breadcrumbs=[{name:vm.labels.users,path:"/users/users/users"},{name:vm.user.name}]}(vm.user),setUserDisplayState(),formatDatesToLocal(vm.user),vm.usernameIsEmail=Umbraco.Sys.ServerVariables.umbracoSettings.usernameIsEmail&&user.email===user.username,authResource.getPasswordConfig(user.id).then(function(data){vm.changePasswordModel.config=data,vm.changePasswordModel.config.hasPassword="Invited"!==vm.user.userState&&"Inactive"!==vm.user.userState,vm.changePasswordModel.config.disableToggle=!0,$scope.$emit("$setAccessibleHeader",!1,"general_user",!1,vm.user.name,"",!0),vm.loading=!1})})}()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.Users.GroupsController",function UserGroupsController($scope,$timeout,$location,$filter,userService,userGroupsResource,formHelper,localizationService,listViewHelper,overlayService){var vm=this;vm.userGroups=[],vm.selection=[],vm.clickUserGroupName=function clickUserGroupName(item,$event){$event.metaKey||$event.ctrlKey||(function goToUserGroup(userGroup,$event){-1===currentUser.userGroups.indexOf(userGroup.alias)&&-1===currentUser.userGroups.indexOf("admin")||$location.path(function getEditPath(userGroup){return-1===currentUser.userGroups.indexOf(userGroup.alias)&&-1===currentUser.userGroups.indexOf("admin")?"":"users/users/group/"+userGroup.id}(userGroup)).search("create",null)}(item),$event.preventDefault()),$event.stopPropagation()},vm.createUserGroup=function createUserGroup(){$location.search({}),$location.path("users/users/group/-1").search("create","true")},vm.clearSelection=clearSelection,vm.selectUserGroup=function selectUserGroup(userGroup,$index,$event){-1===currentUser.userGroups.indexOf(userGroup.alias)&&-1===currentUser.userGroups.indexOf("admin")||userGroup.isSystemUserGroup||(listViewHelper.selectHandler(userGroup,$index,vm.userGroups,vm.selection,$event),event&&event.stopPropagation())},vm.deleteUserGroups=function deleteUserGroups(){vm.selection.length>0&&localizationService.localizeMany(["general_delete","defaultdialogs_confirmdelete","general_cancel","contentTypeEditor_yesDelete"]).then(function(data){var overlay={title:data[0],content:data[1]+"?",closeButtonLabel:data[2],submitButtonLabel:data[3],submitButtonStyle:"danger",close:function close(){overlayService.close()},submit:function submit(){userGroupsResource.deleteUserGroups(_.pluck(vm.selection,"id")).then(function(data){clearSelection(),onInit()},Utilities.noop),overlayService.close()}};overlayService.open(overlay)})},vm.filter=null;var currentUser=null;function onInit(){vm.loading=!0,userService.getCurrentUser().then(function(user){currentUser=user,userGroupsResource.getUserGroups({onlyCurrentUserGroups:!1}).then(function(userGroups){vm.userGroups=_.map(userGroups,function(ug){return ug.hasAccess=-1!==user.userGroups.indexOf(ug.alias)||-1!==user.userGroups.indexOf("admin"),ug}),vm.filteredUserGroups=vm.userGroups,vm.loading=!1})})}function clearSelection(){vm.userGroups.forEach(function(userGroup){userGroup.selected=!1}),vm.selection=[]}var unbindFilterWatcher=$scope.$watch("vm.filter",function(newVal,oldVal){vm.filteredUserGroups=$filter("filter")(vm.userGroups,vm.filter)});$scope.$on("$destroy",function(){unbindFilterWatcher()}),onInit()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.Users.DetailsController",function DetailsController($scope,externalLoginInfoService){this.denyLocalLogin=externalLoginInfoService.hasDenyLocalLogin()})}(),function(){angular.module("umbraco").controller("Umbraco.Editors.Users.UsersController",function UsersController($scope,$timeout,$location,$routeParams,usersResource,userGroupsResource,userService,localizationService,usersHelper,formHelper,dateHelper,editorService,listViewHelper,externalLoginInfoService){var vm=this;function getCreateUserButton(){return vm.denyLocalLogin?null:{type:"button",labelKey:"user_createUser",handler:function handler(){vm.setUsersViewState("createUser")}}}if(vm.page={},vm.users=[],vm.userGroups=[],vm.userStates=[],vm.selection=[],vm.newUser={},vm.usersOptions={},vm.userSortData=[{label:"Name (A-Z)",key:"Name",direction:"Ascending"},{label:"Name (Z-A)",key:"Name",direction:"Descending"},{label:"Newest",key:"CreateDate",direction:"Descending"},{label:"Oldest",key:"CreateDate",direction:"Ascending"},{label:"Last login",key:"LastLoginDate",direction:"Descending"}],localizationService.localizeMany(_.map(vm.userSortData,function(userSort){return"user_sort"+userSort.key+userSort.direction})).then(function(data){var reg=/^\[[\S\s]*]$/g;_.each(data,function(value,index){reg.test(value)||(vm.userSortData[index].label=value)})}),vm.labels={},localizationService.localizeMany(["user_stateAll"]).then(function(data){vm.labels.all=data[0]}),vm.userStatesFilter=[],vm.newUser.userGroups=[],vm.usersViewState="overview",vm.selectedBulkUserGroups=[],vm.usernameIsEmail=Umbraco.Sys.ServerVariables.umbracoSettings.usernameIsEmail,vm.allowDisableUser=!0,vm.allowEnableUser=!0,vm.allowUnlockUser=!0,vm.allowSetUserGroup=!0,vm.layouts=[{icon:"icon-thumbnails-small",path:"1",selected:!0},{icon:"icon-list",path:"2",selected:!0}],vm.activeLayout=listViewHelper.getLayout("users",vm.layouts),vm.denyLocalLogin=externalLoginInfoService.hasDenyLocalLogin(),Umbraco.Sys.ServerVariables.umbracoSettings.showUserInvite){vm.defaultButton={type:"button",labelKey:"user_inviteUser",handler:function handler(){vm.setUsersViewState("inviteUser")}};var createUserBtn=getCreateUserButton();createUserBtn&&(vm.subButtons=[createUserBtn])}else vm.defaultButton=getCreateUserButton();function initViewOptionFromQueryString(key,isCollection){var value=$location.search()[key];value&&(isCollection&&(value=value.split(",")),vm.usersOptions[key]=value)}function initUsersOptionsFilterSelections(filterCollection,selectedCollection,keyField){if(selectedCollection&&selectedCollection.length>0&&filterCollection&&filterCollection.length>0)for(var i=0;i<selectedCollection.length;i++)for(var j=0;j<filterCollection.length;j++)filterCollection[j][keyField]===selectedCollection[i]&&(filterCollection[j].selected=!0)}function setUsersViewState(state){"createUser"===state?(clearAddUserForm(),$location.search("create","true"),$location.search("invite",null)):"inviteUser"===state?(clearAddUserForm(),$location.search("create",null),$location.search("invite","true")):"overview"===state&&($location.search("create",null),$location.search("invite",null)),vm.usersViewState=state}function isSelectable(user){return!user.isCurrentUser}function clearSelection(){vm.users.forEach(function(user){user.selected=!1}),vm.selection=[]}function getUserFromArrayById(userId,users){return _.find(users,function(u){return u.id===userId})}function areAllSelected(){if(vm.users.some(function(user){return!0===user.isCurrentUser})){if(vm.selection.length===vm.users.length-1)return!0}else if(vm.selection.length===vm.users.length)return!0}vm.toggleFilter=function toggleFilter(type){switch(type){case"state":vm.page.showStatusFilter=!vm.page.showStatusFilter,vm.page.showGroupFilter=!1,vm.page.showOrderByFilter=!1;break;case"group":vm.page.showGroupFilter=!vm.page.showGroupFilter,vm.page.showStatusFilter=!1,vm.page.showOrderByFilter=!1;break;case"orderBy":vm.page.showOrderByFilter=!vm.page.showOrderByFilter,vm.page.showStatusFilter=!1,vm.page.showGroupFilter=!1}},vm.setUsersViewState=setUsersViewState,vm.selectLayout=function selectLayout(selectedLayout){vm.activeLayout=listViewHelper.setLayout("users",selectedLayout,vm.layouts)},vm.isSelectable=isSelectable,vm.selectUser=function selectUser(user){if(isSelectable(user)){if(user.selected){var index=vm.selection.indexOf(user.id);vm.selection.splice(index,1),user.selected=!1}else user.selected=!0,vm.selection.push(user.id);!function setBulkActions(users){var firstSelectedUserGroups;vm.allowDisableUser=!0,vm.allowEnableUser=!0,vm.allowUnlockUser=!0,vm.allowSetUserGroup=!0,users.forEach(function(user){if(user.selected){if(user.isCurrentUser)return vm.allowDisableUser=!1,vm.allowEnableUser=!1,vm.allowUnlockUser=!1,vm.allowSetUserGroup=!1,!1;if(user.userDisplayState&&"Disabled"===user.userDisplayState.key&&(vm.allowDisableUser=!1),user.userDisplayState&&"Active"===user.userDisplayState.key&&(vm.allowEnableUser=!1),user.userDisplayState&&"Invited"===user.userDisplayState.key&&(vm.allowEnableUser=!1),user.userDisplayState&&"LockedOut"===user.userDisplayState.key&&(vm.allowEnableUser=!1),user.userDisplayState&&"LockedOut"!==user.userDisplayState.key&&(vm.allowUnlockUser=!1),!0===vm.allowSetUserGroup)if(firstSelectedUserGroups){var userGroups=user.userGroups.map(function(ug){return ug.alias});_.difference(firstSelectedUserGroups,userGroups).length>0&&(vm.allowSetUserGroup=!1)}else firstSelectedUserGroups=user.userGroups.map(function(ug){return ug.alias})}})}(vm.users)}},vm.clearSelection=clearSelection,vm.clickUser=function clickUser(user,$event){$event.stopPropagation(),$event&&($event.ctrlKey||$event.shiftKey||$event.metaKey||$event.button&&1===$event.button)||(goToUser(user),$event.preventDefault())},vm.getEditPath=function getEditPath(user){return pathToUser(user)+function usersOptionsAsQueryString(){var qs="?orderBy="+vm.usersOptions.orderBy+"&orderDirection="+vm.usersOptions.orderDirection+"&pageNumber="+vm.usersOptions.pageNumber+"&filter="+vm.usersOptions.filter;return qs+=addUsersOptionsFilterCollectionToQueryString("userStates",vm.usersOptions.userStates),qs+=addUsersOptionsFilterCollectionToQueryString("userGroups",vm.usersOptions.userGroups),qs+="&mculture="+$location.search().mculture}()},vm.disableUsers=function disableUsers(){vm.disableUserButtonState="busy",usersResource.disableUsers(vm.selection).then(function(data){vm.selection.forEach(function(userId){var user=getUserFromArrayById(userId,vm.users);user&&(user.userState="Disabled")}),setUserDisplayState(vm.users),vm.disableUserButtonState="init",clearSelection()},function(error){vm.disableUserButtonState="error"})},vm.enableUsers=function enableUsers(){vm.enableUserButtonState="busy",usersResource.enableUsers(vm.selection).then(function(data){vm.selection.forEach(function(userId){var user=getUserFromArrayById(userId,vm.users);user&&(user.userState="Active")}),setUserDisplayState(vm.users),vm.enableUserButtonState="init",clearSelection()},function(error){vm.enableUserButtonState="error"})},vm.unlockUsers=function unlockUsers(){vm.unlockUserButtonState="busy",usersResource.unlockUsers(vm.selection).then(function(data){vm.selection.forEach(function(userId){var user=getUserFromArrayById(userId,vm.users);user&&(user.userState="Active")}),setUserDisplayState(vm.users),vm.unlockUserButtonState="init",clearSelection()},function(error){vm.unlockUserButtonState="error"})},vm.openBulkUserGroupPicker=function openBulkUserGroupPicker(){var firstSelectedUser=getUserFromArrayById(vm.selection[0],vm.users);vm.selectedBulkUserGroups=_.clone(firstSelectedUser.userGroups);var userGroupPicker={selection:vm.selectedBulkUserGroups,submit:function submit(model){usersResource.setUserGroupsOnUsers(model.selection,vm.selection).then(function(data){vm.selectedBulkUserGroups.sort(function(a,b){return a.alias>b.alias?1:a.alias<b.alias?-1:0}),_.each(vm.selection,function(userId){var user=getUserFromArrayById(userId,vm.users);user.userGroups=vm.selectedBulkUserGroups}),vm.selectedBulkUserGroups=[],editorService.close(),clearSelection()},Utilities.noop)},close:function close(){vm.selectedBulkUserGroups=[],editorService.close()}};editorService.userGroupPicker(userGroupPicker)},vm.openUserGroupPicker=function openUserGroupPicker(){var currentSelection=[];Utilities.copy(vm.newUser.userGroups,currentSelection);var userGroupPicker={selection:currentSelection,submit:function submit(model){model.selection&&(vm.newUser.userGroups=model.selection),editorService.close()},close:function close(){editorService.close()}};editorService.userGroupPicker(userGroupPicker)},vm.removeSelectedUserGroup=function removeSelectedUserGroup(index,selection){selection.splice(index,1)},vm.selectAll=function selectAll(){areAllSelected()?(vm.selection=[],vm.users.forEach(function(user){user.selected=!1})):(vm.selection=[],vm.users.forEach(function(user){user.isCurrentUser||(user.selected=!0,vm.selection.push(user.id))}))},vm.areAllSelected=areAllSelected,vm.searchUsers=function searchUsers(){search()},vm.onBlurSearch=function onBlurSearch(){updateLocation("filter",vm.usersOptions.filter)},vm.getFilterName=function getFilterName(array){var name=vm.labels.all,found=!1;return array.forEach(function(item){item.selected&&(found?name=name+", "+item.name:(name=item.name,found=!0))}),name},vm.setUserStatesFilter=function setUserStatesFilter(userState){if(vm.usersOptions.userStates||(vm.usersOptions.userStates=[]),"All"===userState.key)vm.userStatesFilter.forEach(function(i){i.selected=!1}),userState.selected=!0,vm.usersOptions.userStates=[];else{vm.userStatesFilter.forEach(function(i){"All"===i.key&&(i.selected=!1)});var indexOfAll=vm.usersOptions.userStates.indexOf("All");indexOfAll>=0&&vm.usersOptions.userStates.splice(indexOfAll,1)}if(userState.selected)vm.usersOptions.userStates.push(userState.key);else{var index=vm.usersOptions.userStates.indexOf(userState.key);vm.usersOptions.userStates.splice(index,1)}updateLocation("userStates",vm.usersOptions.userStates.join(",")),changePageNumber(1)},vm.setUserGroupFilter=function setUserGroupFilter(userGroup){if(vm.usersOptions.userGroups||(vm.usersOptions.userGroups=[]),userGroup.selected)vm.usersOptions.userGroups.push(userGroup.alias);else{var index=vm.usersOptions.userGroups.indexOf(userGroup.alias);vm.usersOptions.userGroups.splice(index,1)}updateLocation("userGroups",vm.usersOptions.userGroups.join(",")),changePageNumber(1)},vm.setOrderByFilter=function setOrderByFilter(value,direction){vm.usersOptions.orderBy=value,vm.usersOptions.orderDirection=direction,updateLocation("orderBy",value),updateLocation("orderDirection",direction),getUsers()},vm.changePageNumber=changePageNumber,vm.createUser=function createUser(addUserForm){formHelper.submitForm({formCtrl:addUserForm,scope:$scope})&&(vm.newUser.id=-1,vm.newUser.parentId=-1,vm.page.createButtonState="busy",usersResource.createUser(vm.newUser).then(function(saved){vm.page.createButtonState="success",vm.newUser=saved,setUsersViewState("createUserSuccess"),getUsers()},function(err){formHelper.handleError(err),vm.page.createButtonState="error"}))},vm.inviteUser=function inviteUser(addUserForm){formHelper.submitForm({formCtrl:addUserForm,scope:$scope})&&(vm.newUser.id=-1,vm.newUser.parentId=-1,vm.page.createButtonState="busy",usersResource.inviteUser(vm.newUser).then(function(saved){vm.page.createButtonState="success",vm.newUser=saved,setUsersViewState("inviteUserSuccess"),getUsers()},function(err){formHelper.handleError(err),vm.page.createButtonState="error"}))},vm.getSortLabel=function getSortLabel(sortKey,sortDirection){var found=_.find(vm.userSortData,function(i){return i.key===sortKey&&i.direction===sortDirection});return found?found.label:sortKey},vm.toggleNewUserPassword=function toggleNewUserPassword(){vm.newUser.showPassword=!vm.newUser.showPassword},vm.copySuccess=function copySuccess(){"success"!==vm.page.copyPasswordButtonState&&($timeout(function(){vm.page.copyPasswordButtonState="success"}),$timeout(function(){resetClipboardButtonState()},1e3))},vm.copyError=function copyError(){"error"!==vm.page.copyPasswordButtonState&&($timeout(function(){vm.page.copyPasswordButtonState="error"}),$timeout(function(){resetClipboardButtonState()},1e3))},vm.goToUser=goToUser;var search=_.debounce(function(){$scope.$apply(function(){vm.usersOptions.pageNumber=1,getUsers()})},500);function changePageNumber(pageNumber){vm.usersOptions.pageNumber=pageNumber,updateLocation("pageNumber",pageNumber),getUsers()}function updateLocation(key,value){$location.search("filter",vm.usersOptions.filter),$location.search(key,value)}function resetClipboardButtonState(){vm.page.copyPasswordButtonState="init"}function goToUser(user){$location.path(pathToUser(user)).search("orderBy",vm.usersOptions.orderBy).search("orderDirection",vm.usersOptions.orderDirection).search("pageNumber",vm.usersOptions.pageNumber).search("userStates",getUsersOptionsFilterCollectionAsDelimitedStringOrNull(vm.usersOptions.userStates)).search("userGroups",getUsersOptionsFilterCollectionAsDelimitedStringOrNull(vm.usersOptions.userGroups)).search("create",null).search("invite",null)}function getUsersOptionsFilterCollectionAsDelimitedStringOrNull(collection){return collection&&collection.length>0?collection.join(","):null}function pathToUser(user){return"/users/users/user/"+user.id}function addUsersOptionsFilterCollectionToQueryString(name,collection){return collection&&collection.length>0?"&"+name+"="+collection.join(","):""}function getUsers(){vm.loading=!0,usersResource.getPagedResults(vm.usersOptions).then(function(data){vm.users=data.items,vm.usersOptions.pageNumber=data.pageNumber,vm.usersOptions.pageSize=data.pageSize,vm.usersOptions.totalItems=data.totalItems,vm.usersOptions.totalPages=data.totalPages,function formatDates(users){users.forEach(function(user){if(user.lastLoginDate){var dateVal,serverOffset=Umbraco.Sys.ServerVariables.application.serverTimeOffset,localOffset=(new Date).getTimezoneOffset(),serverTimeNeedsOffsetting=-serverOffset!==localOffset;dateVal=serverTimeNeedsOffsetting?dateHelper.convertToLocalMomentTime(user.lastLoginDate,serverOffset):moment(user.lastLoginDate,"YYYY-MM-DD HH:mm:ss"),userService.getCurrentUser().then(function(currentUser){user.formattedLastLogin=dateVal.locale(currentUser.locale).format("LLL")})}})}(vm.users),setUserDisplayState(vm.users),vm.userStatesFilter=usersHelper.getUserStatesFilter(data.userStates),function initUserStateSelections(){initUsersOptionsFilterSelections(vm.userStatesFilter,vm.usersOptions.userStates,"key")}(),vm.loading=!1},function(error){vm.loading=!1})}function setUserDisplayState(users){users.forEach(function(user){user.userDisplayState=usersHelper.getUserStateByKey(user.userState)})}function clearAddUserForm(){vm.newUser.name="",vm.newUser.email="",vm.newUser.userGroups=[],vm.newUser.message="",vm.page.createButtonState="init",$scope.$emit("$setAccessibleHeader",!0,"general_user",!1,"","",!0)}!function init(){!function initViewOptions(){vm.usersOptions.filter="",vm.usersOptions.orderBy="Name",vm.usersOptions.orderDirection="Ascending",initViewOptionFromQueryString("filter"),initViewOptionFromQueryString("orderBy"),initViewOptionFromQueryString("orderDirection"),initViewOptionFromQueryString("pageNumber"),initViewOptionFromQueryString("userStates",!0),initViewOptionFromQueryString("userGroups",!0)}(),$routeParams.create?setUsersViewState("createUser"):$routeParams.invite&&setUsersViewState("inviteUser"),getUsers(),userGroupsResource.getUserGroups({onlyCurrentUserGroups:!1}).then(function(userGroups){vm.userGroups=userGroups,function initUserGroupSelections(){initUsersOptionsFilterSelections(vm.userGroups,vm.usersOptions.userGroups,"alias")}()})}()})}()}();