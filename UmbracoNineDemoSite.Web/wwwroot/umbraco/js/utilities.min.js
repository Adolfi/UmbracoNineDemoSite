!function(window){const extend=angular.extend,isUndefined=val=>void 0===val,isString=val=>"string"==typeof val,isNumber=val=>"number"==typeof val,toJsonReplacer=(key,value)=>{var val=value;return"string"==typeof key&&"$"===key.charAt(0)&&"$"===key.charAt(1)?val=void 0:(obj=>obj&&obj.window===obj)(value)?val="$WINDOW":value&&window.document===value?val="$DOCUMENT":(obj=>obj&&obj.$evalAsync&&obj.$watch)(value)&&(val="$SCOPE"),val};let _utilities={noop:()=>{},copy:(src,dst)=>angular.copy(src,dst),isArray:val=>Array.isArray(val)||val instanceof Array,equals:(a,b)=>angular.equals(a,b),extend:extend,isFunction:val=>"function"==typeof val,isUndefined:isUndefined,isDefined:val=>!isUndefined(val),isString:isString,isNumber:isNumber,isObject:val=>null!==val&&"object"==typeof val,fromJson:val=>isString(val)?JSON.parse(val):val,toJson:(obj,pretty)=>{if(!isUndefined(obj))return isNumber(pretty)||(pretty=pretty?2:null),JSON.stringify(obj,toJsonReplacer,pretty)},forEach:(obj,iterator)=>obj?obj.forEach(iterator):obj};void 0===window.Utilities&&(window.Utilities=_utilities)}(window);