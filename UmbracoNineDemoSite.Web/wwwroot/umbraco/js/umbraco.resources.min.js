!function(){"use strict";angular.module("umbraco.resources",[]),angular.module("umbraco.resources").factory("authResource",function authResource($q,$http,umbRequestHelper,angularHelper){return{get2FAProviders:function get2FAProviders(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("authenticationApiBaseUrl","Get2FAProviders")),"Could not retrive two factor provider info")},send2FACode:function send2FACode(provider){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("authenticationApiBaseUrl","PostSend2FACode"),Utilities.toJson(provider)),"Could not send code")},verify2FACode:function verify2FACode(provider,code){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("authenticationApiBaseUrl","PostVerify2FACode"),{code:code,provider:provider}),"Could not verify code")},performLogin:function performLogin(username,password){return username&&password?umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("authenticationApiBaseUrl","PostLogin"),{username:username,password:password}),"Login failed for user "+username):$q.reject({errorMsg:"Username or password cannot be empty"})},getCurrentInvitedUser:function getCurrentInvitedUser(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("authenticationApiBaseUrl","GetCurrentInvitedUser")),"Failed to verify invite")},performRequestPasswordReset:function performRequestPasswordReset(email){return email?/\S+@\S+\.\S+/.test(email)?umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("authenticationApiBaseUrl","PostRequestPasswordReset"),{email:email}),"Request password reset failed for email "+email):$q.reject({errorMsg:"Email address is not valid"}):$q.reject({errorMsg:"Email address cannot be empty"})},performValidatePasswordResetCode:function performValidatePasswordResetCode(userId,resetCode){return userId?resetCode?umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("authenticationApiBaseUrl","PostValidatePasswordResetCode"),{userId:userId,resetCode:resetCode}),"Password reset code validation failed for userId "+userId+", code"+resetCode):$q.reject({errorMsg:"Reset code cannot be empty"}):$q.reject({errorMsg:"User Id cannot be empty"})},getPasswordConfig:function getPasswordConfig(userId){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("authenticationApiBaseUrl","GetPasswordConfig",{userId:userId})),"Failed to retrieve membership provider config")},performSetPassword:function performSetPassword(userId,password,confirmPassword,resetCode){return null==userId?$q.reject({errorMsg:"User Id cannot be empty"}):password?password!==confirmPassword?$q.reject({errorMsg:"Password and confirmation do not match"}):resetCode?umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("authenticationApiBaseUrl","PostSetPassword"),{userId:userId,password:password,resetCode:resetCode}),"Password reset code validation failed for userId "+userId):$q.reject({errorMsg:"Reset code cannot be empty"}):$q.reject({errorMsg:"Password cannot be empty"})},unlinkLogin:function unlinkLogin(loginProvider,providerKey){return loginProvider&&providerKey?umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("authenticationApiBaseUrl","PostUnLinkLogin"),{loginProvider:loginProvider,providerKey:providerKey}),"Unlinking login provider failed"):$q.reject({errorMsg:"loginProvider or providerKey cannot be empty"})},performLogout:function performLogout(){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("authenticationApiBaseUrl","PostLogout")))},getCurrentUser:function getCurrentUser(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("authenticationApiBaseUrl","GetCurrentUser")),"Server call failed for getting current user")},isAuthenticated:function isAuthenticated(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("authenticationApiBaseUrl","IsAuthenticated")),{success:function success(data,status,headers,config){return!1===data||"false"===data?$q.reject("User is not logged in"):data},error:function error(data,status,headers,config){return{errorMsg:"Server call failed for checking authentication",data:data,status:status}}})},getRemainingTimeoutSeconds:function getRemainingTimeoutSeconds(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("authenticationApiBaseUrl","GetRemainingTimeoutSeconds")),"Server call failed for checking remaining seconds")}}}),angular.module("umbraco.resources").factory("codefileResource",function codefileResource($q,$http,umbDataFormatter,umbRequestHelper,localizationService){return{getByPath:function getByPath(type,virtualpath){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("codeFileApiBaseUrl","GetByPath",[{type:type},{virtualPath:virtualpath}])),"Failed to retrieve data for "+type+" from virtual path "+virtualpath)},getByAlias:function getByAlias(alias){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("templateApiBaseUrl","GetByAlias",[{alias:alias}])),"Failed to retrieve data for template with alias: "+alias)},deleteByPath:function deleteByPath(type,virtualpath){var promise=localizationService.localize("codefile_deleteItemFailed",[virtualpath]);return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("codeFileApiBaseUrl","Delete",[{type:type},{virtualPath:virtualpath}])),promise)},save:function save(codeFile){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("codeFileApiBaseUrl","PostSave"),codeFile),"Failed to save data for code file "+codeFile.virtualPath)},getSnippets:function getSnippets(fileType){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("codeFileApiBaseUrl","GetSnippets?type="+fileType)),"Failed to get snippet for"+fileType)},getScaffold:function getScaffold(type,id,snippetName){var queryString="?type="+type+"&id="+id;return snippetName&&(queryString+="&snippetName="+snippetName),umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("codeFileApiBaseUrl","GetScaffold"+queryString)),"Failed to get scaffold for"+type)},createContainer:function createContainer(type,parentId,name){var key="codefile_createFolderFailedBy"+(isNaN(parseInt(parentId))?"Name":"Id"),promise=localizationService.localize(key,[parentId]);return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("codeFileApiBaseUrl","PostCreateContainer",{type:type,parentId:parentId,name:encodeURIComponent(name)})),promise)},interpolateStylesheetRules:function interpolateStylesheetRules(content,rules){var payload={content:content,rules:rules};return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("codeFileApiBaseUrl","PostInterpolateStylesheetRules"),payload),"Failed to interpolate sheet rules")},extractStylesheetRules:function extractStylesheetRules(content){var payload={content:content,rules:null};return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("codeFileApiBaseUrl","PostExtractStylesheetRules"),payload),"Failed to extract style sheet rules")}}}),angular.module("umbraco.resources").factory("contentResource",function contentResource($q,$http,umbDataFormatter,umbRequestHelper){function saveContentItem(content,action,files,restApiUrl,showNotifications){return umbRequestHelper.postSaveContent({restApiUrl:restApiUrl,content:content,action:action,files:files,showNotifications:showNotifications,dataFormatter:function dataFormatter(c,a){return umbDataFormatter.formatContentPostData(c,a)}})}return{allowsCultureVariation:function allowsCultureVariation(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("contentApiBaseUrl","AllowsCultureVariation")),"Failed to retrieve variant content types")},savePermissions:function savePermissions(saveModel){if(!saveModel)throw"saveModel cannot be null";if(!saveModel.contentId)throw"saveModel.contentId cannot be null";if(!saveModel.permissions)throw"saveModel.permissions cannot be null";return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("contentApiBaseUrl","PostSaveUserGroupPermissions"),saveModel),"Failed to save permissions")},getRecycleBin:function getRecycleBin(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("contentApiBaseUrl","GetRecycleBin")),"Failed to retrieve data for content recycle bin")},sort:function sort(args){if(!args)throw"args cannot be null";if(!args.parentId)throw"args.parentId cannot be null";if(!args.sortedIds)throw"args.sortedIds cannot be null";return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("contentApiBaseUrl","PostSort"),{parentId:args.parentId,idSortOrder:args.sortedIds}),"Failed to sort content")},move:function move(args){if(!args)throw"args cannot be null";if(!args.parentId)throw"args.parentId cannot be null";if(!args.id)throw"args.id cannot be null";return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("contentApiBaseUrl","PostMove"),{parentId:args.parentId,id:args.id},{responseType:"text"}),"Failed to move content")},copy:function copy(args){if(!args)throw"args cannot be null";if(!args.parentId)throw"args.parentId cannot be null";if(!args.id)throw"args.id cannot be null";return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("contentApiBaseUrl","PostCopy"),args,{responseType:"text"}),"Failed to copy content")},unpublish:function unpublish(id,cultures){if(!id)throw"id cannot be null";return cultures||(cultures=[]),umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("contentApiBaseUrl","PostUnpublish"),{id:id,cultures:cultures}),"Failed to publish content with id "+id)},getCultureAndDomains:function getCultureAndDomains(id){if(!id)throw"id cannot be null";return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("contentApiBaseUrl","GetCultureAndDomains",{id:id})),"Failed to retreive culture and hostnames for "+id)},saveLanguageAndDomains:function saveLanguageAndDomains(model){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("contentApiBaseUrl","PostSaveLanguageAndDomains"),model))},emptyRecycleBin:function emptyRecycleBin(){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("contentApiBaseUrl","EmptyRecycleBin")),"Failed to empty the recycle bin")},deleteById:function deleteById(id){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("contentApiBaseUrl","DeleteById",[{id:id}])),"Failed to delete item "+id)},deleteBlueprint:function deleteBlueprint(id){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("contentApiBaseUrl","DeleteBlueprint",[{id:id}])),"Failed to delete blueprint "+id)},getById:function getById(id){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("contentApiBaseUrl","GetById",{id:id})),"Failed to retrieve data for content id "+id).then(function(result){return $q.when(umbDataFormatter.formatContentGetData(result))})},getBlueprintById:function getBlueprintById(id){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("contentApiBaseUrl","GetBlueprintById",{id:id})),"Failed to retrieve data for content id "+id).then(function(result){return $q.when(umbDataFormatter.formatContentGetData(result))})},getNotifySettingsById:function getNotifySettingsById(id){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("contentApiBaseUrl","GetNotificationOptions",{contentId:id})),"Failed to retrieve data for content id "+id)},setNotifySettingsById:function setNotifySettingsById(id,options){if(!id)throw"contentId cannot be null";return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("contentApiBaseUrl","PostNotificationOptions",{contentId:id,notifyOptions:options})),"Failed to set notify settings for content id "+id)},getByIds:function getByIds(ids){var idQuery="";return ids.forEach(function(id){return idQuery+="ids=".concat(id,"&")}),umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("contentApiBaseUrl","GetByIds",idQuery)),"Failed to retrieve data for content with multiple ids").then(function(result){return result.forEach(function(r){return umbDataFormatter.formatContentGetData(r)}),$q.when(result)})},getScaffold:function getScaffold(parentId,alias){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("contentApiBaseUrl","GetEmpty",{contentTypeAlias:alias,parentId:parentId})),"Failed to retrieve data for empty content item type "+alias).then(function(result){return $q.when(umbDataFormatter.formatContentGetData(result))})},getScaffolds:function getScaffolds(parentId,aliases){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("contentApiBaseUrl","GetEmptyByAliases"),{parentId:parentId,contentTypeAliases:aliases}),"Failed to retrieve data for empty content item aliases "+aliases.join(", ")).then(function(result){return Object.keys(result).map(function(key){result[key]=umbDataFormatter.formatContentGetData(result[key])}),$q.when(result)})},getScaffoldByKey:function getScaffoldByKey(parentId,contentTypeKey){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("contentApiBaseUrl","GetEmptyByKey",{contentTypeKey:contentTypeKey,parentId:parentId})),"Failed to retrieve data for empty content item id "+contentTypeKey).then(function(result){return $q.when(umbDataFormatter.formatContentGetData(result))})},getScaffoldByKeys:function getScaffoldByKeys(parentId,scaffoldKeys){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("contentApiBaseUrl","GetEmptyByKeys"),{contentTypeKeys:scaffoldKeys,parentId:parentId}),"Failed to retrieve data for empty content items ids"+scaffoldKeys.join(", ")).then(function(result){return Object.keys(result).map(function(key){result[key]=umbDataFormatter.formatContentGetData(result[key])}),$q.when(result)})},getBlueprintScaffold:function getBlueprintScaffold(parentId,blueprintId){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("contentApiBaseUrl","GetEmptyBlueprint",{blueprintId:blueprintId,parentId:parentId})),"Failed to retrieve blueprint for id "+blueprintId).then(function(result){return $q.when(umbDataFormatter.formatContentGetData(result))})},getNiceUrl:function getNiceUrl(id){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("contentApiBaseUrl","GetNiceUrl",{id:id}),{responseType:"text"}),"Failed to retrieve url for id:"+id)},getChildren:function getChildren(parentId,options){var defaults={includeProperties:[],pageSize:0,pageNumber:0,filter:"",orderDirection:"Ascending",orderBy:"SortOrder",orderBySystemField:!0,cultureName:""};return void 0===options&&(options={}),Utilities.extend(defaults,options),"asc"===(options=defaults).orderDirection?options.orderDirection="Ascending":"desc"===options.orderDirection&&(options.orderDirection="Descending"),umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("contentApiBaseUrl","GetChildren",{id:parentId,includeProperties:_.pluck(options.includeProperties,"alias").join(","),pageNumber:options.pageNumber,pageSize:options.pageSize,orderBy:options.orderBy,orderDirection:options.orderDirection,orderBySystemField:function toBool(v){return Utilities.isNumber(v)?v>0:Utilities.isString(v)?"true"===v:"boolean"==typeof v&&v}(options.orderBySystemField),filter:options.filter,cultureName:options.cultureName})),"Failed to retrieve children for content item "+parentId)},getDetailedPermissions:function getDetailedPermissions(contentId){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("contentApiBaseUrl","GetDetailedPermissions",{contentId:contentId})),"Failed to retrieve permissions for content item "+contentId)},save:function save(content,isNew,files,showNotifications){return saveContentItem(content,"save"+(isNew?"New":""),files,umbRequestHelper.getApiUrl("contentApiBaseUrl","PostSave"),showNotifications)},saveBlueprint:function saveBlueprint(content,isNew,files,showNotifications){return saveContentItem(content,"save"+(isNew?"New":""),files,umbRequestHelper.getApiUrl("contentApiBaseUrl","PostSaveBlueprint"),showNotifications)},publish:function publish(content,isNew,files,showNotifications){return saveContentItem(content,"publish"+(isNew?"New":""),files,umbRequestHelper.getApiUrl("contentApiBaseUrl","PostSave"),showNotifications)},publishWithDescendants:function publishWithDescendants(content,isNew,force,files,showNotifications){var action="publishWithDescendants";return!0===force&&(action+="Force"),saveContentItem(content,action+(isNew?"New":""),files,umbRequestHelper.getApiUrl("contentApiBaseUrl","PostSave"),showNotifications)},sendToPublish:function sendToPublish(content,isNew,files,showNotifications){return saveContentItem(content,"sendPublish"+(isNew?"New":""),files,umbRequestHelper.getApiUrl("contentApiBaseUrl","PostSave"),showNotifications)},saveSchedule:function saveSchedule(content,isNew,files,showNotifications){return saveContentItem(content,"schedule"+(isNew?"New":""),files,umbRequestHelper.getApiUrl("contentApiBaseUrl","PostSave"),showNotifications)},publishById:function publishById(id){if(!id)throw"id cannot be null";return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("contentApiBaseUrl","PostPublishById",[{id:id}])),"Failed to publish content with id "+id)},createBlueprintFromContent:function createBlueprintFromContent(contentId,name){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("contentApiBaseUrl","CreateBlueprintFromContent",{contentId:contentId,name:name})),"Failed to create blueprint from content with id "+contentId)},getRollbackVersions:function getRollbackVersions(contentId,culture){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("contentApiBaseUrl","GetRollbackVersions",{contentId:contentId,culture:culture})),"Failed to get rollback versions for content item with id "+contentId)},getRollbackVersion:function getRollbackVersion(versionId,culture){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("contentApiBaseUrl","GetRollbackVersion",{versionId:versionId,culture:culture})),"Failed to get version for content item with id "+versionId)},rollback:function rollback(contentId,versionId,culture){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("contentApiBaseUrl","PostRollbackContent",{contentId:contentId,versionId:versionId,culture:culture})),"Failed to roll back content item with id "+contentId)}}}),angular.module("umbraco.resources").factory("contentTypeResource",function contentTypeResource($q,$http,umbRequestHelper,umbDataFormatter,localizationService,notificationsService){return{getCount:function getCount(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("contentTypeApiBaseUrl","GetCount")),"Failed to retrieve count")},getAvailableCompositeContentTypes:function getAvailableCompositeContentTypes(contentTypeId,filterContentTypes,filterPropertyTypes,isElement){filterContentTypes||(filterContentTypes=[]),filterPropertyTypes||(filterPropertyTypes=[]);var query={contentTypeId:contentTypeId,filterContentTypes:filterContentTypes,filterPropertyTypes:filterPropertyTypes,isElement:isElement};return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("contentTypeApiBaseUrl","GetAvailableCompositeContentTypes"),query),"Failed to retrieve data for content type id "+contentTypeId)},getWhereCompositionIsUsedInContentTypes:function getWhereCompositionIsUsedInContentTypes(contentTypeId){var query={contentTypeId:contentTypeId};return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("contentTypeApiBaseUrl","GetWhereCompositionIsUsedInContentTypes"),query),"Failed to retrieve data for content type id "+contentTypeId)},getAllowedTypes:function getAllowedTypes(contentTypeId){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("contentTypeApiBaseUrl","GetAllowedChildren",[{contentId:contentTypeId}])),"Failed to retrieve data for content id "+contentTypeId)},getAllPropertyTypeAliases:function getAllPropertyTypeAliases(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("contentTypeApiBaseUrl","GetAllPropertyTypeAliases")),"Failed to retrieve property type aliases")},getAllStandardFields:function getAllStandardFields(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("contentTypeApiBaseUrl","GetAllStandardFields")),"Failed to retrieve standard fields")},getPropertyTypeScaffold:function getPropertyTypeScaffold(id){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("contentTypeApiBaseUrl","GetPropertyTypeScaffold",[{id:id}])),"Failed to retrieve property type scaffold")},getById:function getById(id){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("contentTypeApiBaseUrl","GetById",[{id:id}])),"Failed to retrieve content type")},deleteById:function deleteById(id){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("contentTypeApiBaseUrl","DeleteById",[{id:id}])),"Failed to delete content type")},deleteContainerById:function deleteContainerById(id){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("contentTypeApiBaseUrl","DeleteContainer",[{id:id}])),"Failed to delete content type contaier")},getAll:function getAll(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("contentTypeApiBaseUrl","GetAll")),"Failed to retrieve all content types")},getScaffold:function getScaffold(parentId){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("contentTypeApiBaseUrl","GetEmpty",{parentId:parentId})),"Failed to retrieve content type scaffold")},save:function save(contentType){var saveModel=umbDataFormatter.formatContentTypePostData(contentType);return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("contentTypeApiBaseUrl","PostSave"),saveModel),"Failed to save data for content type id "+contentType.id)},move:function move(args){if(!args)throw"args cannot be null";if(!args.parentId)throw"args.parentId cannot be null";if(!args.id)throw"args.id cannot be null";var promise=localizationService.localize("contentType_moveFailed");return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("contentTypeApiBaseUrl","PostMove"),{parentId:args.parentId,id:args.id},{responseType:"text"}),promise)},copy:function copy(args){if(!args)throw"args cannot be null";if(!args.parentId)throw"args.parentId cannot be null";if(!args.id)throw"args.id cannot be null";var promise=localizationService.localize("contentType_copyFailed");return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("contentTypeApiBaseUrl","PostCopy"),{parentId:args.parentId,id:args.id},{responseType:"text"}),promise)},createContainer:function createContainer(parentId,name){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("contentTypeApiBaseUrl","PostCreateContainer",{parentId:parentId,name:encodeURIComponent(name)})),"Failed to create a folder under parent id "+parentId)},renameContainer:function renameContainer(id,name){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("contentTypeApiBaseUrl","PostRenameContainer",{id:id,name:name})),"Failed to rename the folder with id "+id)},export:function _export(id){if(!id)throw"id cannot be null";var url=umbRequestHelper.getApiUrl("contentTypeApiBaseUrl","Export",{id:id});return umbRequestHelper.downloadFile(url).then(function(){localizationService.localize("speechBubbles_documentTypeExportedSuccess").then(function(value){notificationsService.success(value)})},function(data){localizationService.localize("speechBubbles_documentTypeExportedError").then(function(value){notificationsService.error(value)})})},import:function _import(file){if(!file)throw"file cannot be null";return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("contentTypeApiBaseUrl","Import",{file:file})),"Failed to import document type "+file)},createDefaultTemplate:function createDefaultTemplate(id){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("contentTypeApiBaseUrl","PostCreateDefaultTemplate",{id:id})),"Failed to create default template for content type with id "+id)},hasContentNodes:function hasContentNodes(id){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("contentTypeApiBaseUrl","HasContentNodes",[{id:id}])),"Failed to retrieve indication for whether content type with id "+id+" has associated content nodes")},allowsCultureVariation:function allowsCultureVariation(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("contentTypeApiBaseUrl","AllowsCultureVariation")),"Failed to retrieve variant content types")}}}),angular.module("umbraco.resources").factory("currentUserResource",function currentUserResource($q,$http,umbRequestHelper,umbDataFormatter){return{getPermissions:function getPermissions(nodeIds){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("currentUserApiBaseUrl","GetPermissions"),nodeIds),"Failed to get permissions")},checkPermission:function checkPermission(permission,id){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("currentUserApiBaseUrl","HasPermission",[{permissionToCheck:permission},{nodeId:id}])),"Failed to check permission for item "+id)},getCurrentUserLinkedLogins:function getCurrentUserLinkedLogins(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("currentUserApiBaseUrl","GetCurrentUserLinkedLogins")),"Server call failed for getting current users linked logins")},saveTourStatus:function saveTourStatus(tourStatus){return tourStatus?umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("currentUserApiBaseUrl","PostSetUserTour"),tourStatus),"Failed to save tour status"):$q.reject({errorMsg:"tourStatus cannot be empty"})},getTours:function getTours(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("currentUserApiBaseUrl","GetUserTours")),"Failed to get tours")},performSetInvitedUserPassword:function performSetInvitedUserPassword(newPassword){return newPassword?umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("currentUserApiBaseUrl","PostSetInvitedUserPassword"),Utilities.toJson(newPassword)),"Failed to change password"):$q.reject({errorMsg:"newPassword cannot be empty"})},changePassword:function changePassword(changePasswordArgs){if(!(changePasswordArgs=umbDataFormatter.formatChangePasswordModel(changePasswordArgs)))throw"No password data to change";return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("currentUserApiBaseUrl","PostChangePassword"),changePasswordArgs),"Failed to change password")}}}),angular.module("umbraco.resources").factory("dashboardResource",function dashboardResource($q,$http,umbRequestHelper){return{getDashboard:function getDashboard(section){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("dashboardApiBaseUrl","GetDashboard",[{section:section}])),"Failed to get dashboard "+section)},getRemoteDashboardContent:function getRemoteDashboardContent(section,baseurl){var values=[{section:section}];return baseurl&&values.push({baseurl:baseurl}),umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("dashboardApiBaseUrl","GetRemoteDashboardContent",values)),"Failed to get dashboard content")},getRemoteDashboardCssUrl:function getRemoteDashboardCssUrl(section,baseurl){var values=[{section:section}];return baseurl&&values.push({baseurl:baseurl}),umbRequestHelper.getApiUrl("dashboardApiBaseUrl","GetRemoteDashboardCss",values)},getRemoteXmlData:function getRemoteXmlData(site,url){var values={site:site,url:url};return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("dashboardApiBaseUrl","GetRemoteXml",values)),"Failed to get remote xml")}}}),angular.module("umbraco.resources").factory("dataTypeResource",function dataTypeResource($q,$http,umbDataFormatter,umbRequestHelper){return{getPreValues:function getPreValues(editorAlias,dataTypeId){return dataTypeId||(dataTypeId=-1),umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("dataTypeApiBaseUrl","GetPreValues",[{editorAlias:editorAlias},{dataTypeId:dataTypeId}])),"Failed to retrieve pre values for editor alias "+editorAlias)},getReferences:function getReferences(id){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("dataTypeApiBaseUrl","GetReferences",{id:id})),"Failed to retrieve usages for data type of id "+id)},getById:function getById(id){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("dataTypeApiBaseUrl","GetById",[{id:id}])),"Failed to retrieve data for data type id "+id)},getByName:function getByName(name){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("dataTypeApiBaseUrl","GetByName",[{name:name}])),"Failed to retrieve data for data type with name: "+name)},getAll:function getAll(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("dataTypeApiBaseUrl","GetAll")),"Failed to retrieve data")},getGroupedDataTypes:function getGroupedDataTypes(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("dataTypeApiBaseUrl","GetGroupedDataTypes")),"Failed to retrieve data")},getGroupedPropertyEditors:function getGroupedPropertyEditors(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("dataTypeApiBaseUrl","GetGroupedPropertyEditors")),"Failed to retrieve data")},getAllPropertyEditors:function getAllPropertyEditors(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("dataTypeApiBaseUrl","GetAllPropertyEditors")),"Failed to retrieve data")},getScaffold:function getScaffold(parentId){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("dataTypeApiBaseUrl","GetEmpty",{parentId:parentId})),"Failed to retrieve data for empty datatype")},deleteById:function deleteById(id){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("dataTypeApiBaseUrl","DeleteById",[{id:id}])),"Failed to delete item "+id)},deleteContainerById:function deleteContainerById(id){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("dataTypeApiBaseUrl","DeleteContainer",[{id:id}])),"Failed to delete content type contaier")},getCustomListView:function getCustomListView(contentTypeAlias){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("dataTypeApiBaseUrl","GetCustomListView",{contentTypeAlias:contentTypeAlias})),"Failed to retrieve data for custom listview datatype")},createCustomListView:function createCustomListView(contentTypeAlias){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("dataTypeApiBaseUrl","PostCreateCustomListView",{contentTypeAlias:contentTypeAlias})),"Failed to create a custom listview datatype")},save:function save(dataType,preValues,isNew){var saveModel=umbDataFormatter.formatDataTypePostData(dataType,preValues,"save"+(isNew?"New":""));return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("dataTypeApiBaseUrl","PostSave"),saveModel),"Failed to save data for data type id "+dataType.id)},move:function move(args){if(!args)throw"args cannot be null";if(!args.parentId)throw"args.parentId cannot be null";if(!args.id)throw"args.id cannot be null";return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("dataTypeApiBaseUrl","PostMove"),{parentId:args.parentId,id:args.id},{responseType:"text"}),"Failed to move content")},createContainer:function createContainer(parentId,name){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("dataTypeApiBaseUrl","PostCreateContainer",{parentId:parentId,name:encodeURIComponent(name)})),"Failed to create a folder under parent id "+parentId)},renameContainer:function renameContainer(id,name){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("dataTypeApiBaseUrl","PostRenameContainer",{id:id,name:encodeURIComponent(name)})),"Failed to rename the folder with id "+id)}}}),angular.module("umbraco.resources").factory("dictionaryResource",function dictionaryResource($q,$http,$location,umbRequestHelper,umbDataFormatter){return{deleteById:function deleteById(id){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("dictionaryApiBaseUrl","DeleteById",[{id:id}])),"Failed to delete item "+id)},create:function create(parentid,key){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("dictionaryApiBaseUrl","Create",{parentId:parentid,key:key})),"Failed to create item ")},getById:function getById(id){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("dictionaryApiBaseUrl","GetById",[{id:id}])),"Failed to get item "+id)},save:function save(dictionary,nameIsDirty){var saveModel=umbDataFormatter.formatDictionaryPostData(dictionary,nameIsDirty);return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("dictionaryApiBaseUrl","PostSave"),saveModel),"Failed to save data for dictionary id "+dictionary.id)},getList:function getList(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("dictionaryApiBaseUrl","getList")),"Failed to get list")}}}),angular.module("umbraco.resources").factory("elementTypeResource",function elementTypeResource($q,$http,umbRequestHelper){return{getAll:function getAll(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("elementTypeApiBaseUrl","GetAll")),"Failed to retrieve element types")}}}),angular.module("umbraco.resources").factory("emailMarketingResource",function emailMarketingResource($http,umbRequestHelper){return{postAddUserToEmailMarketing:function postAddUserToEmailMarketing(user){return umbRequestHelper.resourcePromise($http.post("https://emailcollector.umbraco.io/api/EmailProxy",{name:user.name,email:user.email,usergroup:user.userGroups}),"Failed to add user to email marketing list")}}}),angular.module("umbraco.resources").factory("entityResource",function entityResource($q,$http,umbRequestHelper){return{getSafeAlias:function getSafeAlias(value,camelCase){return value?(value=value.replace("#",""),umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("entityApiBaseUrl","GetSafeAlias",{value:encodeURIComponent(value),camelCase:camelCase})),"Failed to retrieve content type scaffold")):""},getPath:function getPath(id,type){return-1===id||"-1"===id?"-1":umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("entityApiBaseUrl","GetPath",[{id:id},{type:type}])),"Failed to retrieve path for id:"+id)},getUrl:function getUrl(id,type,culture){return-1===id||"-1"===id?"":(culture||(culture=""),umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("entityApiBaseUrl","GetUrl",[{id:id},{type:type},{culture:culture}])),"Failed to retrieve url for id:"+id))},getUrlByUdi:function getUrlByUdi(udi,culture){return udi?(culture||(culture=""),umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("entityApiBaseUrl","GetUrl",[{id:udi},{culture:culture}])),"Failed to retrieve url for UDI:"+udi)):""},getById:function getById(id,type){return-1===id||"-1"===id?null:umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("entityApiBaseUrl","GetById",[{id:id},{type:type}])),"Failed to retrieve entity data for id "+id)},getUrlAndAnchors:function getUrlAndAnchors(id,culture){return-1===id||"-1"===id?null:(culture||(culture=""),umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("entityApiBaseUrl","GetUrlAndAnchors",[{id:id},{culture:culture}])),"Failed to retrieve url and anchors data for id "+id))},getAnchors:function getAnchors(rteContent){return rteContent&&0!==rteContent.length?umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("entityApiBaseUrl","GetAnchors"),{rteContent:rteContent}),"Failed to anchors data for rte content "+rteContent):$q.when([])},getByIds:function getByIds(ids,type){if(!ids||0===ids.length)return $q.when([]);var query="type="+type;return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("entityApiBaseUrl","GetByIds",query),{ids:ids}),"Failed to retrieve entity data for ids "+ids)},getByQuery:function getByQuery(query,nodeContextId,type){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("entityApiBaseUrl","GetByQuery",[{query:query},{nodeContextId:nodeContextId},{type:type}])),"Failed to retrieve entity data for query "+query)},getAll:function getAll(type,postFilter){var query="type="+type+"&postFilter="+(postFilter?encodeURIComponent(postFilter):"");return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("entityApiBaseUrl","GetAll",query)),"Failed to retrieve entity data for type "+type)},getAncestors:function getAncestors(id,type,culture,options){culture||(culture="");var args=[{id:id},{type:type},{culture:culture}];return options&&options.dataTypeKey&&args.push({dataTypeKey:options.dataTypeKey}),umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("entityApiBaseUrl","GetAncestors",args)),"Failed to retrieve ancestor data for id "+id)},getChildren:function getChildren(id,type,options){var args=[{id:id},{type:type}];return options&&options.dataTypeKey&&args.push({dataTypeKey:options.dataTypeKey}),umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("entityApiBaseUrl","GetChildren",args)),"Failed to retrieve child data for id "+id)},getPagedChildren:function getPagedChildren(parentId,type,options){var defaults={pageSize:1,pageNumber:100,filter:"",orderDirection:"Ascending",orderBy:"SortOrder",dataTypeKey:null};return void 0===options&&(options={}),Utilities.extend(defaults,options),"asc"===(options=defaults).orderDirection?options.orderDirection="Ascending":"desc"===options.orderDirection&&(options.orderDirection="Descending"),umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("entityApiBaseUrl","GetPagedChildren",{id:parentId,type:type,pageNumber:options.pageNumber,pageSize:options.pageSize,orderBy:options.orderBy,orderDirection:options.orderDirection,filter:encodeURIComponent(options.filter),dataTypeKey:options.dataTypeKey})),"Failed to retrieve child data for id "+parentId)},getPagedDescendants:function getPagedDescendants(parentId,type,options){var defaults={pageSize:100,pageNumber:1,filter:"",orderDirection:"Ascending",orderBy:"SortOrder",dataTypeKey:null};return void 0===options&&(options={}),Utilities.extend(defaults,options),"asc"===(options=defaults).orderDirection?options.orderDirection="Ascending":"desc"===options.orderDirection&&(options.orderDirection="Descending"),umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("entityApiBaseUrl","GetPagedDescendants",{id:parentId,type:type,pageNumber:options.pageNumber,pageSize:options.pageSize,orderBy:options.orderBy,orderDirection:options.orderDirection,filter:encodeURIComponent(options.filter),dataTypeKey:options.dataTypeKey})),"Failed to retrieve child data for id "+parentId)},search:function search(query,type,searchFrom,canceler,dataTypeKey){var args=[{query:query},{type:type}];searchFrom&&args.push({searchFrom:searchFrom}),dataTypeKey&&args.push({dataTypeKey:dataTypeKey});var httpConfig={};return canceler&&(httpConfig.timeout=canceler),umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("entityApiBaseUrl","Search",args),httpConfig),"Failed to retrieve entity data for query "+query)},searchAll:function searchAll(query,canceler){var httpConfig={};return canceler&&(httpConfig.timeout=canceler),umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("entityApiBaseUrl","SearchAll",[{query:query}]),httpConfig),"Failed to retrieve entity data for query "+query)}}}),function(){angular.module("umbraco.resources").factory("healthCheckResource",function healthCheckResource($http,umbRequestHelper){return{getAllChecks:function getAllChecks(){return umbRequestHelper.resourcePromise($http.get(Umbraco.Sys.ServerVariables.umbracoUrls.healthCheckBaseUrl+"GetAllHealthChecks"),"Failed to retrieve health checks")},getStatus:function getStatus(id){return umbRequestHelper.resourcePromise($http.get(Umbraco.Sys.ServerVariables.umbracoUrls.healthCheckBaseUrl+"GetStatus?id="+id),"Failed to retrieve status for health check with ID "+id)},executeAction:function executeAction(action){return umbRequestHelper.resourcePromise($http.post(Umbraco.Sys.ServerVariables.umbracoUrls.healthCheckBaseUrl+"ExecuteAction",action),"Failed to execute action with alias "+action.alias+" and healthCheckId + "+action.healthCheckId)}}})}(),function(){angular.module("umbraco.resources").factory("imageUrlGeneratorResource",function imageUrlGeneratorResource($http,umbRequestHelper){return{getCropUrl:function getCropUrl(mediaPath,width,height,imageCropMode){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("imageUrlGeneratorApiBaseUrl","GetCropUrl",{mediaPath:mediaPath,width:width,height:height,imageCropMode:imageCropMode})),"Failed to get crop URL")}}})}(),function(){angular.module("umbraco.resources").factory("javascriptLibraryResource",function javascriptLibraryResource($q,$http,umbRequestHelper){var existingLocales=null;return{getSupportedLocales:function getSupportedLocales(){var deferred=$q.defer();return null===existingLocales?umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("backOfficeAssetsApiBaseUrl","GetSupportedLocales")),"Failed to get cultures").then(function(locales){existingLocales=locales,deferred.resolve(existingLocales)}):deferred.resolve(existingLocales),deferred.promise}}})}(),angular.module("umbraco.resources").factory("languageResource",function languageResource($http,umbRequestHelper){return{getCultures:function getCultures(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("languageApiBaseUrl","GetAllCultures")),"Failed to get cultures")},getAll:function getAll(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("languageApiBaseUrl","GetAllLanguages")),"Failed to get languages")},getById:function getById(id){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("languageApiBaseUrl","GetLanguage",{id:id})),"Failed to get language with id "+id)},save:function save(lang){if(!lang)throw"'lang' parameter cannot be null";return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("languageApiBaseUrl","SaveLanguage"),lang),"Failed to save language "+lang.id)},deleteById:function deleteById(id){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("languageApiBaseUrl","DeleteLanguage",{id:id})),"Failed to delete item "+id)}}}),angular.module("umbraco.resources").factory("logResource",function logResource($q,$http,umbRequestHelper){function dateToValidIsoString(input){return function isValidDate(input){return!(!input||"[object Date]"!==Object.prototype.toString.call(input)||isNaN(input.getTime()))}(input)?input.toISOString():""}return{getPagedEntityLog:function getPagedEntityLog(options){var defaults={pageSize:10,pageNumber:1,orderDirection:"Descending"};if(void 0===options&&(options={}),Utilities.extend(defaults,options),(options=defaults).hasOwnProperty("sinceDate")&&(options.sinceDate=dateToValidIsoString(options.sinceDate)),"asc"===options.orderDirection?options.orderDirection="Ascending":"desc"===options.orderDirection&&(options.orderDirection="Descending"),void 0===options.id||null===options.id)throw"options.id is required";return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("logApiBaseUrl","GetPagedEntityLog",options)),"Failed to retrieve log data for id")},getPagedUserLog:function getPagedUserLog(options){var defaults={pageSize:10,pageNumber:1,orderDirection:"Descending"};return void 0===options&&(options={}),Utilities.extend(defaults,options),(options=defaults).hasOwnProperty("sinceDate")&&(options.sinceDate=dateToValidIsoString(options.sinceDate)),"asc"===options.orderDirection?options.orderDirection="Ascending":"desc"===options.orderDirection&&(options.orderDirection="Descending"),umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("logApiBaseUrl","GetPagedCurrentUserLog",options)),"Failed to retrieve log data for id")},getLog:function getLog(type,since){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("logApiBaseUrl","GetLog",[{logtype:type},{sinceDate:dateToValidIsoString(since)}])),"Failed to retrieve log data of type "+type+" since "+since)}}}),angular.module("umbraco.resources").factory("logViewerResource",function logViewerResource($q,$http,umbRequestHelper){var request=function request(verb,method,params,error){return umbRequestHelper.resourcePromise("GET"===verb?$http.get(umbRequestHelper.getApiUrl("logViewerApiBaseUrl",method)+(params||"")):$http.post(umbRequestHelper.getApiUrl("logViewerApiBaseUrl",method),params),error)};return{getNumberOfErrors:function getNumberOfErrors(startDate,endDate){return request("GET","GetNumberOfErrors","?startDate="+startDate+"&endDate="+endDate,"Failed to retrieve number of errors in logs")},getLogLevel:function getLogLevel(){return request("GET","GetLogLevel",null,"Failed to retrieve log level")},getLogLevelCounts:function getLogLevelCounts(startDate,endDate){return request("GET","GetLogLevelCounts","?startDate="+startDate+"&endDate="+endDate,"Failed to retrieve log level counts")},getMessageTemplates:function getMessageTemplates(startDate,endDate){return request("GET","GetMessageTemplates","?startDate="+startDate+"&endDate="+endDate,"Failed to retrieve log templates")},getSavedSearches:function getSavedSearches(){return request("GET","GetSavedSearches",null,"Failed to retrieve saved searches")},postSavedSearch:function postSavedSearch(name,query){return request("POST","PostSavedSearch",{name:name,query:query},"Failed to add new saved search")},deleteSavedSearch:function deleteSavedSearch(name,query){return request("POST","DeleteSavedSearch",{name:name,query:query},"Failed to delete saved search")},getLogs:function getLogs(options){var defaults={pageSize:100,pageNumber:1,orderDirection:"Descending",filterExpression:""};return void 0===options&&(options={}),Utilities.extend(defaults,options),options=defaults,umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("logViewerApiBaseUrl","GetLogs",options)),"Failed to retrieve common log messages")},canViewLogs:function canViewLogs(startDate,endDate){return request("GET","GetCanViewLogs","?startDate="+startDate+"&endDate="+endDate,"Failed to retrieve state if logs can be viewed")}}}),angular.module("umbraco.resources").factory("macroResource",function macroResource($q,$http,umbRequestHelper){return{getMacroParameters:function getMacroParameters(macroId){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("macroRenderingApiBaseUrl","GetMacroParameters",[{macroId:macroId}])),"Failed to retrieve macro parameters for macro with id  "+macroId)},getMacroResultAsHtmlForEditor:function getMacroResultAsHtmlForEditor(macroAlias,pageId,macroParamDictionary){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("macroRenderingApiBaseUrl","GetMacroResultAsHtmlForEditor"),{macroAlias:macroAlias,pageId:pageId,macroParams:macroParamDictionary}),"Failed to retrieve macro result for macro with alias  "+macroAlias)},createPartialViewMacroWithFile:function createPartialViewMacroWithFile(virtualPath,filename){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("macroRenderingApiBaseUrl","CreatePartialViewMacroWithFile"),{virtualPath:virtualPath,filename:filename}),'Failed to create macro "'+filename+'"')},createMacro:function createMacro(name){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("macroApiBaseUrl","Create?name="+name)),'Failed to create macro "'+name+'"')},getPartialViews:function getPartialViews(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("macroApiBaseUrl","GetPartialViews"),"Failed to get partial views"))},getParameterEditors:function getParameterEditors(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("macroApiBaseUrl","GetParameterEditors"),"Failed to get parameter editors"))},getGroupedParameterEditors:function getGroupedParameterEditors(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("macroApiBaseUrl","GetGroupedParameterEditors"),"Failed to get parameter editors"))},getParameterEditorByAlias:function getParameterEditorByAlias(alias){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("macroApiBaseUrl","GetParameterEditorByAlias",{alias:alias}),"Failed to get parameter editor"))},getById:function getById(id){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("macroApiBaseUrl","GetById",{id:id}),"Failed to get macro"))},saveMacro:function saveMacro(macro){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("macroApiBaseUrl","Save"),macro))},deleteById:function deleteById(id){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("macroApiBaseUrl","deleteById",{id:id})))}}}),angular.module("umbraco.resources").factory("mediaResource",function mediaResource($q,$http,umbDataFormatter,umbRequestHelper){return{getRecycleBin:function getRecycleBin(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("mediaApiBaseUrl","GetRecycleBin")),"Failed to retrieve data for media recycle bin")},sort:function sort(args){if(!args)throw"args cannot be null";if(!args.parentId)throw"args.parentId cannot be null";if(!args.sortedIds)throw"args.sortedIds cannot be null";return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("mediaApiBaseUrl","PostSort"),{parentId:args.parentId,idSortOrder:args.sortedIds}),"Failed to sort media")},move:function move(args){if(!args)throw"args cannot be null";if(!args.parentId)throw"args.parentId cannot be null";if(!args.id)throw"args.id cannot be null";return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("mediaApiBaseUrl","PostMove"),{parentId:args.parentId,id:args.id},{responseType:"text"}),{error:function error(data){var errorMsg="Failed to move media";return void 0!==data.id&&void 0!==data.parentId?data.id===data.parentId&&(errorMsg="Media can't be moved into itself"):void 0!==data.notifications&&data.notifications.length>0&&(data.notifications[0].header.length>0&&(errorMsg=data.notifications[0].header),data.notifications[0].message.length>0&&(errorMsg=errorMsg+": "+data.notifications[0].message)),{errorMsg:errorMsg}}})},getById:function getById(id){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("mediaApiBaseUrl","GetById",[{id:id}])),"Failed to retrieve data for media id "+id)},deleteById:function deleteById(id){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("mediaApiBaseUrl","DeleteById",[{id:id}])),"Failed to delete item "+id)},getByIds:function getByIds(ids){var idQuery="";return ids.forEach(function(id){return idQuery+="ids=".concat(id,"&")}),umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("mediaApiBaseUrl","GetByIds",idQuery)),"Failed to retrieve data for media ids "+ids)},getScaffold:function getScaffold(parentId,alias){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("mediaApiBaseUrl","GetEmpty",[{contentTypeAlias:alias},{parentId:parentId}])),"Failed to retrieve data for empty media item type "+alias)},rootMedia:function rootMedia(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("mediaApiBaseUrl","GetRootMedia")),"Failed to retrieve data for root media")},getChildren:function getChildren(parentId,options){var defaults={pageSize:0,pageNumber:0,filter:"",orderDirection:"Ascending",orderBy:"SortOrder",orderBySystemField:!0};return void 0===options&&(options={}),Utilities.extend(defaults,options),"asc"===(options=defaults).orderDirection?options.orderDirection="Ascending":"desc"===options.orderDirection&&(options.orderDirection="Descending"),umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("mediaApiBaseUrl","GetChildren",[{id:parentId},{pageNumber:options.pageNumber},{pageSize:options.pageSize},{orderBy:options.orderBy},{orderDirection:options.orderDirection},{orderBySystemField:function toBool(v){return Utilities.isNumber(v)?v>0:Utilities.isString(v)?"true"===v:"boolean"==typeof v&&v}(options.orderBySystemField)},{filter:options.filter}])),"Failed to retrieve children for media item "+parentId)},save:function save(media,isNew,files){return function saveMediaItem(content,action,files){return umbRequestHelper.postSaveContent({restApiUrl:umbRequestHelper.getApiUrl("mediaApiBaseUrl","PostSave"),content:content,action:action,files:files,dataFormatter:function dataFormatter(c,a){return umbDataFormatter.formatMediaPostData(c,a)}})}(media,"save"+(isNew?"New":""),files)},addFolder:function addFolder(name,parentId){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("mediaApiBaseUrl","PostAddFolder"),{name:name,parentId:parentId}),"Failed to add folder")},getChildFolders:function getChildFolders(parentId){return parentId||(parentId=-1),umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("mediaApiBaseUrl","GetChildFolders",{id:parentId,pageNumber:1,pageSize:500})),"Failed to retrieve child folders for media item "+parentId)},emptyRecycleBin:function emptyRecycleBin(){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("mediaApiBaseUrl","EmptyRecycleBin")),"Failed to empty the recycle bin")},search:function search(query,pageNumber,pageSize,searchFrom){var args=[{query:query},{pageNumber:pageNumber},{pageSize:pageSize},{searchFrom:searchFrom}];return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("mediaApiBaseUrl","Search",args)),"Failed to retrieve media items for search: "+query)},getPagedReferences:function getPagedReferences(id,options){var defaults={pageSize:25,pageNumber:1,entityType:"DOCUMENT"};return void 0===options&&(options={}),Utilities.extend(defaults,options),options=defaults,umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("mediaApiBaseUrl","GetPagedReferences",{id:id,entityType:options.entityType,pageNumber:options.pageNumber,pageSize:options.pageSize})),"Failed to retrieve usages for media of id "+id)}}}),angular.module("umbraco.resources").factory("mediaTypeResource",function mediaTypeResource($q,$http,umbRequestHelper,umbDataFormatter,localizationService){return{getCount:function getCount(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("mediaTypeApiBaseUrl","GetCount")),"Failed to retrieve count")},getAvailableCompositeContentTypes:function getAvailableCompositeContentTypes(contentTypeId,filterContentTypes,filterPropertyTypes){filterContentTypes||(filterContentTypes=[]),filterPropertyTypes||(filterPropertyTypes=[]);var query={contentTypeId:contentTypeId,filterContentTypes:filterContentTypes,filterPropertyTypes:filterPropertyTypes};return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("mediaTypeApiBaseUrl","GetAvailableCompositeMediaTypes"),query),"Failed to retrieve data for content type id "+contentTypeId)},getWhereCompositionIsUsedInContentTypes:function getWhereCompositionIsUsedInContentTypes(contentTypeId){var query={contentTypeId:contentTypeId};return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("mediaTypeApiBaseUrl","GetWhereCompositionIsUsedInContentTypes"),query),"Failed to retrieve data for content type id "+contentTypeId)},getAllowedTypes:function getAllowedTypes(mediaId){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("mediaTypeApiBaseUrl","GetAllowedChildren",[{contentId:mediaId}])),"Failed to retrieve allowed types for media id "+mediaId)},getById:function getById(id){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("mediaTypeApiBaseUrl","GetById",[{id:id}])),"Failed to retrieve content type")},getAll:function getAll(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("mediaTypeApiBaseUrl","GetAll")),"Failed to retrieve all content types")},getScaffold:function getScaffold(parentId){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("mediaTypeApiBaseUrl","GetEmpty",{parentId:parentId})),"Failed to retrieve content type scaffold")},deleteById:function deleteById(id){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("mediaTypeApiBaseUrl","DeleteById",[{id:id}])),"Failed to retrieve content type")},deleteContainerById:function deleteContainerById(id){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("mediaTypeApiBaseUrl","DeleteContainer",[{id:id}])),"Failed to delete content type contaier")},save:function save(contentType){var saveModel=umbDataFormatter.formatContentTypePostData(contentType);return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("mediaTypeApiBaseUrl","PostSave"),saveModel),"Failed to save data for content type id "+contentType.id)},move:function move(args){if(!args)throw"args cannot be null";if(!args.parentId)throw"args.parentId cannot be null";if(!args.id)throw"args.id cannot be null";var promise=localizationService.localize("mediaType_moveFailed");return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("mediaTypeApiBaseUrl","PostMove"),{parentId:args.parentId,id:args.id},{responseType:"text"}),promise)},copy:function copy(args){if(!args)throw"args cannot be null";if(!args.parentId)throw"args.parentId cannot be null";if(!args.id)throw"args.id cannot be null";var promise=localizationService.localize("mediaType_copyFailed");return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("mediaTypeApiBaseUrl","PostCopy"),{parentId:args.parentId,id:args.id},{responseType:"text"}),promise)},createContainer:function createContainer(parentId,name){var promise=localizationService.localize("media_createFolderFailed",[parentId]);return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("mediaTypeApiBaseUrl","PostCreateContainer",{parentId:parentId,name:encodeURIComponent(name)})),promise)},renameContainer:function renameContainer(id,name){var promise=localizationService.localize("media_renameFolderFailed",[id]);return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("mediaTypeApiBaseUrl","PostRenameContainer",{id:id,name:name})),promise)}}}),angular.module("umbraco.resources").factory("memberResource",function memberResource($q,$http,umbDataFormatter,umbRequestHelper){return{getPagedResults:function getPagedResults(memberTypeAlias,options){"all-members"===memberTypeAlias&&(memberTypeAlias=null);var defaults={pageSize:25,pageNumber:1,filter:"",orderDirection:"Ascending",orderBy:"LoginName",orderBySystemField:!0};void 0===options&&(options={}),Utilities.extend(defaults,options),"asc"===(options=defaults).orderDirection?options.orderDirection="Ascending":"desc"===options.orderDirection&&(options.orderDirection="Descending");var params=[{pageNumber:options.pageNumber},{pageSize:options.pageSize},{orderBy:options.orderBy},{orderDirection:options.orderDirection},{orderBySystemField:function toBool(v){return Utilities.isNumber(v)?v>0:Utilities.isString(v)?"true"===v:"boolean"==typeof v&&v}(options.orderBySystemField)},{filter:options.filter}];return null!=memberTypeAlias&&params.push({memberTypeAlias:memberTypeAlias}),umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("memberApiBaseUrl","GetPagedResults",params)),"Failed to retrieve member paged result")},getListNode:function getListNode(listName){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("memberApiBaseUrl","GetListNodeDisplay",[{listName:listName}])),"Failed to retrieve data for member list "+listName)},getByKey:function getByKey(key){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("memberApiBaseUrl","GetByKey",[{key:key}])),"Failed to retrieve data for member id "+key)},deleteByKey:function deleteByKey(key){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("memberApiBaseUrl","DeleteByKey",[{key:key}])),"Failed to delete item "+key)},getScaffold:function getScaffold(alias){return alias?umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("memberApiBaseUrl","GetEmpty",[{contentTypeAlias:alias}])),"Failed to retrieve data for empty member item type "+alias):umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("memberApiBaseUrl","GetEmpty")),"Failed to retrieve data for empty member item type "+alias)},save:function save(member,isNew,files){return function saveMember(content,action,files){return umbRequestHelper.postSaveContent({restApiUrl:umbRequestHelper.getApiUrl("memberApiBaseUrl","PostSave"),content:content,action:action,files:files,dataFormatter:function dataFormatter(c,a){return umbDataFormatter.formatMemberPostData(c,a)}})}(member,"save"+(isNew?"New":""),files)}}}),angular.module("umbraco.resources").factory("memberGroupResource",function memberGroupResource($q,$http,umbRequestHelper){return{getGroups:function getGroups(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("memberGroupApiBaseUrl","GetAllGroups")),"Failed to retrieve data for member groups")},getById:function getById(id){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("memberGroupApiBaseUrl","GetById",[{id:id}])),"Failed to retrieve member group")},getByIds:function getByIds(ids){var idQuery="";return ids.forEach(function(id){return idQuery+="ids=".concat(id,"&")}),umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("memberGroupApiBaseUrl","GetByIds",idQuery)),"Failed to retrieve member group")},deleteById:function deleteById(id){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("memberGroupApiBaseUrl","DeleteById",[{id:id}])),"Failed to delete member group")},getScaffold:function getScaffold(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("memberGroupApiBaseUrl","GetEmpty")),"Failed to retrieve data for member group")},save:function save(memberGroup){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("memberGroupApiBaseUrl","PostSave"),memberGroup),"Failed to save data for member group, id: "+memberGroup.id)}}}),angular.module("umbraco.resources").factory("memberTypeResource",function memberTypeResource($q,$http,umbRequestHelper,umbDataFormatter,localizationService){return{getAvailableCompositeContentTypes:function getAvailableCompositeContentTypes(contentTypeId,filterContentTypes,filterPropertyTypes){filterContentTypes||(filterContentTypes=[]),filterPropertyTypes||(filterPropertyTypes=[]);var query="";return filterContentTypes.forEach(function(fct){return query+="filterContentTypes=".concat(fct,"&")}),0===filterContentTypes.length&&(query+="filterContentTypes=&"),filterPropertyTypes.forEach(function(fpt){return query+="filterPropertyTypes=".concat(fpt,"&")}),0===filterPropertyTypes.length&&(query+="filterPropertyTypes=&"),query+="contentTypeId="+contentTypeId,umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("memberTypeApiBaseUrl","GetAvailableCompositeMemberTypes",query)),"Failed to retrieve data for content type id "+contentTypeId)},getTypes:function getTypes(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("memberTypeApiBaseUrl","GetAllTypes")),"Failed to retrieve data for member types id")},getById:function getById(id){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("memberTypeApiBaseUrl","GetById",[{id:id}])),"Failed to retrieve content type")},deleteById:function deleteById(id){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("memberTypeApiBaseUrl","DeleteById",[{id:id}])),"Failed to delete member type")},getScaffold:function getScaffold(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("memberTypeApiBaseUrl","GetEmpty")),"Failed to retrieve content type scaffold")},save:function save(contentType){var saveModel=umbDataFormatter.formatContentTypePostData(contentType);return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("memberTypeApiBaseUrl","PostSave"),saveModel),"Failed to save data for member type id "+contentType.id)},copy:function copy(args){if(!args)throw"args cannot be null";if(!args.parentId)throw"args.parentId cannot be null";if(!args.id)throw"args.id cannot be null";var promise=localizationService.localize("memberType_copyFailed");return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("memberTypeApiBaseUrl","PostCopy"),{parentId:args.parentId,id:args.id},{responseType:"text"}),promise)}}}),angular.module("umbraco.resources").factory("modelsBuilderManagementResource",function modelsBuilderManagementResource($q,$http,umbRequestHelper){return{getModelsOutOfDateStatus:function getModelsOutOfDateStatus(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("modelsBuilderBaseUrl","GetModelsOutOfDateStatus")),"Failed to get models out-of-date status")},buildModels:function buildModels(){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("modelsBuilderBaseUrl","BuildModels")),"Failed to build models")},getDashboard:function getDashboard(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("modelsBuilderBaseUrl","GetDashboard")),"Failed to get dashboard")}}}),angular.module("umbraco.resources").factory("Umbraco.PropertyEditors.NestedContent.Resources",function($q,$http,umbRequestHelper){return{getContentTypes:function getContentTypes(){var url=Umbraco.Sys.ServerVariables.umbracoSettings.umbracoPath+"/backoffice/UmbracoApi/NestedContent/GetContentTypes";return umbRequestHelper.resourcePromise($http.get(url),"Failed to retrieve content types")}}}),angular.module("umbraco.resources").factory("ourPackageRepositoryResource",function ourPackageRepositoryResource($q,$http,umbDataFormatter,umbRequestHelper){var baseurl=Umbraco.Sys.ServerVariables.umbracoUrls.packagesRestApiBaseUrl;return{getDetails:function getDetails(packageId){return umbRequestHelper.resourcePromise($http.get(baseurl+"/"+packageId+"?version="+Umbraco.Sys.ServerVariables.application.version),"Failed to get package details")},getCategories:function getCategories(){return umbRequestHelper.resourcePromise($http.get(baseurl),"Failed to query packages")},getPopular:function getPopular(maxResults,category){return void 0===maxResults&&(maxResults=10),void 0===category&&(category=""),umbRequestHelper.resourcePromise($http.get(baseurl+"?pageIndex=0&pageSize="+maxResults+"&category="+category+"&order=Popular&version="+Umbraco.Sys.ServerVariables.application.version),"Failed to query packages")},search:function search(pageIndex,pageSize,orderBy,category,query,canceler){var httpConfig={};canceler&&(httpConfig.timeout=canceler),void 0===category&&(category=""),void 0===query&&(query="");var order=orderBy?"&order="+orderBy:"&order=Default";return umbRequestHelper.resourcePromise($http.get(baseurl+"?pageIndex="+pageIndex+"&pageSize="+pageSize+"&category="+category+"&query="+query+order+"&version="+Umbraco.Sys.ServerVariables.application.version),httpConfig,"Failed to query packages")}}}),angular.module("umbraco.resources").factory("packageResource",function packageResource($q,$http,umbDataFormatter,umbRequestHelper){return{getInstalled:function getInstalled(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("packageApiBaseUrl","GetInstalled")),"Failed to get installed packages")},runMigrations:function runMigrations(packageName){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("packageApiBaseUrl","RunMigrations",{packageName:packageName})),"Failed to run migrations for package")},getAllCreated:function getAllCreated(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("packageApiBaseUrl","GetCreatedPackages")),"Failed to get created packages")},getCreatedById:function getCreatedById(id){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("packageApiBaseUrl","GetCreatedPackageById",{id:id})),"Failed to get package")},getInstalledByName:function getInstalledByName(packageName){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("packageApiBaseUrl","GetInstalledPackageByName",{packageName:packageName})),"Failed to get package")},getEmpty:function getEmpty(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("packageApiBaseUrl","getEmpty")),"Failed to get scaffold")},savePackage:function savePackage(umbPackage){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("packageApiBaseUrl","PostSavePackage"),umbPackage),"Failed to create package")},deleteCreatedPackage:function deleteCreatedPackage(packageId){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("packageApiBaseUrl","DeleteCreatedPackage",{packageId:packageId})),"Failed to delete package "+packageId)}}}),angular.module("umbraco.resources").factory("publicAccessResource",function publicAccessResource($http,umbRequestHelper){return{getPublicAccess:function getPublicAccess(contentId){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("publicAccessApiBaseUrl","GetPublicAccess",{contentId:contentId})),"Failed to get public access for content item with id "+contentId)},updatePublicAccess:function updatePublicAccess(contentId,groups,usernames,loginPageId,errorPageId){var publicAccess={contentId:contentId,loginPageId:loginPageId,errorPageId:errorPageId};if(Utilities.isArray(groups)&&groups.length)publicAccess.groups=groups;else{if(!Utilities.isArray(usernames)||!usernames.length)throw"must supply either userName/password or roles";publicAccess.usernames=usernames}return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("publicAccessApiBaseUrl","PostPublicAccess",publicAccess)),"Failed to update public access for content item with id "+contentId)},removePublicAccess:function removePublicAccess(contentId){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("publicAccessApiBaseUrl","RemovePublicAccess",{contentId:contentId})),"Failed to remove public access for content item with id "+contentId)}}}),function(){angular.module("umbraco.resources").factory("redirectUrlsResource",function redirectUrlsResource($http,umbRequestHelper){return{searchRedirectUrls:function searchRedirectUrls(searchTerm,pageIndex,pageSize){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("redirectUrlManagementApiBaseUrl","SearchRedirectUrls",{searchTerm:searchTerm,page:pageIndex,pageSize:pageSize})),"Failed to retrieve data for searching redirect urls")},deleteRedirectUrl:function deleteRedirectUrl(id){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("redirectUrlManagementApiBaseUrl","DeleteRedirectUrl",{id:id})),"Failed to remove redirect")},toggleUrlTracker:function toggleUrlTracker(disable){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("redirectUrlManagementApiBaseUrl","ToggleUrlTracker",{disable:disable})),"Failed to toggle redirect url tracker")},getEnableState:function getEnableState(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("redirectUrlManagementApiBaseUrl","GetEnableState")),"Failed to retrieve data to check if the 301 redirect is enabled")},getRedirectsForContentItem:function getRedirectsForContentItem(contentUdi){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("redirectUrlManagementApiBaseUrl","RedirectUrlsForContentItem",{contentUdi:contentUdi})),"Failed to retrieve redirects for content: "+contentUdi)}}})}(),angular.module("umbraco.resources").factory("relationResource",function relationResource($q,$http,umbRequestHelper){return{getByChildId:function getByChildId(id,alias){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("relationApiBaseUrl","GetByChildId",{childId:id,relationTypeAlias:alias})),"Failed to get relation by child ID "+id+" and type of "+alias)},deleteById:function deleteById(id){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("relationApiBaseUrl","DeleteById",[{id:id}])),"Failed to delete item "+id)}}}),angular.module("umbraco.resources").factory("relationTypeResource",function relationTypeResource($q,$http,umbRequestHelper,umbDataFormatter){return{getById:function getById(id){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("relationTypeApiBaseUrl","GetById",[{id:id}])),"Failed to get item "+id)},getRelationObjectTypes:function getRelationObjectTypes(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("relationTypeApiBaseUrl","GetRelationObjectTypes")),"Failed to get object types")},save:function save(relationType){var saveModel=umbDataFormatter.formatRelationTypePostData(relationType);return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("relationTypeApiBaseUrl","PostSave"),saveModel),"Failed to save data for relation type ID"+relationType.id)},create:function create(relationType){var createModel=umbDataFormatter.formatRelationTypePostData(relationType);return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("relationTypeApiBaseUrl","PostCreate"),createModel),"Failed to create new realtion")},deleteById:function deleteById(id){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("relationTypeApiBaseUrl","DeleteById",[{id:id}])),"Failed to delete item "+id)},getPagedResults:function getPagedResults(id,options){var defaults={pageSize:25,pageNumber:1};return void 0===options&&(options={}),Utilities.extend(defaults,options),options=defaults,umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("relationTypeApiBaseUrl","GetPagedResults",{id:id,pageNumber:options.pageNumber,pageSize:options.pageSize})),"Failed to get paged relations for id "+id)}}}),angular.module("umbraco.resources").factory("sectionResource",function sectionResource($q,$http,umbRequestHelper){return{getSections:function getSections(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("sectionApiBaseUrl","GetSections")),"Failed to retrieve data for sections")},getAllSections:function getAllSections(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("sectionApiBaseUrl","GetAllSections")),"Failed to retrieve data for sections")}}}),angular.module("umbraco.resources").factory("stylesheetResource",function stylesheetResource($q,$http,umbRequestHelper){return{getAll:function getAll(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("stylesheetApiBaseUrl","GetAll")),"Failed to retrieve stylesheets ")},getRulesByName:function getRulesByName(name){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("stylesheetApiBaseUrl","GetRulesByName",[{name:name}])),"Failed to retrieve stylesheets ")}}}),angular.module("umbraco.resources").factory("templateResource",function templateResource($q,$http,umbDataFormatter,umbRequestHelper,localizationService){return{getById:function getById(id){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("templateApiBaseUrl","GetById",[{id:id}])),"Failed to retrieve data for template id "+id)},getByAlias:function getByAlias(alias){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("templateApiBaseUrl","GetByAlias",[{alias:alias}])),"Failed to retrieve data for template with alias: "+alias)},getAll:function getAll(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("templateApiBaseUrl","GetAll")),"Failed to retrieve data")},getScaffold:function getScaffold(id){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("templateApiBaseUrl","GetScaffold",[{id:id}])),"Failed to retrieve data for empty template")},deleteById:function deleteById(id){var promise=localizationService.localize("template_deleteByIdFailed",[id]);return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("templateApiBaseUrl","DeleteById",[{id:id}])),promise)},save:function save(template){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("templateApiBaseUrl","PostSave"),template),"Failed to save data for template id "+template.id)}}}),function(){angular.module("umbraco.resources").factory("templateQueryResource",function templateQueryResource($http,umbRequestHelper){return{getAllowedProperties:function getAllowedProperties(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("templateQueryApiBaseUrl","GetAllowedProperties")),"Failed to retrieve properties")},getContentTypes:function getContentTypes(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("templateQueryApiBaseUrl","GetContentTypes")),"Failed to retrieve content types")},getFilterConditions:function getFilterConditions(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("templateQueryApiBaseUrl","GetFilterConditions")),"Failed to retrieve filter conditions")},postTemplateQuery:function postTemplateQuery(query){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("templateQueryApiBaseUrl","PostTemplateQuery"),query),"Failed to retrieve query")}}})}(),function(){angular.module("umbraco.resources").factory("tourResource",function tourResource($http,umbRequestHelper,$q,umbDataFormatter){return{getTours:function getTours(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("tourApiBaseUrl","GetTours")),"Failed to get tours")},getToursForDoctype:function getToursForDoctype(doctypeAlias){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("tourApiBaseUrl","GetToursForDoctype",[{doctypeAlias:doctypeAlias}])),"Failed to get tours")}}})}(),angular.module("umbraco.resources").factory("treeResource",function treeResource($q,$http,umbRequestHelper){function getTreeMenuUrl(node){return node.menuUrl?node.menuUrl:null}return{loadMenu:function loadMenu(node){var treeMenuUrl=getTreeMenuUrl(node);return null!=treeMenuUrl&&treeMenuUrl.length>0?umbRequestHelper.resourcePromise($http.get(getTreeMenuUrl(node)),"Failed to retrieve data for a node's menu "+node.id):$q.reject({errorMsg:"No tree menu url defined for node "+node.id})},loadApplication:function loadApplication(options){if(!options||!options.section)throw"The object specified for does not contain a 'section' property";options.tree||(options.tree=""),options.isDialog||(options.isDialog=!1);var query="application="+options.section+"&tree="+options.tree+"&use="+(options.isDialog?"dialog":"main");return options.queryString&&(query+="&"+options.queryString),umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("treeApplicationApiBaseUrl","GetApplicationTrees",query)),"Failed to retrieve data for application tree "+options.section)},loadNodes:function loadNodes(options){if(!options||!options.node)throw"The options parameter object does not contain the required properties: 'node'";return umbRequestHelper.resourcePromise($http.get(function getTreeNodesUrl(node){if(!node.childNodesUrl)throw"No childNodesUrl property found on the tree node, cannot load child nodes";return node.childNodesUrl}(options.node)),"Failed to retrieve data for child nodes "+options.node.nodeId)}}}),function(){angular.module("umbraco.resources").factory("userGroupsResource",function userGroupsResource($http,umbRequestHelper,$q,umbDataFormatter){return{saveUserGroup:function saveUserGroup(userGroup,isNew){if(!userGroup)throw"userGroup not specified";var formattedSaveData=umbDataFormatter.formatUserGroupPostData(userGroup,"save"+(isNew?"New":""));return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("userGroupsApiBaseUrl","PostSaveUserGroup"),formattedSaveData),"Failed to save user group")},getUserGroup:function getUserGroup(id){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("userGroupsApiBaseUrl","GetUserGroup",{id:id})),"Failed to retrieve data for user group "+id)},getUserGroups:function getUserGroups(args){return args||(args={onlyCurrentUserGroups:!0}),void 0!==args.onlyCurrentUserGroups&&null!==args.onlyCurrentUserGroups||(args.onlyCurrentUserGroups=!0),umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("userGroupsApiBaseUrl","GetUserGroups",args)),"Failed to retrieve user groups")},getUserGroupScaffold:function getUserGroupScaffold(){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("userGroupsApiBaseUrl","GetEmptyUserGroup")),"Failed to get the user group scaffold")},deleteUserGroups:function deleteUserGroups(userGroupIds){var query="userGroupIds="+userGroupIds.join("&userGroupIds=");return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("userGroupsApiBaseUrl","PostDeleteUserGroups",query)),"Failed to delete user groups")}}})}(),function(){angular.module("umbraco.resources").factory("usersResource",function usersResource($http,umbRequestHelper,$q,umbDataFormatter){return{disableUsers:function disableUsers(userIds){if(!userIds)throw"userIds not specified";var qry="userIds="+userIds.join("&userIds=");return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("userApiBaseUrl","PostDisableUsers",qry)),"Failed to disable the users "+userIds.join(","))},enableUsers:function enableUsers(userIds){if(!userIds)throw"userIds not specified";var qry="userIds="+userIds.join("&userIds=");return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("userApiBaseUrl","PostEnableUsers",qry)),"Failed to enable the users "+userIds.join(","))},unlockUsers:function unlockUsers(userIds){if(!userIds)throw"userIds not specified";var qry="userIds="+userIds.join("&userIds=");return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("userApiBaseUrl","PostUnlockUsers",qry)),"Failed to enable the users "+userIds.join(","))},setUserGroupsOnUsers:function setUserGroupsOnUsers(userGroups,userIds){var userGroupAliases=userGroups.map(function(o){return o.alias}),query="userGroupAliases="+userGroupAliases.join("&userGroupAliases=")+"&userIds="+userIds.join("&userIds=");return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("userApiBaseUrl","PostSetUserGroupsOnUsers",query)),"Failed to set user groups "+userGroupAliases.join(",")+" on the users "+userIds.join(","))},getPagedResults:function getPagedResults(options){var defaults={pageSize:25,pageNumber:1,filter:"",orderDirection:"Ascending",orderBy:"Username",userGroups:[],userStates:[]};void 0===options&&(options={}),Utilities.extend(defaults,options),"asc"===(options=defaults).orderDirection?options.orderDirection="Ascending":"desc"===options.orderDirection&&(options.orderDirection="Descending");var params={pageNumber:options.pageNumber,pageSize:options.pageSize,orderBy:options.orderBy,orderDirection:options.orderDirection,filter:options.filter},qry=umbRequestHelper.dictionaryToQueryString(params);return options.userGroups.length>0&&(qry+="&userGroups="+options.userGroups.join("&userGroups=")),options.userStates.length>0&&(qry+="&userStates="+options.userStates.join("&userStates=")),umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("userApiBaseUrl","GetPagedUsers",qry)),"Failed to retrieve users paged result")},getUser:function getUser(userId){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("userApiBaseUrl","GetById",{id:userId})),"Failed to retrieve data for user "+userId)},getUsers:function getUsers(userIds){return umbRequestHelper.resourcePromise($http.get(umbRequestHelper.getApiUrl("userApiBaseUrl","GetByIds",{ids:userIds})),"Failed to retrieve data for users "+userIds)},createUser:function createUser(user){if(!user)throw"user not specified";var formattedSaveData=umbDataFormatter.formatUserPostData(user);return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("userApiBaseUrl","PostCreateUser"),formattedSaveData),"Failed to save user")},inviteUser:function inviteUser(user){if(!user)throw"user not specified";var formattedSaveData=umbDataFormatter.formatUserPostData(user);return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("userApiBaseUrl","PostInviteUser"),formattedSaveData),"Failed to invite user")},saveUser:function saveUser(user){if(!user)throw"user not specified";var formattedSaveData=umbDataFormatter.formatUserPostData(user);return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("userApiBaseUrl","PostSaveUser"),formattedSaveData),"Failed to save user")},changePassword:function changePassword(changePasswordModel){if(!changePasswordModel)throw"password model not specified";var formattedPasswordData=umbDataFormatter.formatChangePasswordModel(changePasswordModel);return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("userApiBaseUrl","PostChangePassword"),formattedPasswordData),"Failed to save user")},deleteNonLoggedInUser:function deleteNonLoggedInUser(userId){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("userApiBaseUrl","PostDeleteNonLoggedInUser",{id:userId})),"Failed to delete the user "+userId)},clearAvatar:function clearAvatar(userId){return umbRequestHelper.resourcePromise($http.post(umbRequestHelper.getApiUrl("userApiBaseUrl","PostClearAvatar",{id:userId})),"Failed to clear the user avatar "+userId)}}})}()}();