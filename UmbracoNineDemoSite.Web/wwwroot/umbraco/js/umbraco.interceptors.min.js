!function(){"use strict";function _typeof(obj){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function _typeof(obj){return typeof obj}:function _typeof(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}angular.module("umbraco.interceptors",[]).config(["$httpProvider",function($httpProvider){$httpProvider.defaults.xsrfHeaderName="X-UMB-XSRF-TOKEN",$httpProvider.defaults.xsrfCookieName="UMB-XSRF-TOKEN",$httpProvider.interceptors.push("securityInterceptor"),$httpProvider.interceptors.push("requiredHeadersInterceptor"),$httpProvider.interceptors.push("doNotPostDollarVariablesOnPostRequestInterceptor"),$httpProvider.interceptors.push("cultureRequestInterceptor")}]),function(){angular.module("umbraco.interceptors").factory("cultureRequestInterceptor",function cultureRequestInterceptor($injector){return{request:function request(config){if(!Umbraco.Sys.ServerVariables.umbracoSettings.umbracoPath)return config;if(!config.url.match(RegExp(Umbraco.Sys.ServerVariables.umbracoSettings.umbracoPath+"/backoffice/","i")))return config;var $routeParams=$injector.get("$routeParams");return $routeParams&&(config.headers["X-UMB-CULTURE"]=$routeParams.cculture?$routeParams.cculture:$routeParams.mculture,config.headers["X-UMB-SEGMENT"]=$routeParams.csegment?$routeParams.csegment:null),config}}})}(),function(){function transform(data){!function removeProperty(obj,propertyPrefix){for(var property in obj)obj.hasOwnProperty(property)&&(property.startsWith(propertyPrefix)&&void 0!==obj[property]&&(obj[property]=void 0),"object"===_typeof(obj[property])&&removeProperty(obj[property],propertyPrefix))}(data,"$")}angular.module("umbraco.interceptors").factory("doNotPostDollarVariablesOnPostRequestInterceptor",function doNotPostDollarVariablesRequestInterceptor($q,urlHelper){return{request:function request(config){if("POST"===config.method){var clone=Utilities.copy(config);return transform(clone.data),clone}return config}}})}(),function(){angular.module("umbraco.interceptors").value("requestInterceptorFilter",function requestInterceptorFilter(){return["www.gravatar.com"]})}(),function(){angular.module("umbraco.interceptors").factory("requiredHeadersInterceptor",function requiredHeadersInterceptor($q,urlHelper){return{request:function request(config){config.headers["X-Requested-With"]="XMLHttpRequest";var queryStrings=urlHelper.getQueryStringParams();return"true"!==queryStrings.umbDebug&&"true"!==queryStrings.umbdebug||(config.headers["X-UMB-DEBUG"]="true"),config}}})}(),function(){angular.module("umbraco.interceptors").factory("securityInterceptor",function securityInterceptor($q,$injector,requestRetryQueue,notificationsService,eventsService,requestInterceptorFilter){return{response:function response(_response){var headers=_response.headers();return headers["x-umb-user-seconds"]&&$injector.get("userService").setUserTimeout(headers["x-umb-user-seconds"]),headers["x-umb-user-modified"]&&eventsService.emit("app.userRefresh"),_response},responseError:function responseError(rejection){var config=rejection.config?rejection.config:{};if("ignore"===(config.headers?config.headers:{})["x-umb-ignore-error"]||!0===config.umbIgnoreErrors||Utilities.isArray(config.umbIgnoreStatus)&&-1!==config.umbIgnoreStatus.indexOf(rejection.status))return $q.reject(rejection);if(config.url&&_.find(requestInterceptorFilter(),function(val){return config.url.indexOf(val)>0}))return $q.reject(rejection);if(401===rejection.status){var getCurrentUserPath=$injector.get("umbRequestHelper").getApiUrl("authenticationApiBaseUrl","GetCurrentUser");if(!rejection.config.url.endsWith(getCurrentUserPath))return $injector.get("userService").getCurrentUser().then(function(user){var userName=user?user.name:null;return requestRetryQueue.pushRetryFn("unauthorized-server",userName,function retryRequest(){return $injector.get("$http")(rejection.config)})})}else if(404===rejection.status){var errMsg="The URL returned a 404 (not found): <br/><i>"+rejection.config.url.split("?")[0]+"</i>";rejection.data&&rejection.data.ExceptionMessage&&(errMsg+="<br/> with error: <br/><i>"+rejection.data.ExceptionMessage+"</i>"),notificationsService.error("Request error",errMsg)}else if(403===rejection.status){var msg="Unauthorized access to URL: <br/><i>"+rejection.config.url.split("?")[0]+"</i><br/>Contact your administrator for information.";notificationsService.error("Authorization error",msg)}return $q.reject(rejection)}}})}()}();